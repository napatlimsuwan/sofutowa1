68K GAS  outchr.s 			page 1


   1               	
   2               	.global outbyte                 | Export inbyte function to other files
   3               	
   4               	.text
   5               	.even
   6               	
   7               	outbyte:
   8               	    ** First argument (long word size) from C program is offset 4 from the top of the stack **
   9               	    ** to get the byte size argument, we need to offset 3 more bytes from the beginning of the firs
  10               	    ** so 7 is added to the stack pointer to get the byte sized argument sent from the C program **
  11 0000 13EF 0007 	    move.b  7(%sp), BUF_OUTBYTE | Get outbyte argument from stack
  11      0000 0000 
  12 0008 48E7 F000 	    movem.l %d0-%d3, -(%sp)     | Save registers that will be used
  13               	outbyte_start:
  14 000c 7002      	    move.l	#2, %d0             | System call number for PUTSTRING
  15 000e 7200      	    move.l	#0, %d1             | Serial port number = 0
  16 0010 243C 0000 	    move.l	#BUF_OUTBYTE, %d2   | Buffer address
  16      0000 
  17 0016 7601      	    move.l	#1, %d3             | Buffer size = 1 byte
  18 0018 4E40      	    trap	#0                  | Initiate system call to PUTSTRING
  19               	
  20 001a 0C00 0001 	    cmpi.b	#1, %d0             | Check if PUTSTRING was successful (1 byte read)
  21 001e 6600 FFEC 	    bne     outbyte_start       | If not, try again
  22               	
  23 0022 4CDF 000F 	    movem.l (%sp)+, %d0-%d3     | Restore registers
  24 0026 4E75      	    rts                         | Return from function
  25               	
  26               	.section .bss
  27 0000 00        	BUF_OUTBYTE:    .ds.b 1         | 1 byte Buffer for outbyte function
  28 0001 00        	    .even
  29               	
  30               	/*
  31               	.global outbyte                 | Export outbyte function to other files
  32               	
  33               	.text
  34               	.even
  35               	
  36               	outbyte:
  37               	    move.b  7(%sp), %d0          | Get outbyte argument from stack into %d0
  38               	    movem.l %d0-%d3, -(%sp)      | Save registers that will be used
  39               	retry:
  40               	    move.l  #2, %d0              | System call number for PUTSTRING
  41               	    move.l  #0, %d1              | Serial port number = 0
  42               	    lea     BUF_OUTBYTE, %a0     | Load address of buffer into %a0
  43               	    move.b  %d0, (%a0)           | Move byte to buffer
  44               	    move.l  %a0, %d2             | Buffer address
  45               	    move.l  #1, %d3              | Buffer size = 1 byte
  46               	    trap    #0                   | Initiate system call to PUTSTRING
  47               	
  48               	    tst.b   BUF_OUTBYTE          | Test if a byte was successfully written
  49               	    beq     retry                | If not, try again
  50               	
  51               	    movem.l (%sp)+, %d0-%d3      | Restore registers
  52               	    rts                          | Return from function
  53               	
  54               	.section .bss
  55               	BUF_OUTBYTE:    .ds.b 1         | 1 byte Buffer for outbyte function
68K GAS  outchr.s 			page 2


  56               	.even
  57               	*/
68K GAS  outchr.s 			page 3


DEFINED SYMBOLS
            outchr.s:7      .text:0000000000000000 outbyte
            outchr.s:27     .bss:0000000000000000 BUF_OUTBYTE
            outchr.s:13     .text:000000000000000c outbyte_start

NO UNDEFINED SYMBOLS
