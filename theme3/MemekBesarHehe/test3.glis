68K GAS  /tmp/ccdyPHKc.s 			page 1


   1               	#NO_APP
   2               		.file	"test3.c"
   3               		.text
   4               	.Ltext0:
   5               		.cfi_sections	.debug_frame
   6               		.align	2
   7               		.globl	fast_printf
   8               		.type	fast_printf, @function
   9               	fast_printf:
  10               	.LVL0:
  11               	.LFB3:
  12               		.file 1 "test3.c"
   1:test3.c       **** #include <stdarg.h>
   2:test3.c       **** #include <stdio.h>
   3:test3.c       **** #include <stdlib.h>
   4:test3.c       **** #include <stdbool.h>
   5:test3.c       **** #include <string.h>
   6:test3.c       **** #include "mtk_c.h"
   7:test3.c       **** 
   8:test3.c       **** // Control Characters
   9:test3.c       **** #define BACKSPACE "\x7f"           // Backspace character
  10:test3.c       **** #define ENTER "\x0d"               // Enter/Return character
  11:test3.c       **** #define ESC "\x1b"                 // Escape character
  12:test3.c       **** 
  13:test3.c       **** // Cursor Control
  14:test3.c       **** #define LOCATEHOME ESC "[H"        // Move cursor to the home position
  15:test3.c       **** #define LOCATECURSOR ESC "[%d;%df" // Move cursor to a specific position
  16:test3.c       **** #define CURSORMOVE ESC "[%d;%dH"   // Move cursor to row %d, column %d
  17:test3.c       **** #define CURSORMOVENUP ESC "[%dA"   // Move cursor up by %d lines
  18:test3.c       **** #define CURSORMOVENDOWN ESC "[%dB" // Move cursor down by %d lines
  19:test3.c       **** #define CURSORMOVENRIGHT ESC "[%dC"// Move cursor right by %d columns
  20:test3.c       **** #define CURSORMOVENLEFT ESC "[%dD" // Move cursor left by %d columns
  21:test3.c       **** #define CURSORINVISIBLE ESC "[?25l"// Make cursor invisible
  22:test3.c       **** #define CURSORVISIBLE ESC "[?25h"  // Make cursor visible
  23:test3.c       **** #define SAVECURSORLOC ESC "7"      // Save current cursor position
  24:test3.c       **** #define RETCURSORLOC ESC "8"       // Restore saved cursor position
  25:test3.c       **** 
  26:test3.c       **** // Screen Control
  27:test3.c       **** #define SETSCREENSIZE ESC "[8;%d;%dt" // Set screen size (rows and columns)
  28:test3.c       **** #define CLEARDISPLAY ESC "[H" ESC "[2J" // Clear entire screen and move cursor to home
  29:test3.c       **** #define DELETELINEAFTERCURSOR ESC "[0K" // Delete line content after cursor
  30:test3.c       **** #define DELETELINEBEFORECURSOR ESC "[1K" // Delete line content before cursor
  31:test3.c       **** #define DELETELINEECURSOR ESC "[2K"     // Delete entire line content at cursor
  32:test3.c       **** #define DELETESCREENAFTERCURSOR ESC "[0J" // Clear screen after the cursor
  33:test3.c       **** #define DELETESCREENBEFORECURSOR ESC "[1J" // Clear screen before the cursor
  34:test3.c       **** #define DELETESCREEN ESC "[2J"           // Clear the entire screen
  35:test3.c       **** #define CHANGESCROLLROWS ESC "[%d;%dr"   // Set scrollable region of the screen
  36:test3.c       **** #define RESETSCROLLROWS ESC "[r"         // Reset scrollable region
  37:test3.c       **** 
  38:test3.c       **** // Line and Character Deletion
  39:test3.c       **** #define DELETENCHAR ESC "[%dP"          // Delete %d characters at cursor
  40:test3.c       **** 
  41:test3.c       **** // Color and Graphics Rendition
  42:test3.c       **** #define SGR ESC "[%dm"                  // Select graphic rendition (e.g., text attributes)
  43:test3.c       **** #define RESETSGR ESC "[0m"              // Reset graphic rendition to default
  44:test3.c       **** #define SGRCOL256 ESC "[38;5;%dm"       // Set 256-color foreground
  45:test3.c       **** #define SGRBGCOL256 ESC "[48;5;%dm"     // Set 256-color background
68K GAS  /tmp/ccdyPHKc.s 			page 2


  46:test3.c       **** #define SGRCOL24B ESC "[38;2;%d;%d;%dm" // Set 24-bit RGB foreground
  47:test3.c       **** #define SGRBGCOL24B ESC "[48;2;%d;%d;%dm" // Set 24-bit RGB background
  48:test3.c       **** 
  49:test3.c       **** // Character Set Switching
  50:test3.c       **** #define DECLINEDRAW ESC "(0"            // Switch to DEC line drawing character set
  51:test3.c       **** #define ASCIIDRAW ESC "(B"              // Switch to ASCII character set
  52:test3.c       **** 
  53:test3.c       **** // Mode Control
  54:test3.c       **** #define DECSETMODE ESC "[?%dh"          // Set terminal mode
  55:test3.c       **** #define DECRESETMODE ESC "[?%dl"        // Reset terminal mode
  56:test3.c       **** #define SETLRMARGIN ESC "[?69h"         // Enable left/right margin mode
  57:test3.c       **** 
  58:test3.c       **** // Terminal Attributes
  59:test3.c       **** #define DECTCEM 25                      // Terminal cursor enable mode (use with DECSETMODE/DECRESE
  60:test3.c       **** 
  61:test3.c       **** // Miscellaneous
  62:test3.c       **** #define MAX 1024                        // Maximum buffer size
  63:test3.c       **** #define SECONDDIVIDER 100               // Arbitrary constant, likely for time conversions
  64:test3.c       **** #define BUFLEN 100                      // Buffer length
  65:test3.c       **** #define TOTALTIPS 4                     // Total number of tips
  66:test3.c       **** 
  67:test3.c       **** /*
  68:test3.c       **** // Global Variables and Constants
  69:test3.c       **** 
  70:test3.c       **** // Shared Resource Variables (Used in Multiple Tasks)
  71:test3.c       **** 
  72:test3.c       **** // Input and Command Management
  73:test3.c       **** // Used in command_bar(), main_app()
  74:test3.c       **** bool inappcom[2] = {true, true};       // Track if clients are in application communication mode
  75:test3.c       **** char keypress[2] = {-1, -1};           // Last keypress for each client
  76:test3.c       **** char last_keybuf[2][10];               // Buffer for storing last key sequences
  77:test3.c       **** int last_keybuf_len[2];                // Length of the last key buffer
  78:test3.c       **** char msg_buf[2][BUFLEN];               // Buffer for storing messages
  79:test3.c       **** unsigned int msg_buf_len[2];           // Length of the message buffer
  80:test3.c       **** char cmd_buf[2][BUFLEN];               // Buffer for storing commands
  81:test3.c       **** unsigned int cmd_buf_len[2];           // Length of the command buffer
  82:test3.c       **** 
  83:test3.c       **** // Tip Management
  84:test3.c       **** // Used in command_bar(), main_app()
  85:test3.c       **** int tip_num[2];                        // Indicates the current tip being displayed for each client
  86:test3.c       **** 
  87:test3.c       **** // Screen and UI Configuration
  88:test3.c       **** // Used in runtime_clock(), command_bar(), main_app()
  89:test3.c       **** unsigned int screen_height = 35;       // Height of the screen
  90:test3.c       **** unsigned int screen_width = 203;       // Width of the screen
  91:test3.c       **** // Used in runtime_clock(), main_app()
  92:test3.c       **** unsigned int chat_row = 1;             // Row for chat content display
  93:test3.c       **** 
  94:test3.c       **** // Other Shared Resources
  95:test3.c       **** // Used in runtime_clock(), command_bar(), main_app()
  96:test3.c       **** char printf_buf[BUFLEN];               // Buffer for formatted print outputs
  97:test3.c       **** 
  98:test3.c       **** // Non-Shared Variables and Constants
  99:test3.c       **** 
 100:test3.c       **** // Indices for managing two clients (Client1 and Client2)
 101:test3.c       **** int i, j; 
 102:test3.c       **** 
68K GAS  /tmp/ccdyPHKc.s 			page 3


 103:test3.c       **** // Screen and Mode States
 104:test3.c       **** bool in_alt_screen[2] = {false, false}; // Track if clients are in the alternate screen
 105:test3.c       **** 
 106:test3.c       **** // Client Nicknames
 107:test3.c       **** char client_nickname_color[2] = {11, 14}; // Color assigned to user nicknames
 108:test3.c       **** char client_nickname[2][10] = {"USER1", "USER2"}; // Default user nicknames
 109:test3.c       **** bool client_nickname_set[2] = {false, false}; // Track if nicknames are set
 110:test3.c       **** 
 111:test3.c       **** // Terminal Input Handling
 112:test3.c       **** int term_input_col[2]; // Current input column for each client
 113:test3.c       **** 
 114:test3.c       **** // Terminal Control Sequences
 115:test3.c       **** const char term_backspace[] = "\b \b";  // Backspace sequence for terminal
 116:test3.c       **** const char term_line10[] = "\x1b[10;H"; // Move to line 10
 117:test3.c       **** 
 118:test3.c       **** // Prompts
 119:test3.c       **** const char msg_input_prompt[] = "Your message"; // Prompt for message input
 120:test3.c       **** const char command_prompt[] = "Command: ";      // Prompt for command input
 121:test3.c       **** 
 122:test3.c       **** // Tips
 123:test3.c       **** const char tip_list[TOTALTIPS][BUFLEN] = {
 124:test3.c       ****     "Press ESC to enter command mode",               // Tip 1
 125:test3.c       ****     "Maximum length of each message is 100 characters", // Tip 2
 126:test3.c       ****     "Functionality of the arrow keys is suppressed", // Tip 3
 127:test3.c       ****     "Only help command is available for now"         // Tip 4
 128:test3.c       **** };
 129:test3.c       **** 
 130:test3.c       **** // Help Text
 131:test3.c       **** const char help_text[] = 
 132:test3.c       ****     "\n\x1b[1;4mManual page for the chat application\x1b[0m\n\n"
 133:test3.c       ****     "This page should be populated when the application is finished.\n"
 134:test3.c       ****     "Please press any key to go back.\n";
 135:test3.c       **** */
 136:test3.c       **** 
 137:test3.c       **** // Global Variables and Constants
 138:test3.c       **** 
 139:test3.c       **** // Indices for managing two clients (user1 and user2)
 140:test3.c       **** int i, j; 
 141:test3.c       **** 
 142:test3.c       **** // Screen and Mode States
 143:test3.c       **** bool in_alt_screen[2] = {false, false}; // Track if clients are in the alternate screen
 144:test3.c       **** bool inappcom[2] = {true, true};       // Track if clients are in application communication mode
 145:test3.c       **** 
 146:test3.c       **** // Input Tracking
 147:test3.c       **** char keypress[2] = {-1, -1};           // Last keypress for each client
 148:test3.c       **** char last_keybuf[2][10];               // Buffer for storing last key sequences
 149:test3.c       **** int last_keybuf_len[2];                // Length of the last key buffer
 150:test3.c       **** 
 151:test3.c       **** // Client Nicknames
 152:test3.c       **** char client_nickname_color[2] = {11, 14}; // Color assigned to user nicknames
 153:test3.c       **** char client_nickname[2][10] = {"USER1", "USER2"}; // Default user nicknames
 154:test3.c       **** bool client_nickname_set[2] = {false, false}; // Track if nicknames are set
 155:test3.c       **** 
 156:test3.c       **** // Terminal Input Handling
 157:test3.c       **** int term_input_col[2]; // Current input column for each client
 158:test3.c       **** 
 159:test3.c       **** // Message Buffers
68K GAS  /tmp/ccdyPHKc.s 			page 4


 160:test3.c       **** char msg_buf[2][BUFLEN];          // Buffer for storing messages
 161:test3.c       **** unsigned int msg_buf_len[2];      // Length of the message buffer
 162:test3.c       **** char cmd_buf[2][BUFLEN];          // Buffer for storing commands
 163:test3.c       **** unsigned int cmd_buf_len[2];      // Length of the command buffer
 164:test3.c       **** char printf_buf[BUFLEN];          // Buffer for formatted print outputs
 165:test3.c       **** 
 166:test3.c       **** // Tip Management
 167:test3.c       **** int tip_num[2];                   // Index of the current tip for each client
 168:test3.c       **** 
 169:test3.c       **** // Screen Configuration
 170:test3.c       **** unsigned int screen_height = 35;  // Height of the screen
 171:test3.c       **** unsigned int screen_width = 203;  // Width of the screen
 172:test3.c       **** unsigned int chat_row = 1;        // Row for chat content display
 173:test3.c       **** 
 174:test3.c       **** // Terminal Control Sequences
 175:test3.c       **** const char term_backspace[] = "\b \b";  // Backspace sequence for terminal
 176:test3.c       **** const char term_line10[] = "\x1b[10;H"; // Move to line 10
 177:test3.c       **** 
 178:test3.c       **** // Prompts
 179:test3.c       **** const char msg_input_prompt[] = "Your message"; // Prompt for message input
 180:test3.c       **** const char command_prompt[] = "Command: ";      // Prompt for command input
 181:test3.c       **** 
 182:test3.c       **** // Tips
 183:test3.c       **** const char tip_list[TOTALTIPS][BUFLEN] = {
 184:test3.c       ****     "Press ESC to enter command mode",               // Tip 1
 185:test3.c       ****     "Maximum length of each message is 100 characters", // Tip 2
 186:test3.c       ****     "Functionality of the arrow keys is suppressed", // Tip 3
 187:test3.c       ****     "Only help command is available for now"         // Tip 4
 188:test3.c       **** };
 189:test3.c       **** 
 190:test3.c       **** // Help Text
 191:test3.c       **** const char help_text[] = 
 192:test3.c       ****     "\n\x1b[1;4mManual page for the chat application\x1b[0m\n\n"
 193:test3.c       ****     "This page should be populated when the application is finished.\n"
 194:test3.c       ****     "Please press any key to go back.\n";
 195:test3.c       **** 
 196:test3.c       **** // Fast printf function for output to specific file descriptors
 197:test3.c       **** 
 198:test3.c       **** void fast_printf(const bool ch0, const bool ch1, const char *fmt, ...)
 199:test3.c       **** {
  13               		.loc 1 199 1 view -0
  14               		.cfi_startproc
  15               		.loc 1 199 1 is_stmt 0 view .LVU1
  16 0000 4E56 0000 		link.w %fp,#0
  17               		.cfi_offset 14, -8
  18               		.cfi_def_cfa 14, 8
  19               	.LVL1:
  20               		.loc 1 199 1 view .LVU2
  21 0004 48E7 3800 		movem.l #14336,-(%sp)
  22               	.LVL2:
  23               		.cfi_offset 2, -20
  24               		.cfi_offset 3, -16
  25               		.cfi_offset 4, -12
  26               		.loc 1 199 1 view .LVU3
  27 0008 182E 000B 		move.b 11(%fp),%d4
  28 000c 162E 000F 		move.b 15(%fp),%d3
 200:test3.c       ****     // Declare a variable to store the length of the formatted string
68K GAS  /tmp/ccdyPHKc.s 			page 5


 201:test3.c       ****     int printf_buf_len;
  29               		.loc 1 201 5 is_stmt 1 view .LVU4
 202:test3.c       **** 
 203:test3.c       ****     // Initialize a variable argument list to process variadic arguments
 204:test3.c       ****     va_list args;
  30               		.loc 1 204 5 view .LVU5
 205:test3.c       ****     va_start(args, fmt); // Start processing arguments after 'fmt'
  31               		.loc 1 205 5 view .LVU6
  32               	.LVL3:
 206:test3.c       **** 
 207:test3.c       ****     // Format the input string and arguments into 'printf_buf'
 208:test3.c       ****     vsprintf(printf_buf, fmt, args);
  33               		.loc 1 208 5 view .LVU7
  34 0010 486E 0014 		pea 20(%fp)
  35 0014 2F2E 0010 		move.l 16(%fp),-(%sp)
  36 0018 4879 0000 		pea printf_buf
  36      0000 
  37 001e 4EB9 0000 		jsr vsprintf
  37      0000 
  38               	.LVL4:
 209:test3.c       **** 
 210:test3.c       ****     // Calculate the length of the formatted string
 211:test3.c       ****     printf_buf_len = strlen(printf_buf);
  39               		.loc 1 211 5 view .LVU8
  40               		.loc 1 211 22 is_stmt 0 view .LVU9
  41 0024 4879 0000 		pea printf_buf
  41      0000 
  42 002a 4EB9 0000 		jsr strlen
  42      0000 
  43               	.LVL5:
  44 0030 2400      		move.l %d0,%d2
  45               	.LVL6:
 212:test3.c       **** 
 213:test3.c       ****     // Write the formatted string to file descriptor 3 if 'ch0' is true
 214:test3.c       ****     if (ch0)
  46               		.loc 1 214 5 is_stmt 1 view .LVU10
  47               		.loc 1 214 8 is_stmt 0 view .LVU11
  48 0032 4FEF 0010 		lea (16,%sp),%sp
  49 0036 4A04      		tst.b %d4
  50 0038 662E      		jne .L12
 215:test3.c       ****         write(3, &printf_buf, printf_buf_len);
 216:test3.c       **** 
 217:test3.c       ****     // Write the formatted string to file descriptor 4 if 'ch1' is true
 218:test3.c       ****     if (ch1)
  51               		.loc 1 218 5 is_stmt 1 view .LVU12
  52               		.loc 1 218 8 is_stmt 0 view .LVU13
  53 003a 4A03      		tst.b %d3
  54 003c 660A      		jne .L13
  55               	.LVL7:
  56               	.L1:
 219:test3.c       ****         write(4, &printf_buf, printf_buf_len);
 220:test3.c       **** 
 221:test3.c       ****     // Clean up the variable argument list
 222:test3.c       ****     va_end(args);
 223:test3.c       **** }
  57               		.loc 1 223 1 view .LVU14
  58 003e 4CEE 001C 		movem.l -12(%fp),#28
68K GAS  /tmp/ccdyPHKc.s 			page 6


  58      FFF4 
  59               	.LVL8:
  60               		.loc 1 223 1 view .LVU15
  61 0044 4E5E      		unlk %fp
  62               	.LVL9:
  63               		.loc 1 223 1 view .LVU16
  64 0046 4E75      		rts
  65               	.LVL10:
  66               	.L13:
  67               	.LBB2:
 219:test3.c       ****         write(4, &printf_buf, printf_buf_len);
  68               		.loc 1 219 9 is_stmt 1 view .LVU17
  69 0048 2F02      		move.l %d2,-(%sp)
  70 004a 4879 0000 		pea printf_buf
  70      0000 
  71 0050 4878 0004 		pea 4.w
  72 0054 4EB9 0000 		jsr write
  72      0000 
  73               	.LVL11:
  74 005a 4FEF 000C 		lea (12,%sp),%sp
  75               	.LBE2:
 222:test3.c       **** }
  76               		.loc 1 222 5 view .LVU18
  77               		.loc 1 223 1 is_stmt 0 view .LVU19
  78 005e 4CEE 001C 		movem.l -12(%fp),#28
  78      FFF4 
  79               	.LVL12:
  80               		.loc 1 223 1 view .LVU20
  81 0064 4E5E      		unlk %fp
  82               	.LVL13:
  83               		.loc 1 223 1 view .LVU21
  84 0066 4E75      		rts
  85               	.LVL14:
  86               	.L12:
  87               	.LBB3:
 215:test3.c       ****         write(3, &printf_buf, printf_buf_len);
  88               		.loc 1 215 9 is_stmt 1 view .LVU22
  89 0068 2F00      		move.l %d0,-(%sp)
  90 006a 4879 0000 		pea printf_buf
  90      0000 
  91 0070 4878 0003 		pea 3.w
  92 0074 4EB9 0000 		jsr write
  92      0000 
  93               	.LVL15:
 215:test3.c       ****         write(3, &printf_buf, printf_buf_len);
  94               		.loc 1 215 9 is_stmt 0 view .LVU23
  95 007a 4FEF 000C 		lea (12,%sp),%sp
  96               	.LBE3:
 218:test3.c       ****         write(4, &printf_buf, printf_buf_len);
  97               		.loc 1 218 5 is_stmt 1 view .LVU24
 218:test3.c       ****         write(4, &printf_buf, printf_buf_len);
  98               		.loc 1 218 8 is_stmt 0 view .LVU25
  99 007e 4A03      		tst.b %d3
 100 0080 67BC      		jeq .L1
 101 0082 60C4      		jra .L13
 102               		.cfi_endproc
 103               	.LFE3:
68K GAS  /tmp/ccdyPHKc.s 			page 7


 104               		.size	fast_printf, .-fast_printf
 105               		.globl	__udivsi3
 106               		.section	.rodata.str1.1,"aMS",@progbits,1
 107               	.LC0:
 108 0000 1B5B 383B 		.string	"\033[8;%d;%dt"
 108      2564 3B25 
 108      6474 00
 109               	.LC1:
 110 000b 1B5B 3F32 		.string	"\033[?25l"
 110      356C 00
 111               	.LC2:
 112 0012 1B37 00   		.string	"\0337"
 113               	.LC3:
 114 0015 1B5B 481B 		.string	"\033[H\033[47;30mRuntime %02d:%02d:%02d \033[K\033[0m"
 114      5B34 373B 
 114      3330 6D52 
 114      756E 7469 
 114      6D65 2025 
 115               	.LC4:
 116 003f 1B38 00   		.string	"\0338"
 117               	.LC5:
 118 0042 1B5B 3F32 		.string	"\033[?25h"
 118      3568 00
 119               		.text
 120               		.align	2
 121               		.globl	runtime_clock
 122               		.type	runtime_clock, @function
 123               	runtime_clock:
 124               	.LFB4:
 224:test3.c       **** 
 225:test3.c       **** // Function to continuously update and display the runtime clock
 226:test3.c       **** void runtime_clock()
 227:test3.c       **** {
 125               		.loc 1 227 1 is_stmt 1 view -0
 126               		.cfi_startproc
 127 0084 48E7 3E3C 		movem.l #15932,-(%sp)
 128               		.cfi_def_cfa_offset 40
 129               		.cfi_offset 2, -40
 130               		.cfi_offset 3, -36
 131               		.cfi_offset 4, -32
 132               		.cfi_offset 5, -28
 133               		.cfi_offset 6, -24
 134               		.cfi_offset 10, -20
 135               		.cfi_offset 11, -16
 136               		.cfi_offset 12, -12
 137               		.cfi_offset 13, -8
 228:test3.c       ****     // Initialize time variables
 229:test3.c       ****     unsigned int hr = 0, min = 0, sec = 0, last_runtime = 0;
 138               		.loc 1 229 5 view .LVU27
 139               	.LVL16:
 140               		.loc 1 229 44 is_stmt 0 view .LVU28
 141 0088 7800      		moveq #0,%d4
 142               		.loc 1 229 35 view .LVU29
 143 008a 7400      		moveq #0,%d2
 144               		.loc 1 229 26 view .LVU30
 145 008c 7A00      		moveq #0,%d5
 146               		.loc 1 229 18 view .LVU31
68K GAS  /tmp/ccdyPHKc.s 			page 8


 147 008e 7C00      		moveq #0,%d6
 148 0090 49F9 0000 		lea P,%a4
 148      0000 
 149 0096 4BF9 0000 		lea __udivsi3,%a5
 149      0000 
 150 009c 45FA FF62 		lea fast_printf,%a2
 151 00a0 47F9 0000 		lea V,%a3
 151      0000 
 152               	.LVL17:
 153               	.L17:
 230:test3.c       **** 
 231:test3.c       ****     // Infinite loop to keep the runtime clock running
 232:test3.c       ****     while (1)
 154               		.loc 1 232 5 is_stmt 1 view .LVU32
 233:test3.c       ****     {
 234:test3.c       ****         // Lock semaphores to ensure safe access to shared resources
 235:test3.c       ****         P(0);
 155               		.loc 1 235 9 view .LVU33
 156 00a6 42A7      		clr.l -(%sp)
 157               		.cfi_def_cfa_offset 44
 158 00a8 4E94      		jsr (%a4)
 159               	.LVL18:
 236:test3.c       ****         P(1);
 160               		.loc 1 236 9 view .LVU34
 161 00aa 4878 0001 		pea 1.w
 162               		.cfi_def_cfa_offset 48
 163 00ae 4E94      		jsr (%a4)
 164               	.LVL19:
 237:test3.c       **** 
 238:test3.c       ****         // Check if a second has passed since the last update
 239:test3.c       ****         if (runtime - last_runtime >= SECONDDIVIDER)
 165               		.loc 1 239 9 view .LVU35
 166               		.loc 1 239 21 is_stmt 0 view .LVU36
 167 00b0 2639 0000 		move.l runtime,%d3
 167      0000 
 168 00b6 2003      		move.l %d3,%d0
 169 00b8 9084      		sub.l %d4,%d0
 170               		.loc 1 239 12 view .LVU37
 171 00ba 508F      		addq.l #8,%sp
 172               		.cfi_def_cfa_offset 40
 173 00bc 7263      		moveq #99,%d1
 174 00be B280      		cmp.l %d0,%d1
 175 00c0 6400 0096 		jcc .L15
 240:test3.c       ****         {
 241:test3.c       ****             // Update seconds based on the elapsed runtime
 242:test3.c       ****             sec += (runtime - last_runtime) / SECONDDIVIDER;
 176               		.loc 1 242 13 is_stmt 1 view .LVU38
 177               		.loc 1 242 45 is_stmt 0 view .LVU39
 178 00c4 4878 0064 		pea 100.w
 179               		.cfi_def_cfa_offset 44
 180 00c8 2F00      		move.l %d0,-(%sp)
 181               		.cfi_def_cfa_offset 48
 182 00ca 4E95      		jsr (%a5)
 183               	.LVL20:
 184 00cc 508F      		addq.l #8,%sp
 185               		.cfi_def_cfa_offset 40
 186               		.loc 1 242 17 view .LVU40
68K GAS  /tmp/ccdyPHKc.s 			page 9


 187 00ce D480      		add.l %d0,%d2
 188               	.LVL21:
 243:test3.c       ****             last_runtime = runtime; // Update the last runtime checkpoint
 189               		.loc 1 243 13 is_stmt 1 view .LVU41
 244:test3.c       **** 
 245:test3.c       ****             // Handle time rollover: seconds to minutes
 246:test3.c       ****             if (sec == 60)
 190               		.loc 1 246 13 view .LVU42
 191               		.loc 1 246 16 is_stmt 0 view .LVU43
 192 00d0 703C      		moveq #60,%d0
 193 00d2 B082      		cmp.l %d2,%d0
 194 00d4 6700 0092 		jeq .L21
 247:test3.c       ****             {
 248:test3.c       ****                 sec = sec - 60;
 249:test3.c       ****                 min++;
 250:test3.c       **** 
 251:test3.c       ****                 // Handle time rollover: minutes to hours
 252:test3.c       ****                 if (min == 60)
 253:test3.c       ****                 {
 254:test3.c       ****                     min = 0;
 255:test3.c       ****                     hr++;
 256:test3.c       ****                 }
 257:test3.c       ****             }
 258:test3.c       **** 
 259:test3.c       ****             // Update the screen with the new runtime
 260:test3.c       ****             fast_printf(true, true, SETSCREENSIZE, screen_height, screen_width); // Adjust screen s
 195               		.loc 1 260 13 is_stmt 1 view .LVU44
 196 00d8 2F39 0000 		move.l screen_width,-(%sp)
 196      0000 
 197               		.cfi_def_cfa_offset 44
 198 00de 2F39 0000 		move.l screen_height,-(%sp)
 198      0000 
 199               		.cfi_def_cfa_offset 48
 200 00e4 4879 0000 		pea .LC0
 200      0000 
 201               		.cfi_def_cfa_offset 52
 202 00ea 4878 0001 		pea 1.w
 203               		.cfi_def_cfa_offset 56
 204 00ee 4878 0001 		pea 1.w
 205               		.cfi_def_cfa_offset 60
 206 00f2 4E92      		jsr (%a2)
 207               	.LVL22:
 261:test3.c       ****             fast_printf(true, true, CURSORINVISIBLE); // Hide cursor during update
 208               		.loc 1 261 13 view .LVU45
 209 00f4 4879 0000 		pea .LC1
 209      0000 
 210               		.cfi_def_cfa_offset 64
 211 00fa 4878 0001 		pea 1.w
 212               		.cfi_def_cfa_offset 68
 213 00fe 4878 0001 		pea 1.w
 214               		.cfi_def_cfa_offset 72
 215 0102 4E92      		jsr (%a2)
 216               	.LVL23:
 262:test3.c       ****             fast_printf(true, true, SAVECURSORLOC);   // Save current cursor position
 217               		.loc 1 262 13 view .LVU46
 218 0104 4FEF 001C 		lea (28,%sp),%sp
 219               		.cfi_def_cfa_offset 44
68K GAS  /tmp/ccdyPHKc.s 			page 10


 220 0108 2EBC 0000 		move.l #.LC2,(%sp)
 220      0000 
 221 010e 4878 0001 		pea 1.w
 222               		.cfi_def_cfa_offset 48
 223 0112 4878 0001 		pea 1.w
 224               		.cfi_def_cfa_offset 52
 225 0116 4E92      		jsr (%a2)
 226               	.LVL24:
 263:test3.c       **** 
 264:test3.c       ****             // Display the runtime in HH:MM:SS format at the top-left corner
 265:test3.c       ****             fast_printf(true, true, "\x1b[H\x1b[47;30mRuntime %02d:%02d:%02d \x1b[K\x1b[0m", hr, mi
 227               		.loc 1 265 13 view .LVU47
 228 0118 2F02      		move.l %d2,-(%sp)
 229               		.cfi_def_cfa_offset 56
 230 011a 2F05      		move.l %d5,-(%sp)
 231               		.cfi_def_cfa_offset 60
 232 011c 2F06      		move.l %d6,-(%sp)
 233               		.cfi_def_cfa_offset 64
 234 011e 4879 0000 		pea .LC3
 234      0000 
 235               		.cfi_def_cfa_offset 68
 236 0124 4878 0001 		pea 1.w
 237               		.cfi_def_cfa_offset 72
 238 0128 4878 0001 		pea 1.w
 239               		.cfi_def_cfa_offset 76
 240 012c 4E92      		jsr (%a2)
 241               	.LVL25:
 266:test3.c       **** 
 267:test3.c       ****             fast_printf(true, true, RETCURSORLOC);   // Restore cursor position
 242               		.loc 1 267 13 view .LVU48
 243 012e 4FEF 0020 		lea (32,%sp),%sp
 244               		.cfi_def_cfa_offset 44
 245 0132 2EBC 0000 		move.l #.LC4,(%sp)
 245      0000 
 246 0138 4878 0001 		pea 1.w
 247               		.cfi_def_cfa_offset 48
 248 013c 4878 0001 		pea 1.w
 249               		.cfi_def_cfa_offset 52
 250 0140 4E92      		jsr (%a2)
 251               	.LVL26:
 268:test3.c       ****             fast_printf(true, true, CURSORVISIBLE); // Make cursor visible again
 252               		.loc 1 268 13 view .LVU49
 253 0142 4879 0000 		pea .LC5
 253      0000 
 254               		.cfi_def_cfa_offset 56
 255 0148 4878 0001 		pea 1.w
 256               		.cfi_def_cfa_offset 60
 257 014c 4878 0001 		pea 1.w
 258               		.cfi_def_cfa_offset 64
 259 0150 4E92      		jsr (%a2)
 260               	.LVL27:
 261 0152 4FEF 0018 		lea (24,%sp),%sp
 262               		.cfi_def_cfa_offset 40
 243:test3.c       **** 
 263               		.loc 1 243 26 is_stmt 0 view .LVU50
 264 0156 2803      		move.l %d3,%d4
 265               	.LVL28:
68K GAS  /tmp/ccdyPHKc.s 			page 11


 266               	.L15:
 269:test3.c       ****         }
 270:test3.c       **** 
 271:test3.c       ****         // Release semaphores to allow other tasks to proceed
 272:test3.c       ****         V(1);
 267               		.loc 1 272 9 is_stmt 1 view .LVU51
 268 0158 4878 0001 		pea 1.w
 269               		.cfi_def_cfa_offset 44
 270 015c 4E93      		jsr (%a3)
 271               	.LVL29:
 273:test3.c       ****         V(0);
 272               		.loc 1 273 9 view .LVU52
 273 015e 42A7      		clr.l -(%sp)
 274               		.cfi_def_cfa_offset 48
 275 0160 4E93      		jsr (%a3)
 276               	.LVL30:
 232:test3.c       ****     {
 277               		.loc 1 232 11 view .LVU53
 235:test3.c       ****         P(1);
 278               		.loc 1 235 9 is_stmt 0 view .LVU54
 279 0162 508F      		addq.l #8,%sp
 280               		.cfi_def_cfa_offset 40
 281 0164 6000 FF40 		jra .L17
 282               	.LVL31:
 283               	.L21:
 248:test3.c       ****                 min++;
 284               		.loc 1 248 17 is_stmt 1 view .LVU55
 249:test3.c       **** 
 285               		.loc 1 249 17 view .LVU56
 249:test3.c       **** 
 286               		.loc 1 249 20 is_stmt 0 view .LVU57
 287 0168 5285      		addq.l #1,%d5
 288               	.LVL32:
 252:test3.c       ****                 {
 289               		.loc 1 252 17 is_stmt 1 view .LVU58
 252:test3.c       ****                 {
 290               		.loc 1 252 20 is_stmt 0 view .LVU59
 291 016a B085      		cmp.l %d5,%d0
 292 016c 6700 0088 		jeq .L22
 248:test3.c       ****                 min++;
 293               		.loc 1 248 21 view .LVU60
 294 0170 7400      		moveq #0,%d2
 295               	.LVL33:
 260:test3.c       ****             fast_printf(true, true, CURSORINVISIBLE); // Hide cursor during update
 296               		.loc 1 260 13 is_stmt 1 view .LVU61
 297 0172 2F39 0000 		move.l screen_width,-(%sp)
 297      0000 
 298               		.cfi_def_cfa_offset 44
 299 0178 2F39 0000 		move.l screen_height,-(%sp)
 299      0000 
 300               		.cfi_def_cfa_offset 48
 301 017e 4879 0000 		pea .LC0
 301      0000 
 302               		.cfi_def_cfa_offset 52
 303 0184 4878 0001 		pea 1.w
 304               		.cfi_def_cfa_offset 56
 305 0188 4878 0001 		pea 1.w
68K GAS  /tmp/ccdyPHKc.s 			page 12


 306               		.cfi_def_cfa_offset 60
 307 018c 4E92      		jsr (%a2)
 308               	.LVL34:
 261:test3.c       ****             fast_printf(true, true, SAVECURSORLOC);   // Save current cursor position
 309               		.loc 1 261 13 view .LVU62
 310 018e 4879 0000 		pea .LC1
 310      0000 
 311               		.cfi_def_cfa_offset 64
 312 0194 4878 0001 		pea 1.w
 313               		.cfi_def_cfa_offset 68
 314 0198 4878 0001 		pea 1.w
 315               		.cfi_def_cfa_offset 72
 316 019c 4E92      		jsr (%a2)
 317               	.LVL35:
 262:test3.c       **** 
 318               		.loc 1 262 13 view .LVU63
 319 019e 4FEF 001C 		lea (28,%sp),%sp
 320               		.cfi_def_cfa_offset 44
 321 01a2 2EBC 0000 		move.l #.LC2,(%sp)
 321      0000 
 322 01a8 4878 0001 		pea 1.w
 323               		.cfi_def_cfa_offset 48
 324 01ac 4878 0001 		pea 1.w
 325               		.cfi_def_cfa_offset 52
 326 01b0 4E92      		jsr (%a2)
 327               	.LVL36:
 265:test3.c       **** 
 328               		.loc 1 265 13 view .LVU64
 329 01b2 2F02      		move.l %d2,-(%sp)
 330               		.cfi_def_cfa_offset 56
 331 01b4 2F05      		move.l %d5,-(%sp)
 332               		.cfi_def_cfa_offset 60
 333 01b6 2F06      		move.l %d6,-(%sp)
 334               		.cfi_def_cfa_offset 64
 335 01b8 4879 0000 		pea .LC3
 335      0000 
 336               		.cfi_def_cfa_offset 68
 337 01be 4878 0001 		pea 1.w
 338               		.cfi_def_cfa_offset 72
 339 01c2 4878 0001 		pea 1.w
 340               		.cfi_def_cfa_offset 76
 341 01c6 4E92      		jsr (%a2)
 342               	.LVL37:
 267:test3.c       ****             fast_printf(true, true, CURSORVISIBLE); // Make cursor visible again
 343               		.loc 1 267 13 view .LVU65
 344 01c8 4FEF 0020 		lea (32,%sp),%sp
 345               		.cfi_def_cfa_offset 44
 346 01cc 2EBC 0000 		move.l #.LC4,(%sp)
 346      0000 
 347 01d2 4878 0001 		pea 1.w
 348               		.cfi_def_cfa_offset 48
 349 01d6 4878 0001 		pea 1.w
 350               		.cfi_def_cfa_offset 52
 351 01da 4E92      		jsr (%a2)
 352               	.LVL38:
 268:test3.c       ****         }
 353               		.loc 1 268 13 view .LVU66
68K GAS  /tmp/ccdyPHKc.s 			page 13


 354 01dc 4879 0000 		pea .LC5
 354      0000 
 355               		.cfi_def_cfa_offset 56
 356 01e2 4878 0001 		pea 1.w
 357               		.cfi_def_cfa_offset 60
 358 01e6 4878 0001 		pea 1.w
 359               		.cfi_def_cfa_offset 64
 360 01ea 4E92      		jsr (%a2)
 361               	.LVL39:
 362 01ec 4FEF 0018 		lea (24,%sp),%sp
 363               		.cfi_def_cfa_offset 40
 243:test3.c       **** 
 364               		.loc 1 243 26 is_stmt 0 view .LVU67
 365 01f0 2803      		move.l %d3,%d4
 366 01f2 6000 FF64 		jra .L15
 367               	.LVL40:
 368               	.L22:
 254:test3.c       ****                     hr++;
 369               		.loc 1 254 21 is_stmt 1 view .LVU68
 255:test3.c       ****                 }
 370               		.loc 1 255 21 view .LVU69
 255:test3.c       ****                 }
 371               		.loc 1 255 23 is_stmt 0 view .LVU70
 372 01f6 5286      		addq.l #1,%d6
 373               	.LVL41:
 248:test3.c       ****                 min++;
 374               		.loc 1 248 21 view .LVU71
 375 01f8 7400      		moveq #0,%d2
 254:test3.c       ****                     hr++;
 376               		.loc 1 254 25 view .LVU72
 377 01fa 7A00      		moveq #0,%d5
 378               	.LVL42:
 260:test3.c       ****             fast_printf(true, true, CURSORINVISIBLE); // Hide cursor during update
 379               		.loc 1 260 13 is_stmt 1 view .LVU73
 380 01fc 2F39 0000 		move.l screen_width,-(%sp)
 380      0000 
 381               		.cfi_def_cfa_offset 44
 382 0202 2F39 0000 		move.l screen_height,-(%sp)
 382      0000 
 383               		.cfi_def_cfa_offset 48
 384 0208 4879 0000 		pea .LC0
 384      0000 
 385               		.cfi_def_cfa_offset 52
 386 020e 4878 0001 		pea 1.w
 387               		.cfi_def_cfa_offset 56
 388 0212 4878 0001 		pea 1.w
 389               		.cfi_def_cfa_offset 60
 390 0216 4E92      		jsr (%a2)
 391               	.LVL43:
 261:test3.c       ****             fast_printf(true, true, SAVECURSORLOC);   // Save current cursor position
 392               		.loc 1 261 13 view .LVU74
 393 0218 4879 0000 		pea .LC1
 393      0000 
 394               		.cfi_def_cfa_offset 64
 395 021e 4878 0001 		pea 1.w
 396               		.cfi_def_cfa_offset 68
 397 0222 4878 0001 		pea 1.w
68K GAS  /tmp/ccdyPHKc.s 			page 14


 398               		.cfi_def_cfa_offset 72
 399 0226 4E92      		jsr (%a2)
 400               	.LVL44:
 262:test3.c       **** 
 401               		.loc 1 262 13 view .LVU75
 402 0228 4FEF 001C 		lea (28,%sp),%sp
 403               		.cfi_def_cfa_offset 44
 404 022c 2EBC 0000 		move.l #.LC2,(%sp)
 404      0000 
 405 0232 4878 0001 		pea 1.w
 406               		.cfi_def_cfa_offset 48
 407 0236 4878 0001 		pea 1.w
 408               		.cfi_def_cfa_offset 52
 409 023a 4E92      		jsr (%a2)
 410               	.LVL45:
 265:test3.c       **** 
 411               		.loc 1 265 13 view .LVU76
 412 023c 2F02      		move.l %d2,-(%sp)
 413               		.cfi_def_cfa_offset 56
 414 023e 2F05      		move.l %d5,-(%sp)
 415               		.cfi_def_cfa_offset 60
 416 0240 2F06      		move.l %d6,-(%sp)
 417               		.cfi_def_cfa_offset 64
 418 0242 4879 0000 		pea .LC3
 418      0000 
 419               		.cfi_def_cfa_offset 68
 420 0248 4878 0001 		pea 1.w
 421               		.cfi_def_cfa_offset 72
 422 024c 4878 0001 		pea 1.w
 423               		.cfi_def_cfa_offset 76
 424 0250 4E92      		jsr (%a2)
 425               	.LVL46:
 267:test3.c       ****             fast_printf(true, true, CURSORVISIBLE); // Make cursor visible again
 426               		.loc 1 267 13 view .LVU77
 427 0252 4FEF 0020 		lea (32,%sp),%sp
 428               		.cfi_def_cfa_offset 44
 429 0256 2EBC 0000 		move.l #.LC4,(%sp)
 429      0000 
 430 025c 4878 0001 		pea 1.w
 431               		.cfi_def_cfa_offset 48
 432 0260 4878 0001 		pea 1.w
 433               		.cfi_def_cfa_offset 52
 434 0264 4E92      		jsr (%a2)
 435               	.LVL47:
 268:test3.c       ****         }
 436               		.loc 1 268 13 view .LVU78
 437 0266 4879 0000 		pea .LC5
 437      0000 
 438               		.cfi_def_cfa_offset 56
 439 026c 4878 0001 		pea 1.w
 440               		.cfi_def_cfa_offset 60
 441 0270 4878 0001 		pea 1.w
 442               		.cfi_def_cfa_offset 64
 443 0274 4E92      		jsr (%a2)
 444               	.LVL48:
 445 0276 4FEF 0018 		lea (24,%sp),%sp
 446               		.cfi_def_cfa_offset 40
68K GAS  /tmp/ccdyPHKc.s 			page 15


 243:test3.c       **** 
 447               		.loc 1 243 26 is_stmt 0 view .LVU79
 448 027a 2803      		move.l %d3,%d4
 449 027c 6000 FEDA 		jra .L15
 450               		.cfi_endproc
 451               	.LFE4:
 452               		.size	runtime_clock, .-runtime_clock
 453               		.globl	__modsi3
 454               		.section	.rodata.str1.1
 455               	.LC6:
 456 0049 1B5B 3F25 		.string	"\033[?%dl"
 456      646C 00
 457               	.LC7:
 458 0050 1B5B 3939 		.string	"\033[999;H\033[47;30m%s\033[K"
 458      393B 481B 
 458      5B34 373B 
 458      3330 6D25 
 458      731B 5B4B 
 459               	.LC8:
 460 0065 1B5B 306D 		.string	"\033[0m"
 460      00
 461               	.LC9:
 462 006a 1B5B 3939 		.string	"\033[999;H\033[47;30m%s\033[K\033[0m"
 462      393B 481B 
 462      5B34 373B 
 462      3330 6D25 
 462      731B 5B4B 
 463               	.LC10:
 464 0083 1B5B 2564 		.string	"\033[%d;%dH"
 464      3B25 6448 
 464      00
 465               	.LC11:
 466 008c 1B5B 316D 		.string	"\033[1m%s\033[0m\342\224\202%s"
 466      2573 1B5B 
 466      306D E294 
 466      8225 7300 
 467               	.LC12:
 468 009c 1B5B 3437 		.string	"\033[47;30m%s\033[0m"
 468      3B33 306D 
 468      2573 1B5B 
 468      306D 00
 469               	.LC13:
 470 00ab 6865 6C70 		.string	"help"
 470      00
 471               	.LC14:
 472 00b0 1B5B 3F25 		.string	"\033[?%dh"
 472      6468 00
 473               	.LC15:
 474 00b7 1B5B 481B 		.string	"\033[H\033[2J"
 474      5B32 4A00 
 475               		.text
 476               		.align	2
 477               		.globl	command_bar
 478               		.type	command_bar, @function
 479               	command_bar:
 480               	.LFB5:
 274:test3.c       ****     }
68K GAS  /tmp/ccdyPHKc.s 			page 16


 275:test3.c       **** }
 276:test3.c       **** 
 277:test3.c       **** // Command bar function to handle user inputs and display tips
 278:test3.c       **** void command_bar()
 279:test3.c       **** {
 481               		.loc 1 279 1 is_stmt 1 view -0
 482               		.cfi_startproc
 483 0280 4FEF FFF0 		lea (-16,%sp),%sp
 484               		.cfi_def_cfa_offset 20
 485 0284 48E7 3F3E 		movem.l #16190,-(%sp)
 486               		.cfi_def_cfa_offset 64
 487               		.cfi_offset 2, -64
 488               		.cfi_offset 3, -60
 489               		.cfi_offset 4, -56
 490               		.cfi_offset 5, -52
 491               		.cfi_offset 6, -48
 492               		.cfi_offset 7, -44
 493               		.cfi_offset 10, -40
 494               		.cfi_offset 11, -36
 495               		.cfi_offset 12, -32
 496               		.cfi_offset 13, -28
 497               		.cfi_offset 14, -24
 498 0288 4BF9 0000 		lea P,%a5
 498      0000 
 499 028e 2A3C 0000 		move.l #rand,%d5
 499      0000 
 500 0294 283C 0000 		move.l #__modsi3,%d4
 500      0000 
 501 029a 263C 0000 		move.l #inappcom,%d3
 501      0000 
 502 02a0 2E3C 0000 		move.l #keypress,%d7
 502      0000 
 503 02a6 47FA FD58 		lea fast_printf,%a3
 504 02aa 4DF9 0000 		lea tip_num,%a6
 504      0000 
 505 02b0 49F9 0000 		lea V,%a4
 505      0000 
 280:test3.c       ****     int last_tip_changed[2]; // Array to track when the tip was last changed for each channel
 506               		.loc 1 280 5 view .LVU81
 281:test3.c       ****     int some_num2; // Random value to add variability to tip update intervals
 507               		.loc 1 281 5 view .LVU82
 282:test3.c       **** 
 283:test3.c       ****     // A command bar at the bottom of the screen; accepts commands after the user presses the Escap
 284:test3.c       ****     while (1)
 508               		.loc 1 284 5 view .LVU83
 285:test3.c       ****     {
 286:test3.c       ****         P(0); // Lock semaphore 0 for safe access to shared resources
 509               		.loc 1 286 9 view .LVU84
 510 02b6 42A7      		clr.l -(%sp)
 511               		.cfi_def_cfa_offset 68
 512 02b8 4E95      		jsr (%a5)
 513               	.LVL49:
 287:test3.c       ****         P(1); // Lock semaphore 1 for additional synchronization
 514               		.loc 1 287 9 view .LVU85
 515 02ba 4878 0001 		pea 1.w
 516               		.cfi_def_cfa_offset 72
 517 02be 4E95      		jsr (%a5)
68K GAS  /tmp/ccdyPHKc.s 			page 17


 518               	.LVL50:
 288:test3.c       **** 
 289:test3.c       ****         some_num2 = rand() %100 ; // Generate a random delay modifier for tip updates
 519               		.loc 1 289 9 view .LVU86
 520               		.loc 1 289 21 is_stmt 0 view .LVU87
 521 02c0 2045      		move.l %d5,%a0
 522 02c2 4E90      		jsr (%a0)
 523               	.LVL51:
 524               		.loc 1 289 19 view .LVU88
 525 02c4 4878 0064 		pea 100.w
 526               		.cfi_def_cfa_offset 76
 527 02c8 2F00      		move.l %d0,-(%sp)
 528               		.cfi_def_cfa_offset 80
 529 02ca 2244      		move.l %d4,%a1
 530 02cc 4E91      		jsr (%a1)
 531               	.LVL52:
 290:test3.c       **** 
 291:test3.c       ****         // Process input for each channel (0 and 1)
 292:test3.c       ****         for (i = 0; i <= 1; i++)
 532               		.loc 1 292 9 is_stmt 1 view .LVU89
 533               		.loc 1 292 16 is_stmt 0 view .LVU90
 534 02ce 42B9 0000 		clr.l i
 534      0000 
 535               		.loc 1 292 23 is_stmt 1 view .LVU91
 536               		.loc 1 292 16 is_stmt 0 view .LVU92
 537 02d4 4FEF 0010 		lea (16,%sp),%sp
 538               		.cfi_def_cfa_offset 64
 539               		.loc 1 292 23 view .LVU93
 540 02d8 95CA      		sub.l %a2,%a2
 293:test3.c       ****         {
 294:test3.c       ****             if (!inappcom[i]) // If the user is not in command input mode
 295:test3.c       ****             {
 296:test3.c       ****                 keypress[i] = inkey(i); // Get the keypress input for the channel
 297:test3.c       **** 
 298:test3.c       ****                 if (keypress[i] != -1) // If a key was pressed
 299:test3.c       ****                 {
 300:test3.c       ****                     if (in_alt_screen[i]) // If the alternate screen is active
 301:test3.c       ****                     {
 302:test3.c       ****                         fast_printf(i == 0, i == 1, DECRESETMODE, 47); // Exit alternate screen mod
 303:test3.c       ****                         in_alt_screen[i] = false;
 304:test3.c       ****                         fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[47;30m%s\x1b[K", command_prompt
 305:test3.c       ****                     }
 306:test3.c       ****                     else
 307:test3.c       ****                     {
 308:test3.c       ****                         // Add the keypress to the buffer
 309:test3.c       ****                         last_keybuf[i][last_keybuf_len[i]] = keypress[i];
 310:test3.c       ****                         last_keybuf_len[i]++;
 311:test3.c       ****                         last_keybuf[i][last_keybuf_len[i]] = '\0';
 312:test3.c       ****                     }
 313:test3.c       ****                 }
 314:test3.c       ****                 else if (last_keybuf_len[i] > 0) // If there is data in the key buffer
 315:test3.c       ****                 {
 316:test3.c       ****                     if (strcmp(last_keybuf[i], ESC) == 0) // If the Escape key is pressed
 317:test3.c       ****                     {
 318:test3.c       ****                         fast_printf(i == 0, i == 1, RESETSGR); // Reset text formatting
 319:test3.c       ****                         fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[47;30m%s\x1b[K\x1b[0m", tip_lis
 320:test3.c       ****                         fast_printf(i == 0, i == 1, CURSORMOVE, screen_height - 2, 2); // Move to t
68K GAS  /tmp/ccdyPHKc.s 			page 18


 321:test3.c       ****                         fast_printf(i == 0, i == 1, "\x1b[1m%s\x1b[0m│%s", msg_input_prompt, msg_
 322:test3.c       ****                         inappcom[i] = true; // Enter command input mode
 323:test3.c       ****                         cmd_buf_len[i] = 0; // Reset the command buffer
 324:test3.c       ****                         cmd_buf[i][0] = '\0';
 325:test3.c       ****                     }
 326:test3.c       ****                     else if (strcmp(last_keybuf[i], BACKSPACE) == 0) // If the Backspace key is pre
 327:test3.c       ****                     {
 328:test3.c       ****                         if (cmd_buf_len[i] > 0) // Ensure the buffer is not empty
 329:test3.c       ****                         {
 330:test3.c       ****                             fast_printf(i == 0, i == 1, "\x1b[47;30m%s\x1b[0m", term_backspace); //
 331:test3.c       ****                             cmd_buf_len[i]--; // Remove the last character from the buffer
 332:test3.c       ****                             cmd_buf[i][cmd_buf_len[i]] = '\0';
 333:test3.c       ****                         }
 334:test3.c       ****                     }
 335:test3.c       ****                     else if (strcmp(last_keybuf[i], ENTER) == 0) // If the Enter key is pressed
 336:test3.c       ****                     {
 337:test3.c       ****                         if (cmd_buf_len[i] > 0) // Ensure there is a command in the buffer
 338:test3.c       ****                         {
 339:test3.c       ****                             // Check if the command is 'h' or 'help'
 340:test3.c       ****                             if (strncmp(cmd_buf[i], "h", 1) == 0 && cmd_buf_len[i] == 1 || 
 341:test3.c       ****                                 strncmp(cmd_buf[i], "help", 4) == 0 && cmd_buf_len[i] == 4)
 342:test3.c       ****                             {
 343:test3.c       ****                                 fast_printf(i == 0, i == 1, DECSETMODE, 47); // Switch to alternate
 344:test3.c       ****                                 fast_printf(i == 0, i == 1, RESETSGR); // Reset text formatting
 345:test3.c       ****                                 fast_printf(i == 0, i == 1, CLEARDISPLAY); // Clear the screen
 346:test3.c       ****                                 fast_printf(i == 0, i == 1, help_text); // Display help text
 347:test3.c       ****                                 in_alt_screen[i] = true; // Indicate alternate screen is active
 348:test3.c       ****                                 cmd_buf_len[i] = 0; // Clear the command buffer
 349:test3.c       ****                                 cmd_buf[i][0] = '\0';
 350:test3.c       ****                             }
 351:test3.c       ****                             else // Handle unrecognized commands
 352:test3.c       ****                             {
 353:test3.c       ****                                 fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[47;30m%s\x1b[K\x1b[0m",
 354:test3.c       ****                                 cmd_buf_len[i] = 0; // Clear the command buffer
 355:test3.c       ****                                 cmd_buf[i][0] = '\0';
 356:test3.c       ****                             }
 357:test3.c       ****                         }
 358:test3.c       ****                     }
 359:test3.c       ****                     else if (last_keybuf_len[i] == 1 && last_keybuf[i][0] >= 32 && last_keybuf[i][0
 360:test3.c       ****                     {
 361:test3.c       ****                         if (cmd_buf_len[i] < 100) // Ensure the buffer does not exceed 100 characte
 362:test3.c       ****                         {
 363:test3.c       ****                             cmd_buf[i][cmd_buf_len[i]] = last_keybuf[i][0]; // Add character to the
 364:test3.c       ****                             cmd_buf_len[i]++;
 365:test3.c       ****                             cmd_buf[i][cmd_buf_len[i]] = '\0';
 366:test3.c       ****                             fast_printf(i == 0, i == 1, "\x1b[47;30m%s\x1b[0m", last_keybuf[i]); //
 367:test3.c       ****                         }
 368:test3.c       ****                         else if (!(last_keybuf_len[i] == 3 && last_keybuf[i][0] == 27 && last_keybu
 369:test3.c       ****                         {
 370:test3.c       ****                             write(i + 3, &last_keybuf[i], last_keybuf_len[i]); // Write the keypres
 371:test3.c       ****                         }
 372:test3.c       ****                     }
 373:test3.c       ****                     last_keybuf[i][0] = '\0'; // Clear the key buffer
 374:test3.c       ****                     last_keybuf_len[i] = 0;
 375:test3.c       ****                 }
 376:test3.c       ****                 keypress[i] = -1; // Reset keypress
 377:test3.c       ****             }
68K GAS  /tmp/ccdyPHKc.s 			page 19


 378:test3.c       ****             else // If the user is in command input mode
 379:test3.c       ****             {
 380:test3.c       ****                 // Handle tip updates
 381:test3.c       ****                	if (runtime - last_tip_changed[i] >= 800 + some_num2)
 541               		.loc 1 381 58 view .LVU94
 542 02da 2C00      		move.l %d0,%d6
 543 02dc 0686 0000 		add.l #800,%d6
 543      0320 
 544               	.LVL53:
 545               	.L42:
 294:test3.c       ****             {
 546               		.loc 1 294 13 is_stmt 1 view .LVU95
 294:test3.c       ****             {
 547               		.loc 1 294 16 is_stmt 0 view .LVU96
 548 02e2 4A32 3800 		tst.b (%a2,%d3.l)
 549 02e6 6700 0174 		jeq .L54
 550               		.loc 1 381 17 is_stmt 1 view .LVU97
 551               		.loc 1 381 29 is_stmt 0 view .LVU98
 552 02ea 2239 0000 		move.l runtime,%d1
 552      0000 
 553               		.loc 1 381 47 view .LVU99
 554 02f0 200A      		move.l %a2,%d0
 555 02f2 D08A      		add.l %a2,%d0
 556 02f4 2040      		move.l %d0,%a0
 557 02f6 D1C0      		add.l %d0,%a0
 558               		.loc 1 381 29 view .LVU100
 559 02f8 2241      		move.l %d1,%a1
 560 02fa 93F7 8834 		sub.l 52(%sp,%a0.l),%a1
 561               		.loc 1 381 20 view .LVU101
 562 02fe BC89      		cmp.l %a1,%d6
 563 0300 634E      		jls .L40
 292:test3.c       ****         {
 564               		.loc 1 292 30 view .LVU102
 565 0302 2479 0000 		move.l i,%a2
 565      0000 
 566               	.L39:
 292:test3.c       ****         {
 567               		.loc 1 292 30 is_stmt 1 discriminator 2 view .LVU103
 568 0308 528A      		addq.l #1,%a2
 569 030a 23CA 0000 		move.l %a2,i
 569      0000 
 292:test3.c       ****         {
 570               		.loc 1 292 23 discriminator 2 view .LVU104
 571 0310 7001      		moveq #1,%d0
 572 0312 B08A      		cmp.l %a2,%d0
 573 0314 6CCC      		jge .L42
 382:test3.c       ****                 {
 383:test3.c       ****                     if (tip_num[i] == TOTALTIPS - 1)
 384:test3.c       ****                         tip_num[i] = 0; // Reset to the first tip
 385:test3.c       ****                     else
 386:test3.c       ****                         tip_num[i]++; // Move to the next tip
 387:test3.c       **** 
 388:test3.c       ****                     last_tip_changed[i] = runtime; // Update the last tip change timestamp
 389:test3.c       ****                     fast_printf(i == 0, i == 1, CURSORINVISIBLE); // Hide the cursor
 390:test3.c       ****                     fast_printf(i == 0, i == 1, SAVECURSORLOC); // Save the cursor position
 391:test3.c       ****                     fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[47;30m%s\x1b[K\x1b[0m", tip_list[ti
 392:test3.c       ****                     fast_printf(i == 0, i == 1, RETCURSORLOC); // Restore the cursor position
68K GAS  /tmp/ccdyPHKc.s 			page 20


 393:test3.c       ****                     fast_printf(i == 0, i == 1, CURSORVISIBLE); // Make the cursor visible again
 394:test3.c       ****                 }
 395:test3.c       ****             }
 396:test3.c       ****         }
 397:test3.c       ****         V(1); // Release semaphore 1
 574               		.loc 1 397 9 view .LVU105
 575 0316 4878 0001 		pea 1.w
 576               		.cfi_def_cfa_offset 68
 577 031a 4E94      		jsr (%a4)
 578               	.LVL54:
 398:test3.c       ****         V(0); // Release semaphore 0
 579               		.loc 1 398 9 view .LVU106
 580 031c 42A7      		clr.l -(%sp)
 581               		.cfi_def_cfa_offset 72
 582 031e 4E94      		jsr (%a4)
 583               	.LVL55:
 284:test3.c       ****     {
 584               		.loc 1 284 11 view .LVU107
 286:test3.c       ****         P(1); // Lock semaphore 1 for additional synchronization
 585               		.loc 1 286 9 is_stmt 0 view .LVU108
 586 0320 508F      		addq.l #8,%sp
 587               		.cfi_def_cfa_offset 64
 280:test3.c       ****     int some_num2; // Random value to add variability to tip update intervals
 588               		.loc 1 280 5 is_stmt 1 view .LVU109
 281:test3.c       **** 
 589               		.loc 1 281 5 view .LVU110
 284:test3.c       ****     {
 590               		.loc 1 284 5 view .LVU111
 286:test3.c       ****         P(1); // Lock semaphore 1 for additional synchronization
 591               		.loc 1 286 9 view .LVU112
 592 0322 42A7      		clr.l -(%sp)
 593               		.cfi_def_cfa_offset 68
 594 0324 4E95      		jsr (%a5)
 595               	.LVL56:
 287:test3.c       **** 
 596               		.loc 1 287 9 view .LVU113
 597 0326 4878 0001 		pea 1.w
 598               		.cfi_def_cfa_offset 72
 599 032a 4E95      		jsr (%a5)
 600               	.LVL57:
 289:test3.c       **** 
 601               		.loc 1 289 9 view .LVU114
 289:test3.c       **** 
 602               		.loc 1 289 21 is_stmt 0 view .LVU115
 603 032c 2045      		move.l %d5,%a0
 604 032e 4E90      		jsr (%a0)
 605               	.LVL58:
 289:test3.c       **** 
 606               		.loc 1 289 19 view .LVU116
 607 0330 4878 0064 		pea 100.w
 608               		.cfi_def_cfa_offset 76
 609 0334 2F00      		move.l %d0,-(%sp)
 610               		.cfi_def_cfa_offset 80
 611 0336 2244      		move.l %d4,%a1
 612 0338 4E91      		jsr (%a1)
 613               	.LVL59:
 292:test3.c       ****         {
68K GAS  /tmp/ccdyPHKc.s 			page 21


 614               		.loc 1 292 9 is_stmt 1 view .LVU117
 292:test3.c       ****         {
 615               		.loc 1 292 16 is_stmt 0 view .LVU118
 616 033a 42B9 0000 		clr.l i
 616      0000 
 292:test3.c       ****         {
 617               		.loc 1 292 23 is_stmt 1 view .LVU119
 292:test3.c       ****         {
 618               		.loc 1 292 16 is_stmt 0 view .LVU120
 619 0340 4FEF 0010 		lea (16,%sp),%sp
 620               		.cfi_def_cfa_offset 64
 292:test3.c       ****         {
 621               		.loc 1 292 23 view .LVU121
 622 0344 95CA      		sub.l %a2,%a2
 381:test3.c       ****                 {
 623               		.loc 1 381 58 view .LVU122
 624 0346 2C00      		move.l %d0,%d6
 625 0348 0686 0000 		add.l #800,%d6
 625      0320 
 626 034e 6092      		jra .L42
 627               	.LVL60:
 628               	.L40:
 383:test3.c       ****                         tip_num[i] = 0; // Reset to the first tip
 629               		.loc 1 383 21 is_stmt 1 view .LVU123
 383:test3.c       ****                         tip_num[i] = 0; // Reset to the first tip
 630               		.loc 1 383 32 is_stmt 0 view .LVU124
 631 0350 2076 8800 		move.l (%a6,%a0.l),%a0
 383:test3.c       ****                         tip_num[i] = 0; // Reset to the first tip
 632               		.loc 1 383 24 view .LVU125
 633 0354 7403      		moveq #3,%d2
 634 0356 B488      		cmp.l %a0,%d2
 635 0358 6700 0174 		jeq .L44
 386:test3.c       **** 
 636               		.loc 1 386 25 is_stmt 1 view .LVU126
 386:test3.c       **** 
 637               		.loc 1 386 35 is_stmt 0 view .LVU127
 638 035c 5288      		addq.l #1,%a0
 384:test3.c       ****                     else
 639               		.loc 1 384 36 view .LVU128
 640 035e D080      		add.l %d0,%d0
 641 0360 2D88 0800 		move.l %a0,(%a6,%d0.l)
 388:test3.c       ****                     fast_printf(i == 0, i == 1, CURSORINVISIBLE); // Hide the cursor
 642               		.loc 1 388 21 is_stmt 1 view .LVU129
 388:test3.c       ****                     fast_printf(i == 0, i == 1, CURSORINVISIBLE); // Hide the cursor
 643               		.loc 1 388 41 is_stmt 0 view .LVU130
 644 0364 2F81 0834 		move.l %d1,52(%sp,%d0.l)
 389:test3.c       ****                     fast_printf(i == 0, i == 1, SAVECURSORLOC); // Save the cursor position
 645               		.loc 1 389 21 is_stmt 1 view .LVU131
 646 0368 4879 0000 		pea .LC1
 646      0000 
 647               		.cfi_def_cfa_offset 68
 648 036e 7201      		moveq #1,%d1
 649 0370 B28A      		cmp.l %a2,%d1
 650 0372 57C0      		seq %d0
 651 0374 4880      		ext.w %d0
 652 0376 48C0      		ext.l %d0
 653 0378 4480      		neg.l %d0
68K GAS  /tmp/ccdyPHKc.s 			page 22


 654 037a 2F00      		move.l %d0,-(%sp)
 655               		.cfi_def_cfa_offset 72
 656 037c B4FC 0000 		cmp.w #0,%a2
 657 0380 57C0      		seq %d0
 658 0382 4880      		ext.w %d0
 659 0384 3440      		move.w %d0,%a2
 660 0386 240A      		move.l %a2,%d2
 661 0388 4482      		neg.l %d2
 662 038a 2F02      		move.l %d2,-(%sp)
 663               		.cfi_def_cfa_offset 76
 664 038c 4E93      		jsr (%a3)
 665               	.LVL61:
 390:test3.c       ****                     fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[47;30m%s\x1b[K\x1b[0m", tip_list[ti
 666               		.loc 1 390 21 view .LVU132
 667 038e 2039 0000 		move.l i,%d0
 667      0000 
 668 0394 4879 0000 		pea .LC2
 668      0000 
 669               		.cfi_def_cfa_offset 80
 670 039a 7401      		moveq #1,%d2
 671 039c B480      		cmp.l %d0,%d2
 672 039e 57C1      		seq %d1
 673 03a0 4881      		ext.w %d1
 674 03a2 48C1      		ext.l %d1
 675 03a4 4481      		neg.l %d1
 676 03a6 2F01      		move.l %d1,-(%sp)
 677               		.cfi_def_cfa_offset 84
 678 03a8 4A80      		tst.l %d0
 679 03aa 57C0      		seq %d0
 680 03ac 4880      		ext.w %d0
 681 03ae 48C0      		ext.l %d0
 682 03b0 4480      		neg.l %d0
 683 03b2 2F00      		move.l %d0,-(%sp)
 684               		.cfi_def_cfa_offset 88
 685 03b4 4E93      		jsr (%a3)
 686               	.LVL62:
 391:test3.c       ****                     fast_printf(i == 0, i == 1, RETCURSORLOC); // Restore the cursor position
 687               		.loc 1 391 21 view .LVU133
 391:test3.c       ****                     fast_printf(i == 0, i == 1, RETCURSORLOC); // Restore the cursor position
 688               		.loc 1 391 105 is_stmt 0 view .LVU134
 689 03b6 2039 0000 		move.l i,%d0
 689      0000 
 690 03bc 2200      		move.l %d0,%d1
 691 03be D280      		add.l %d0,%d1
 692 03c0 D281      		add.l %d1,%d1
 391:test3.c       ****                     fast_printf(i == 0, i == 1, RETCURSORLOC); // Restore the cursor position
 693               		.loc 1 391 97 view .LVU135
 694 03c2 2076 1800 		move.l (%a6,%d1.l),%a0
 695 03c6 2208      		move.l %a0,%d1
 696 03c8 D288      		add.l %a0,%d1
 697 03ca D288      		add.l %a0,%d1
 698 03cc 2401      		move.l %d1,%d2
 699 03ce EB8A      		lsl.l #5,%d2
 700 03d0 D282      		add.l %d2,%d1
 701 03d2 D288      		add.l %a0,%d1
 391:test3.c       ****                     fast_printf(i == 0, i == 1, RETCURSORLOC); // Restore the cursor position
 702               		.loc 1 391 21 view .LVU136
68K GAS  /tmp/ccdyPHKc.s 			page 23


 703 03d4 0681 0000 		add.l #tip_list,%d1
 703      0000 
 704 03da 2F01      		move.l %d1,-(%sp)
 705               		.cfi_def_cfa_offset 92
 706 03dc 4879 0000 		pea .LC9
 706      0000 
 707               		.cfi_def_cfa_offset 96
 708 03e2 7401      		moveq #1,%d2
 709 03e4 B480      		cmp.l %d0,%d2
 710 03e6 57C1      		seq %d1
 711 03e8 4881      		ext.w %d1
 712 03ea 48C1      		ext.l %d1
 713 03ec 4481      		neg.l %d1
 714 03ee 2F01      		move.l %d1,-(%sp)
 715               		.cfi_def_cfa_offset 100
 716 03f0 4A80      		tst.l %d0
 717 03f2 57C0      		seq %d0
 718 03f4 4880      		ext.w %d0
 719 03f6 48C0      		ext.l %d0
 720 03f8 4480      		neg.l %d0
 721 03fa 2F00      		move.l %d0,-(%sp)
 722               		.cfi_def_cfa_offset 104
 723 03fc 4E93      		jsr (%a3)
 724               	.LVL63:
 392:test3.c       ****                     fast_printf(i == 0, i == 1, CURSORVISIBLE); // Make the cursor visible again
 725               		.loc 1 392 21 is_stmt 1 view .LVU137
 726 03fe 2039 0000 		move.l i,%d0
 726      0000 
 727 0404 4FEF 0024 		lea (36,%sp),%sp
 728               		.cfi_def_cfa_offset 68
 729 0408 2EBC 0000 		move.l #.LC4,(%sp)
 729      0000 
 730 040e B480      		cmp.l %d0,%d2
 731 0410 57C1      		seq %d1
 732 0412 4881      		ext.w %d1
 733 0414 48C1      		ext.l %d1
 734 0416 4481      		neg.l %d1
 735 0418 2F01      		move.l %d1,-(%sp)
 736               		.cfi_def_cfa_offset 72
 737 041a 4A80      		tst.l %d0
 738 041c 57C0      		seq %d0
 739 041e 4880      		ext.w %d0
 740 0420 48C0      		ext.l %d0
 741 0422 4480      		neg.l %d0
 742 0424 2F00      		move.l %d0,-(%sp)
 743               		.cfi_def_cfa_offset 76
 744 0426 4E93      		jsr (%a3)
 745               	.LVL64:
 393:test3.c       ****                 }
 746               		.loc 1 393 21 view .LVU138
 747 0428 2039 0000 		move.l i,%d0
 747      0000 
 748 042e 4879 0000 		pea .LC5
 748      0000 
 749               		.cfi_def_cfa_offset 80
 750 0434 B480      		cmp.l %d0,%d2
 751 0436 57C1      		seq %d1
68K GAS  /tmp/ccdyPHKc.s 			page 24


 752 0438 4881      		ext.w %d1
 753 043a 48C1      		ext.l %d1
 754 043c 4481      		neg.l %d1
 755 043e 2F01      		move.l %d1,-(%sp)
 756               		.cfi_def_cfa_offset 84
 757 0440 4A80      		tst.l %d0
 758 0442 57C0      		seq %d0
 759 0444 4880      		ext.w %d0
 760 0446 48C0      		ext.l %d0
 761 0448 4480      		neg.l %d0
 762 044a 2F00      		move.l %d0,-(%sp)
 763               		.cfi_def_cfa_offset 88
 764 044c 4E93      		jsr (%a3)
 765               	.LVL65:
 292:test3.c       ****         {
 766               		.loc 1 292 30 is_stmt 0 view .LVU139
 767 044e 2479 0000 		move.l i,%a2
 767      0000 
 768 0454 4FEF 0018 		lea (24,%sp),%sp
 769               		.cfi_def_cfa_offset 64
 770 0458 6000 FEAE 		jra .L39
 771               	.L54:
 296:test3.c       **** 
 772               		.loc 1 296 17 is_stmt 1 view .LVU140
 296:test3.c       **** 
 773               		.loc 1 296 31 is_stmt 0 view .LVU141
 774 045c B4FC 0000 		cmp.w #0,%a2
 775 0460 56C0      		sne %d0
 776 0462 4880      		ext.w %d0
 777 0464 3440      		move.w %d0,%a2
 778 0466 200A      		move.l %a2,%d0
 779 0468 4480      		neg.l %d0
 780 046a 2F00      		move.l %d0,-(%sp)
 781               		.cfi_def_cfa_offset 68
 782 046c 4EB9 0000 		jsr inkey
 782      0000 
 783               	.LVL66:
 296:test3.c       **** 
 784               		.loc 1 296 25 view .LVU142
 785 0472 2479 0000 		move.l i,%a2
 785      0000 
 296:test3.c       **** 
 786               		.loc 1 296 29 view .LVU143
 787 0478 1580 7800 		move.b %d0,(%a2,%d7.l)
 298:test3.c       ****                 {
 788               		.loc 1 298 17 is_stmt 1 view .LVU144
 298:test3.c       ****                 {
 789               		.loc 1 298 20 is_stmt 0 view .LVU145
 790 047c 588F      		addq.l #4,%sp
 791               		.cfi_def_cfa_offset 64
 792 047e 0C00 FFFF 		cmp.b #-1,%d0
 793 0482 6700 014A 		jeq .L25
 300:test3.c       ****                     {
 794               		.loc 1 300 21 is_stmt 1 view .LVU146
 300:test3.c       ****                     {
 795               		.loc 1 300 24 is_stmt 0 view .LVU147
 796 0486 41F9 0000 		lea in_alt_screen,%a0
68K GAS  /tmp/ccdyPHKc.s 			page 25


 796      0000 
 797 048c 4A30 A800 		tst.b (%a0,%a2.l)
 798 0490 6600 02B6 		jne .L55
 309:test3.c       ****                         last_keybuf_len[i]++;
 799               		.loc 1 309 25 is_stmt 1 view .LVU148
 309:test3.c       ****                         last_keybuf_len[i]++;
 800               		.loc 1 309 55 is_stmt 0 view .LVU149
 801 0494 220A      		move.l %a2,%d1
 802 0496 D28A      		add.l %a2,%d1
 803 0498 D281      		add.l %d1,%d1
 804 049a 41F9 0000 		lea last_keybuf_len,%a0
 804      0000 
 805 04a0 2270 1800 		move.l (%a0,%d1.l),%a1
 309:test3.c       ****                         last_keybuf_len[i]++;
 806               		.loc 1 309 60 view .LVU150
 807 04a4 41F2 1800 		lea (%a2,%d1.l),%a0
 808 04a8 D1C8      		add.l %a0,%a0
 809 04aa D1FC 0000 		add.l #last_keybuf,%a0
 809      0000 
 810 04b0 1180 9800 		move.b %d0,(%a0,%a1.l)
 310:test3.c       ****                         last_keybuf[i][last_keybuf_len[i]] = '\0';
 811               		.loc 1 310 25 is_stmt 1 view .LVU151
 310:test3.c       ****                         last_keybuf[i][last_keybuf_len[i]] = '\0';
 812               		.loc 1 310 43 is_stmt 0 view .LVU152
 813 04b4 2009      		move.l %a1,%d0
 814 04b6 5280      		addq.l #1,%d0
 815 04b8 43F9 0000 		lea last_keybuf_len,%a1
 815      0000 
 816 04be 2380 1800 		move.l %d0,(%a1,%d1.l)
 311:test3.c       ****                     }
 817               		.loc 1 311 25 is_stmt 1 view .LVU153
 311:test3.c       ****                     }
 818               		.loc 1 311 60 is_stmt 0 view .LVU154
 819 04c2 4230 0800 		clr.b (%a0,%d0.l)
 820               	.L27:
 376:test3.c       ****             }
 821               		.loc 1 376 17 is_stmt 1 view .LVU155
 376:test3.c       ****             }
 822               		.loc 1 376 29 is_stmt 0 view .LVU156
 823 04c6 50F2 7800 		st (%a2,%d7.l)
 824 04ca 6000 FE3C 		jra .L39
 825               	.L44:
 826 04ce 91C8      		sub.l %a0,%a0
 384:test3.c       ****                     else
 827               		.loc 1 384 36 view .LVU157
 828 04d0 D080      		add.l %d0,%d0
 829 04d2 2D88 0800 		move.l %a0,(%a6,%d0.l)
 388:test3.c       ****                     fast_printf(i == 0, i == 1, CURSORINVISIBLE); // Hide the cursor
 830               		.loc 1 388 21 is_stmt 1 view .LVU158
 388:test3.c       ****                     fast_printf(i == 0, i == 1, CURSORINVISIBLE); // Hide the cursor
 831               		.loc 1 388 41 is_stmt 0 view .LVU159
 832 04d6 2F81 0834 		move.l %d1,52(%sp,%d0.l)
 389:test3.c       ****                     fast_printf(i == 0, i == 1, SAVECURSORLOC); // Save the cursor position
 833               		.loc 1 389 21 is_stmt 1 view .LVU160
 834 04da 4879 0000 		pea .LC1
 834      0000 
 835               		.cfi_def_cfa_offset 68
68K GAS  /tmp/ccdyPHKc.s 			page 26


 836 04e0 7201      		moveq #1,%d1
 837 04e2 B28A      		cmp.l %a2,%d1
 838 04e4 57C0      		seq %d0
 839 04e6 4880      		ext.w %d0
 840 04e8 48C0      		ext.l %d0
 841 04ea 4480      		neg.l %d0
 842 04ec 2F00      		move.l %d0,-(%sp)
 843               		.cfi_def_cfa_offset 72
 844 04ee B4FC 0000 		cmp.w #0,%a2
 845 04f2 57C0      		seq %d0
 846 04f4 4880      		ext.w %d0
 847 04f6 3440      		move.w %d0,%a2
 848 04f8 240A      		move.l %a2,%d2
 849 04fa 4482      		neg.l %d2
 850 04fc 2F02      		move.l %d2,-(%sp)
 851               		.cfi_def_cfa_offset 76
 852 04fe 4E93      		jsr (%a3)
 853               	.LVL67:
 390:test3.c       ****                     fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[47;30m%s\x1b[K\x1b[0m", tip_list[ti
 854               		.loc 1 390 21 view .LVU161
 855 0500 2039 0000 		move.l i,%d0
 855      0000 
 856 0506 4879 0000 		pea .LC2
 856      0000 
 857               		.cfi_def_cfa_offset 80
 858 050c 7401      		moveq #1,%d2
 859 050e B480      		cmp.l %d0,%d2
 860 0510 57C1      		seq %d1
 861 0512 4881      		ext.w %d1
 862 0514 48C1      		ext.l %d1
 863 0516 4481      		neg.l %d1
 864 0518 2F01      		move.l %d1,-(%sp)
 865               		.cfi_def_cfa_offset 84
 866 051a 4A80      		tst.l %d0
 867 051c 57C0      		seq %d0
 868 051e 4880      		ext.w %d0
 869 0520 48C0      		ext.l %d0
 870 0522 4480      		neg.l %d0
 871 0524 2F00      		move.l %d0,-(%sp)
 872               		.cfi_def_cfa_offset 88
 873 0526 4E93      		jsr (%a3)
 874               	.LVL68:
 391:test3.c       ****                     fast_printf(i == 0, i == 1, RETCURSORLOC); // Restore the cursor position
 875               		.loc 1 391 21 view .LVU162
 391:test3.c       ****                     fast_printf(i == 0, i == 1, RETCURSORLOC); // Restore the cursor position
 876               		.loc 1 391 105 is_stmt 0 view .LVU163
 877 0528 2039 0000 		move.l i,%d0
 877      0000 
 878 052e 2200      		move.l %d0,%d1
 879 0530 D280      		add.l %d0,%d1
 880 0532 D281      		add.l %d1,%d1
 391:test3.c       ****                     fast_printf(i == 0, i == 1, RETCURSORLOC); // Restore the cursor position
 881               		.loc 1 391 97 view .LVU164
 882 0534 2076 1800 		move.l (%a6,%d1.l),%a0
 883 0538 2208      		move.l %a0,%d1
 884 053a D288      		add.l %a0,%d1
 885 053c D288      		add.l %a0,%d1
68K GAS  /tmp/ccdyPHKc.s 			page 27


 886 053e 2401      		move.l %d1,%d2
 887 0540 EB8A      		lsl.l #5,%d2
 888 0542 D282      		add.l %d2,%d1
 889 0544 D288      		add.l %a0,%d1
 391:test3.c       ****                     fast_printf(i == 0, i == 1, RETCURSORLOC); // Restore the cursor position
 890               		.loc 1 391 21 view .LVU165
 891 0546 0681 0000 		add.l #tip_list,%d1
 891      0000 
 892 054c 2F01      		move.l %d1,-(%sp)
 893               		.cfi_def_cfa_offset 92
 894 054e 4879 0000 		pea .LC9
 894      0000 
 895               		.cfi_def_cfa_offset 96
 896 0554 7401      		moveq #1,%d2
 897 0556 B480      		cmp.l %d0,%d2
 898 0558 57C1      		seq %d1
 899 055a 4881      		ext.w %d1
 900 055c 48C1      		ext.l %d1
 901 055e 4481      		neg.l %d1
 902 0560 2F01      		move.l %d1,-(%sp)
 903               		.cfi_def_cfa_offset 100
 904 0562 4A80      		tst.l %d0
 905 0564 57C0      		seq %d0
 906 0566 4880      		ext.w %d0
 907 0568 48C0      		ext.l %d0
 908 056a 4480      		neg.l %d0
 909 056c 2F00      		move.l %d0,-(%sp)
 910               		.cfi_def_cfa_offset 104
 911 056e 4E93      		jsr (%a3)
 912               	.LVL69:
 392:test3.c       ****                     fast_printf(i == 0, i == 1, CURSORVISIBLE); // Make the cursor visible again
 913               		.loc 1 392 21 is_stmt 1 view .LVU166
 914 0570 2039 0000 		move.l i,%d0
 914      0000 
 915 0576 4FEF 0024 		lea (36,%sp),%sp
 916               		.cfi_def_cfa_offset 68
 917 057a 2EBC 0000 		move.l #.LC4,(%sp)
 917      0000 
 918 0580 B480      		cmp.l %d0,%d2
 919 0582 57C1      		seq %d1
 920 0584 4881      		ext.w %d1
 921 0586 48C1      		ext.l %d1
 922 0588 4481      		neg.l %d1
 923 058a 2F01      		move.l %d1,-(%sp)
 924               		.cfi_def_cfa_offset 72
 925 058c 4A80      		tst.l %d0
 926 058e 57C0      		seq %d0
 927 0590 4880      		ext.w %d0
 928 0592 48C0      		ext.l %d0
 929 0594 4480      		neg.l %d0
 930 0596 2F00      		move.l %d0,-(%sp)
 931               		.cfi_def_cfa_offset 76
 932 0598 4E93      		jsr (%a3)
 933               	.LVL70:
 393:test3.c       ****                 }
 934               		.loc 1 393 21 view .LVU167
 935 059a 2039 0000 		move.l i,%d0
68K GAS  /tmp/ccdyPHKc.s 			page 28


 935      0000 
 936 05a0 4879 0000 		pea .LC5
 936      0000 
 937               		.cfi_def_cfa_offset 80
 938 05a6 B480      		cmp.l %d0,%d2
 939 05a8 57C1      		seq %d1
 940 05aa 4881      		ext.w %d1
 941 05ac 48C1      		ext.l %d1
 942 05ae 4481      		neg.l %d1
 943 05b0 2F01      		move.l %d1,-(%sp)
 944               		.cfi_def_cfa_offset 84
 945 05b2 4A80      		tst.l %d0
 946 05b4 57C0      		seq %d0
 947 05b6 4880      		ext.w %d0
 948 05b8 48C0      		ext.l %d0
 949 05ba 4480      		neg.l %d0
 950 05bc 2F00      		move.l %d0,-(%sp)
 951               		.cfi_def_cfa_offset 88
 952 05be 4E93      		jsr (%a3)
 953               	.LVL71:
 292:test3.c       ****         {
 954               		.loc 1 292 30 is_stmt 0 view .LVU168
 955 05c0 2479 0000 		move.l i,%a2
 955      0000 
 956 05c6 4FEF 0018 		lea (24,%sp),%sp
 957               		.cfi_def_cfa_offset 64
 958 05ca 6000 FD3C 		jra .L39
 959               	.L25:
 314:test3.c       ****                 {
 960               		.loc 1 314 22 is_stmt 1 view .LVU169
 314:test3.c       ****                 {
 961               		.loc 1 314 41 is_stmt 0 view .LVU170
 962 05ce 200A      		move.l %a2,%d0
 963 05d0 D08A      		add.l %a2,%d0
 964 05d2 2040      		move.l %d0,%a0
 965 05d4 D1C0      		add.l %d0,%a0
 966 05d6 43F9 0000 		lea last_keybuf_len,%a1
 966      0000 
 967 05dc 2231 8800 		move.l (%a1,%a0.l),%d1
 314:test3.c       ****                 {
 968               		.loc 1 314 25 view .LVU171
 969 05e0 6F00 FEE4 		jle .L27
 316:test3.c       ****                     {
 970               		.loc 1 316 21 is_stmt 1 view .LVU172
 316:test3.c       ****                     {
 971               		.loc 1 316 43 is_stmt 0 view .LVU173
 972 05e4 D1CA      		add.l %a2,%a0
 973 05e6 D1C8      		add.l %a0,%a0
 974 05e8 D1FC 0000 		add.l #last_keybuf,%a0
 974      0000 
 316:test3.c       ****                     {
 975               		.loc 1 316 25 view .LVU174
 976 05ee 7400      		moveq #0,%d2
 977 05f0 1410      		move.b (%a0),%d2
 978 05f2 2242      		move.l %d2,%a1
 979 05f4 741B      		moveq #27,%d2
 980 05f6 B489      		cmp.l %a1,%d2
68K GAS  /tmp/ccdyPHKc.s 			page 29


 981 05f8 6600 01C0 		jne .L29
 316:test3.c       ****                     {
 982               		.loc 1 316 24 view .LVU175
 983 05fc 4A28 0001 		tst.b 1(%a0)
 984 0600 6600 01B8 		jne .L29
 318:test3.c       ****                         fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[47;30m%s\x1b[K\x1b[0m", tip_lis
 985               		.loc 1 318 25 is_stmt 1 view .LVU176
 986 0604 4879 0000 		pea .LC8
 986      0000 
 987               		.cfi_def_cfa_offset 68
 988 060a 7201      		moveq #1,%d1
 989 060c B28A      		cmp.l %a2,%d1
 990 060e 57C0      		seq %d0
 991 0610 4880      		ext.w %d0
 992 0612 48C0      		ext.l %d0
 993 0614 4480      		neg.l %d0
 994 0616 2F00      		move.l %d0,-(%sp)
 995               		.cfi_def_cfa_offset 72
 996 0618 B4FC 0000 		cmp.w #0,%a2
 997 061c 57C0      		seq %d0
 998 061e 4880      		ext.w %d0
 999 0620 48C0      		ext.l %d0
 1000 0622 4480      		neg.l %d0
 1001 0624 2F00      		move.l %d0,-(%sp)
 1002               		.cfi_def_cfa_offset 76
 1003 0626 4E93      		jsr (%a3)
 1004               	.LVL72:
 319:test3.c       ****                         fast_printf(i == 0, i == 1, CURSORMOVE, screen_height - 2, 2); // Move to t
 1005               		.loc 1 319 25 view .LVU177
 319:test3.c       ****                         fast_printf(i == 0, i == 1, CURSORMOVE, screen_height - 2, 2); // Move to t
 1006               		.loc 1 319 109 is_stmt 0 view .LVU178
 1007 0628 2039 0000 		move.l i,%d0
 1007      0000 
 1008 062e 2200      		move.l %d0,%d1
 1009 0630 D280      		add.l %d0,%d1
 1010 0632 D281      		add.l %d1,%d1
 319:test3.c       ****                         fast_printf(i == 0, i == 1, CURSORMOVE, screen_height - 2, 2); // Move to t
 1011               		.loc 1 319 101 view .LVU179
 1012 0634 2076 1800 		move.l (%a6,%d1.l),%a0
 1013 0638 2208      		move.l %a0,%d1
 1014 063a D288      		add.l %a0,%d1
 1015 063c D288      		add.l %a0,%d1
 1016 063e 2401      		move.l %d1,%d2
 1017 0640 EB8A      		lsl.l #5,%d2
 1018 0642 D282      		add.l %d2,%d1
 1019 0644 D288      		add.l %a0,%d1
 319:test3.c       ****                         fast_printf(i == 0, i == 1, CURSORMOVE, screen_height - 2, 2); // Move to t
 1020               		.loc 1 319 25 view .LVU180
 1021 0646 0681 0000 		add.l #tip_list,%d1
 1021      0000 
 1022 064c 2F01      		move.l %d1,-(%sp)
 1023               		.cfi_def_cfa_offset 80
 1024 064e 4879 0000 		pea .LC9
 1024      0000 
 1025               		.cfi_def_cfa_offset 84
 1026 0654 7401      		moveq #1,%d2
 1027 0656 B480      		cmp.l %d0,%d2
68K GAS  /tmp/ccdyPHKc.s 			page 30


 1028 0658 57C1      		seq %d1
 1029 065a 4881      		ext.w %d1
 1030 065c 48C1      		ext.l %d1
 1031 065e 4481      		neg.l %d1
 1032 0660 2F01      		move.l %d1,-(%sp)
 1033               		.cfi_def_cfa_offset 88
 1034 0662 4A80      		tst.l %d0
 1035 0664 57C0      		seq %d0
 1036 0666 4880      		ext.w %d0
 1037 0668 48C0      		ext.l %d0
 1038 066a 4480      		neg.l %d0
 1039 066c 2F00      		move.l %d0,-(%sp)
 1040               		.cfi_def_cfa_offset 92
 1041 066e 4E93      		jsr (%a3)
 1042               	.LVL73:
 320:test3.c       ****                         fast_printf(i == 0, i == 1, "\x1b[1m%s\x1b[0m│%s", msg_input_prompt, msg_
 1043               		.loc 1 320 25 is_stmt 1 view .LVU181
 1044 0670 2039 0000 		move.l i,%d0
 1044      0000 
 1045 0676 4878 0002 		pea 2.w
 1046               		.cfi_def_cfa_offset 96
 1047 067a 2239 0000 		move.l screen_height,%d1
 1047      0000 
 1048 0680 5581      		subq.l #2,%d1
 1049 0682 2F01      		move.l %d1,-(%sp)
 1050               		.cfi_def_cfa_offset 100
 1051 0684 4879 0000 		pea .LC10
 1051      0000 
 1052               		.cfi_def_cfa_offset 104
 1053 068a B480      		cmp.l %d0,%d2
 1054 068c 57C1      		seq %d1
 1055 068e 4881      		ext.w %d1
 1056 0690 48C1      		ext.l %d1
 1057 0692 4481      		neg.l %d1
 1058 0694 2F01      		move.l %d1,-(%sp)
 1059               		.cfi_def_cfa_offset 108
 1060 0696 4A80      		tst.l %d0
 1061 0698 57C0      		seq %d0
 1062 069a 4880      		ext.w %d0
 1063 069c 48C0      		ext.l %d0
 1064 069e 4480      		neg.l %d0
 1065 06a0 2F00      		move.l %d0,-(%sp)
 1066               		.cfi_def_cfa_offset 112
 1067 06a2 4E93      		jsr (%a3)
 1068               	.LVL74:
 321:test3.c       ****                         inappcom[i] = true; // Enter command input mode
 1069               		.loc 1 321 25 view .LVU182
 321:test3.c       ****                         inappcom[i] = true; // Enter command input mode
 1070               		.loc 1 321 103 is_stmt 0 view .LVU183
 1071 06a4 2039 0000 		move.l i,%d0
 1071      0000 
 321:test3.c       ****                         inappcom[i] = true; // Enter command input mode
 1072               		.loc 1 321 25 view .LVU184
 1073 06aa 4FEF 0030 		lea (48,%sp),%sp
 1074               		.cfi_def_cfa_offset 64
 321:test3.c       ****                         inappcom[i] = true; // Enter command input mode
 1075               		.loc 1 321 103 view .LVU185
68K GAS  /tmp/ccdyPHKc.s 			page 31


 1076 06ae 2200      		move.l %d0,%d1
 1077 06b0 D280      		add.l %d0,%d1
 1078 06b2 D280      		add.l %d0,%d1
 1079 06b4 2401      		move.l %d1,%d2
 1080 06b6 EB8A      		lsl.l #5,%d2
 1081 06b8 D282      		add.l %d2,%d1
 1082 06ba D280      		add.l %d0,%d1
 321:test3.c       ****                         inappcom[i] = true; // Enter command input mode
 1083               		.loc 1 321 25 view .LVU186
 1084 06bc 0681 0000 		add.l #msg_buf,%d1
 1084      0000 
 1085 06c2 2F01      		move.l %d1,-(%sp)
 1086               		.cfi_def_cfa_offset 68
 1087 06c4 4879 0000 		pea msg_input_prompt
 1087      0000 
 1088               		.cfi_def_cfa_offset 72
 1089 06ca 4879 0000 		pea .LC11
 1089      0000 
 1090               		.cfi_def_cfa_offset 76
 1091 06d0 7401      		moveq #1,%d2
 1092 06d2 B480      		cmp.l %d0,%d2
 1093 06d4 57C1      		seq %d1
 1094 06d6 4881      		ext.w %d1
 1095 06d8 48C1      		ext.l %d1
 1096 06da 4481      		neg.l %d1
 1097 06dc 2F01      		move.l %d1,-(%sp)
 1098               		.cfi_def_cfa_offset 80
 1099 06de 4A80      		tst.l %d0
 1100 06e0 57C0      		seq %d0
 1101 06e2 4880      		ext.w %d0
 1102 06e4 48C0      		ext.l %d0
 1103 06e6 4480      		neg.l %d0
 1104 06e8 2F00      		move.l %d0,-(%sp)
 1105               		.cfi_def_cfa_offset 84
 1106 06ea 4E93      		jsr (%a3)
 1107               	.LVL75:
 322:test3.c       ****                         cmd_buf_len[i] = 0; // Reset the command buffer
 1108               		.loc 1 322 25 is_stmt 1 view .LVU187
 322:test3.c       ****                         cmd_buf_len[i] = 0; // Reset the command buffer
 1109               		.loc 1 322 33 is_stmt 0 view .LVU188
 1110 06ec 2479 0000 		move.l i,%a2
 1110      0000 
 322:test3.c       ****                         cmd_buf_len[i] = 0; // Reset the command buffer
 1111               		.loc 1 322 37 view .LVU189
 1112 06f2 15BC 0001 		move.b #1,(%a2,%d3.l)
 1112      3800 
 323:test3.c       ****                         cmd_buf[i][0] = '\0';
 1113               		.loc 1 323 25 is_stmt 1 view .LVU190
 323:test3.c       ****                         cmd_buf[i][0] = '\0';
 1114               		.loc 1 323 40 is_stmt 0 view .LVU191
 1115 06f8 200A      		move.l %a2,%d0
 1116 06fa D08A      		add.l %a2,%d0
 1117 06fc 2200      		move.l %d0,%d1
 1118 06fe D280      		add.l %d0,%d1
 1119 0700 41F9 0000 		lea cmd_buf_len,%a0
 1119      0000 
 1120 0706 42B0 1800 		clr.l (%a0,%d1.l)
68K GAS  /tmp/ccdyPHKc.s 			page 32


 324:test3.c       ****                     }
 1121               		.loc 1 324 25 is_stmt 1 view .LVU192
 324:test3.c       ****                     }
 1122               		.loc 1 324 39 is_stmt 0 view .LVU193
 1123 070a 2200      		move.l %d0,%d1
 1124 070c D28A      		add.l %a2,%d1
 1125 070e 2401      		move.l %d1,%d2
 1126 0710 EB8A      		lsl.l #5,%d2
 1127 0712 D282      		add.l %d2,%d1
 1128 0714 D28A      		add.l %a2,%d1
 1129 0716 43F9 0000 		lea cmd_buf,%a1
 1129      0000 
 1130 071c 4231 1800 		clr.b (%a1,%d1.l)
 1131 0720 4FEF 0014 		lea (20,%sp),%sp
 1132               		.cfi_def_cfa_offset 64
 1133               	.L30:
 373:test3.c       ****                     last_keybuf_len[i] = 0;
 1134               		.loc 1 373 21 is_stmt 1 view .LVU194
 373:test3.c       ****                     last_keybuf_len[i] = 0;
 1135               		.loc 1 373 39 is_stmt 0 view .LVU195
 1136 0724 D080      		add.l %d0,%d0
 1137 0726 2200      		move.l %d0,%d1
 1138 0728 D28A      		add.l %a2,%d1
 1139 072a D281      		add.l %d1,%d1
 1140 072c 41F9 0000 		lea last_keybuf,%a0
 1140      0000 
 1141 0732 4230 1800 		clr.b (%a0,%d1.l)
 374:test3.c       ****                 }
 1142               		.loc 1 374 21 is_stmt 1 view .LVU196
 374:test3.c       ****                 }
 1143               		.loc 1 374 40 is_stmt 0 view .LVU197
 1144 0736 43F9 0000 		lea last_keybuf_len,%a1
 1144      0000 
 1145 073c 42B1 0800 		clr.l (%a1,%d0.l)
 1146               	.L56:
 376:test3.c       ****             }
 1147               		.loc 1 376 17 is_stmt 1 view .LVU198
 376:test3.c       ****             }
 1148               		.loc 1 376 29 is_stmt 0 view .LVU199
 1149 0740 50F2 7800 		st (%a2,%d7.l)
 1150 0744 6000 FBC2 		jra .L39
 1151               	.L55:
 302:test3.c       ****                         in_alt_screen[i] = false;
 1152               		.loc 1 302 25 is_stmt 1 view .LVU200
 1153 0748 4878 002F 		pea 47.w
 1154               		.cfi_def_cfa_offset 68
 1155 074c 4879 0000 		pea .LC6
 1155      0000 
 1156               		.cfi_def_cfa_offset 72
 1157 0752 7201      		moveq #1,%d1
 1158 0754 B28A      		cmp.l %a2,%d1
 1159 0756 57C0      		seq %d0
 1160 0758 4880      		ext.w %d0
 1161 075a 48C0      		ext.l %d0
 1162 075c 4480      		neg.l %d0
 1163 075e 2F00      		move.l %d0,-(%sp)
 1164               		.cfi_def_cfa_offset 76
68K GAS  /tmp/ccdyPHKc.s 			page 33


 1165 0760 B4FC 0000 		cmp.w #0,%a2
 1166 0764 57C0      		seq %d0
 1167 0766 4880      		ext.w %d0
 1168 0768 48C0      		ext.l %d0
 1169 076a 4480      		neg.l %d0
 1170 076c 2F00      		move.l %d0,-(%sp)
 1171               		.cfi_def_cfa_offset 80
 1172 076e 4E93      		jsr (%a3)
 1173               	.LVL76:
 303:test3.c       ****                         fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[47;30m%s\x1b[K", command_prompt
 1174               		.loc 1 303 25 view .LVU201
 303:test3.c       ****                         fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[47;30m%s\x1b[K", command_prompt
 1175               		.loc 1 303 38 is_stmt 0 view .LVU202
 1176 0770 2039 0000 		move.l i,%d0
 1176      0000 
 303:test3.c       ****                         fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[47;30m%s\x1b[K", command_prompt
 1177               		.loc 1 303 42 view .LVU203
 1178 0776 41F9 0000 		lea in_alt_screen,%a0
 1178      0000 
 1179 077c 4230 0800 		clr.b (%a0,%d0.l)
 304:test3.c       ****                     }
 1180               		.loc 1 304 25 is_stmt 1 view .LVU204
 1181 0780 4879 0000 		pea command_prompt
 1181      0000 
 1182               		.cfi_def_cfa_offset 84
 1183 0786 4879 0000 		pea .LC7
 1183      0000 
 1184               		.cfi_def_cfa_offset 88
 1185 078c 7401      		moveq #1,%d2
 1186 078e B480      		cmp.l %d0,%d2
 1187 0790 57C1      		seq %d1
 1188 0792 4881      		ext.w %d1
 1189 0794 48C1      		ext.l %d1
 1190 0796 4481      		neg.l %d1
 1191 0798 2F01      		move.l %d1,-(%sp)
 1192               		.cfi_def_cfa_offset 92
 1193 079a 4A80      		tst.l %d0
 1194 079c 57C0      		seq %d0
 1195 079e 4880      		ext.w %d0
 1196 07a0 48C0      		ext.l %d0
 1197 07a2 4480      		neg.l %d0
 1198 07a4 2F00      		move.l %d0,-(%sp)
 1199               		.cfi_def_cfa_offset 96
 1200 07a6 4E93      		jsr (%a3)
 1201               	.LVL77:
 376:test3.c       ****             }
 1202               		.loc 1 376 25 is_stmt 0 view .LVU205
 1203 07a8 2479 0000 		move.l i,%a2
 1203      0000 
 1204 07ae 4FEF 0020 		lea (32,%sp),%sp
 1205               		.cfi_def_cfa_offset 64
 376:test3.c       ****             }
 1206               		.loc 1 376 17 is_stmt 1 view .LVU206
 376:test3.c       ****             }
 1207               		.loc 1 376 29 is_stmt 0 view .LVU207
 1208 07b2 50F2 7800 		st (%a2,%d7.l)
 1209 07b6 6000 FB50 		jra .L39
68K GAS  /tmp/ccdyPHKc.s 			page 34


 1210               	.L29:
 326:test3.c       ****                     {
 1211               		.loc 1 326 26 is_stmt 1 view .LVU208
 326:test3.c       ****                     {
 1212               		.loc 1 326 30 is_stmt 0 view .LVU209
 1213 07ba 747F      		moveq #127,%d2
 1214 07bc B489      		cmp.l %a1,%d2
 1215 07be 6600 00A0 		jne .L32
 326:test3.c       ****                     {
 1216               		.loc 1 326 29 view .LVU210
 1217 07c2 4A28 0001 		tst.b 1(%a0)
 1218 07c6 6600 0098 		jne .L32
 328:test3.c       ****                         {
 1219               		.loc 1 328 25 is_stmt 1 view .LVU211
 328:test3.c       ****                         {
 1220               		.loc 1 328 40 is_stmt 0 view .LVU212
 1221 07ca 2200      		move.l %d0,%d1
 1222 07cc D280      		add.l %d0,%d1
 328:test3.c       ****                         {
 1223               		.loc 1 328 28 view .LVU213
 1224 07ce 41F9 0000 		lea cmd_buf_len,%a0
 1224      0000 
 1225 07d4 4AB0 1800 		tst.l (%a0,%d1.l)
 1226 07d8 6700 FF4A 		jeq .L30
 330:test3.c       ****                             cmd_buf_len[i]--; // Remove the last character from the buffer
 1227               		.loc 1 330 29 is_stmt 1 view .LVU214
 1228 07dc 4879 0000 		pea term_backspace
 1228      0000 
 1229               		.cfi_def_cfa_offset 68
 1230 07e2 4879 0000 		pea .LC12
 1230      0000 
 1231               		.cfi_def_cfa_offset 72
 1232 07e8 7201      		moveq #1,%d1
 1233 07ea B28A      		cmp.l %a2,%d1
 1234 07ec 57C0      		seq %d0
 1235 07ee 4880      		ext.w %d0
 1236 07f0 48C0      		ext.l %d0
 1237 07f2 4480      		neg.l %d0
 1238 07f4 2F00      		move.l %d0,-(%sp)
 1239               		.cfi_def_cfa_offset 76
 1240 07f6 B4FC 0000 		cmp.w #0,%a2
 1241 07fa 57C0      		seq %d0
 1242 07fc 4880      		ext.w %d0
 1243 07fe 48C0      		ext.l %d0
 1244 0800 4480      		neg.l %d0
 1245 0802 2F00      		move.l %d0,-(%sp)
 1246               		.cfi_def_cfa_offset 80
 1247 0804 4E93      		jsr (%a3)
 1248               	.LVL78:
 331:test3.c       ****                             cmd_buf[i][cmd_buf_len[i]] = '\0';
 1249               		.loc 1 331 29 view .LVU215
 331:test3.c       ****                             cmd_buf[i][cmd_buf_len[i]] = '\0';
 1250               		.loc 1 331 40 is_stmt 0 view .LVU216
 1251 0806 2479 0000 		move.l i,%a2
 1251      0000 
 1252 080c 200A      		move.l %a2,%d0
 1253 080e D08A      		add.l %a2,%d0
68K GAS  /tmp/ccdyPHKc.s 			page 35


 1254 0810 2200      		move.l %d0,%d1
 1255 0812 D280      		add.l %d0,%d1
 331:test3.c       ****                             cmd_buf[i][cmd_buf_len[i]] = '\0';
 1256               		.loc 1 331 43 view .LVU217
 1257 0814 41F9 0000 		lea cmd_buf_len,%a0
 1257      0000 
 1258 081a 2270 1800 		move.l (%a0,%d1.l),%a1
 1259 081e 5389      		subq.l #1,%a1
 1260 0820 2189 1800 		move.l %a1,(%a0,%d1.l)
 332:test3.c       ****                         }
 1261               		.loc 1 332 29 is_stmt 1 view .LVU218
 332:test3.c       ****                         }
 1262               		.loc 1 332 56 is_stmt 0 view .LVU219
 1263 0824 2200      		move.l %d0,%d1
 1264 0826 D28A      		add.l %a2,%d1
 1265 0828 2401      		move.l %d1,%d2
 1266 082a EB8A      		lsl.l #5,%d2
 1267 082c 2041      		move.l %d1,%a0
 1268 082e D1C2      		add.l %d2,%a0
 1269 0830 D1CA      		add.l %a2,%a0
 1270 0832 D1FC 0000 		add.l #cmd_buf,%a0
 1270      0000 
 1271 0838 4230 9800 		clr.b (%a0,%a1.l)
 1272 083c 4FEF 0010 		lea (16,%sp),%sp
 1273               		.cfi_def_cfa_offset 64
 373:test3.c       ****                     last_keybuf_len[i] = 0;
 1274               		.loc 1 373 21 is_stmt 1 view .LVU220
 373:test3.c       ****                     last_keybuf_len[i] = 0;
 1275               		.loc 1 373 39 is_stmt 0 view .LVU221
 1276 0840 D080      		add.l %d0,%d0
 1277 0842 2200      		move.l %d0,%d1
 1278 0844 D28A      		add.l %a2,%d1
 1279 0846 D281      		add.l %d1,%d1
 1280 0848 41F9 0000 		lea last_keybuf,%a0
 1280      0000 
 1281 084e 4230 1800 		clr.b (%a0,%d1.l)
 374:test3.c       ****                 }
 1282               		.loc 1 374 21 is_stmt 1 view .LVU222
 374:test3.c       ****                 }
 1283               		.loc 1 374 40 is_stmt 0 view .LVU223
 1284 0852 43F9 0000 		lea last_keybuf_len,%a1
 1284      0000 
 1285 0858 42B1 0800 		clr.l (%a1,%d0.l)
 1286 085c 6000 FEE2 		jra .L56
 1287               	.L32:
 335:test3.c       ****                     {
 1288               		.loc 1 335 26 is_stmt 1 view .LVU224
 335:test3.c       ****                     {
 1289               		.loc 1 335 30 is_stmt 0 view .LVU225
 1290 0860 740D      		moveq #13,%d2
 1291 0862 B489      		cmp.l %a1,%d2
 1292 0864 6600 00D2 		jne .L34
 335:test3.c       ****                     {
 1293               		.loc 1 335 29 view .LVU226
 1294 0868 4A28 0001 		tst.b 1(%a0)
 1295 086c 6600 00CA 		jne .L34
 337:test3.c       ****                         {
68K GAS  /tmp/ccdyPHKc.s 			page 36


 1296               		.loc 1 337 25 is_stmt 1 view .LVU227
 337:test3.c       ****                         {
 1297               		.loc 1 337 40 is_stmt 0 view .LVU228
 1298 0870 2200      		move.l %d0,%d1
 1299 0872 D280      		add.l %d0,%d1
 1300 0874 41F9 0000 		lea cmd_buf_len,%a0
 1300      0000 
 1301 087a 2430 1800 		move.l (%a0,%d1.l),%d2
 337:test3.c       ****                         {
 1302               		.loc 1 337 28 view .LVU229
 1303 087e 6700 FEA4 		jeq .L30
 340:test3.c       ****                                 strncmp(cmd_buf[i], "help", 4) == 0 && cmd_buf_len[i] == 4)
 1304               		.loc 1 340 29 is_stmt 1 view .LVU230
 340:test3.c       ****                                 strncmp(cmd_buf[i], "help", 4) == 0 && cmd_buf_len[i] == 4)
 1305               		.loc 1 340 48 is_stmt 0 view .LVU231
 1306 0882 D08A      		add.l %a2,%d0
 1307 0884 2200      		move.l %d0,%d1
 1308 0886 EB89      		lsl.l #5,%d1
 1309 0888 D081      		add.l %d1,%d0
 1310 088a 41F2 0800 		lea (%a2,%d0.l),%a0
 1311 088e D1FC 0000 		add.l #cmd_buf,%a0
 1311      0000 
 340:test3.c       ****                                 strncmp(cmd_buf[i], "help", 4) == 0 && cmd_buf_len[i] == 4)
 1312               		.loc 1 340 32 view .LVU232
 1313 0894 0C10 0068 		cmp.b #104,(%a0)
 1314 0898 6700 016E 		jeq .L57
 1315               	.L35:
 341:test3.c       ****                             {
 1316               		.loc 1 341 33 discriminator 3 view .LVU233
 1317 089c 4878 0004 		pea 4.w
 1318               		.cfi_def_cfa_offset 68
 1319 08a0 4879 0000 		pea .LC13
 1319      0000 
 1320               		.cfi_def_cfa_offset 72
 1321 08a6 2F08      		move.l %a0,-(%sp)
 1322               		.cfi_def_cfa_offset 76
 1323 08a8 4EB9 0000 		jsr strncmp
 1323      0000 
 1324               	.LVL79:
 1325 08ae 4FEF 000C 		lea (12,%sp),%sp
 1326               		.cfi_def_cfa_offset 64
 340:test3.c       ****                                 strncmp(cmd_buf[i], "help", 4) == 0 && cmd_buf_len[i] == 4)
 1327               		.loc 1 340 89 discriminator 3 view .LVU234
 1328 08b2 4A80      		tst.l %d0
 1329 08b4 6606      		jne .L37
 341:test3.c       ****                             {
 1330               		.loc 1 341 69 view .LVU235
 1331 08b6 5982      		subq.l #4,%d2
 1332 08b8 6700 0156 		jeq .L36
 1333               	.L37:
 353:test3.c       ****                                 cmd_buf_len[i] = 0; // Clear the command buffer
 1334               		.loc 1 353 33 is_stmt 1 view .LVU236
 1335 08bc 4879 0000 		pea command_prompt
 1335      0000 
 1336               		.cfi_def_cfa_offset 68
 1337 08c2 4879 0000 		pea .LC9
 1337      0000 
68K GAS  /tmp/ccdyPHKc.s 			page 37


 1338               		.cfi_def_cfa_offset 72
 1339 08c8 7201      		moveq #1,%d1
 1340 08ca B28A      		cmp.l %a2,%d1
 1341 08cc 57C0      		seq %d0
 1342 08ce 4880      		ext.w %d0
 1343 08d0 48C0      		ext.l %d0
 1344 08d2 4480      		neg.l %d0
 1345 08d4 2F00      		move.l %d0,-(%sp)
 1346               		.cfi_def_cfa_offset 76
 1347 08d6 B4FC 0000 		cmp.w #0,%a2
 1348 08da 57C0      		seq %d0
 1349 08dc 4880      		ext.w %d0
 1350 08de 48C0      		ext.l %d0
 1351 08e0 4480      		neg.l %d0
 1352 08e2 2F00      		move.l %d0,-(%sp)
 1353               		.cfi_def_cfa_offset 80
 1354 08e4 4E93      		jsr (%a3)
 1355               	.LVL80:
 354:test3.c       ****                                 cmd_buf[i][0] = '\0';
 1356               		.loc 1 354 33 view .LVU237
 354:test3.c       ****                                 cmd_buf[i][0] = '\0';
 1357               		.loc 1 354 44 is_stmt 0 view .LVU238
 1358 08e6 2479 0000 		move.l i,%a2
 1358      0000 
 354:test3.c       ****                                 cmd_buf[i][0] = '\0';
 1359               		.loc 1 354 48 view .LVU239
 1360 08ec 200A      		move.l %a2,%d0
 1361 08ee D08A      		add.l %a2,%d0
 1362 08f0 2200      		move.l %d0,%d1
 1363 08f2 D280      		add.l %d0,%d1
 1364 08f4 41F9 0000 		lea cmd_buf_len,%a0
 1364      0000 
 1365 08fa 42B0 1800 		clr.l (%a0,%d1.l)
 355:test3.c       ****                             }
 1366               		.loc 1 355 33 is_stmt 1 view .LVU240
 355:test3.c       ****                             }
 1367               		.loc 1 355 47 is_stmt 0 view .LVU241
 1368 08fe 2200      		move.l %d0,%d1
 1369 0900 D28A      		add.l %a2,%d1
 1370 0902 2401      		move.l %d1,%d2
 1371 0904 EB8A      		lsl.l #5,%d2
 1372 0906 D282      		add.l %d2,%d1
 1373 0908 D28A      		add.l %a2,%d1
 1374 090a 43F9 0000 		lea cmd_buf,%a1
 1374      0000 
 1375 0910 4231 1800 		clr.b (%a1,%d1.l)
 1376 0914 4FEF 0010 		lea (16,%sp),%sp
 1377               		.cfi_def_cfa_offset 64
 373:test3.c       ****                     last_keybuf_len[i] = 0;
 1378               		.loc 1 373 21 is_stmt 1 view .LVU242
 373:test3.c       ****                     last_keybuf_len[i] = 0;
 1379               		.loc 1 373 39 is_stmt 0 view .LVU243
 1380 0918 D080      		add.l %d0,%d0
 1381 091a 2200      		move.l %d0,%d1
 1382 091c D28A      		add.l %a2,%d1
 1383 091e D281      		add.l %d1,%d1
 1384 0920 41F9 0000 		lea last_keybuf,%a0
68K GAS  /tmp/ccdyPHKc.s 			page 38


 1384      0000 
 1385 0926 4230 1800 		clr.b (%a0,%d1.l)
 374:test3.c       ****                 }
 1386               		.loc 1 374 21 is_stmt 1 view .LVU244
 374:test3.c       ****                 }
 1387               		.loc 1 374 40 is_stmt 0 view .LVU245
 1388 092a 43F9 0000 		lea last_keybuf_len,%a1
 1388      0000 
 1389 0930 42B1 0800 		clr.l (%a1,%d0.l)
 1390 0934 6000 FE0A 		jra .L56
 1391               	.L34:
 359:test3.c       ****                     {
 1392               		.loc 1 359 26 is_stmt 1 view .LVU246
 359:test3.c       ****                     {
 1393               		.loc 1 359 29 is_stmt 0 view .LVU247
 1394 0938 5381      		subq.l #1,%d1
 1395 093a 6600 FDE8 		jne .L30
 359:test3.c       ****                     {
 1396               		.loc 1 359 71 discriminator 1 view .LVU248
 1397 093e 2200      		move.l %d0,%d1
 1398 0940 D280      		add.l %d0,%d1
 1399 0942 2F41 002C 		move.l %d1,44(%sp)
 1400 0946 2241      		move.l %d1,%a1
 1401 0948 D3CA      		add.l %a2,%a1
 1402 094a 2209      		move.l %a1,%d1
 1403 094c D289      		add.l %a1,%d1
 1404 094e 43F9 0000 		lea last_keybuf,%a1
 1404      0000 
 1405 0954 1431 1800 		move.b (%a1,%d1.l),%d2
 359:test3.c       ****                     {
 1406               		.loc 1 359 54 discriminator 1 view .LVU249
 1407 0958 1202      		move.b %d2,%d1
 1408 095a 0601 FFE0 		add.b #-32,%d1
 1409 095e 0C01 005E 		cmp.b #94,%d1
 1410 0962 6200 FDC0 		jhi .L30
 361:test3.c       ****                         {
 1411               		.loc 1 361 25 is_stmt 1 view .LVU250
 361:test3.c       ****                         {
 1412               		.loc 1 361 40 is_stmt 0 view .LVU251
 1413 0966 43F9 0000 		lea cmd_buf_len,%a1
 1413      0000 
 1414 096c 222F 002C 		move.l 44(%sp),%d1
 1415 0970 2F71 1800 		move.l (%a1,%d1.l),48(%sp)
 1415      0030 
 361:test3.c       ****                         {
 1416               		.loc 1 361 28 view .LVU252
 1417 0976 7263      		moveq #99,%d1
 1418 0978 B2AF 0030 		cmp.l 48(%sp),%d1
 1419 097c 6500 018E 		jcs .L38
 363:test3.c       ****                             cmd_buf_len[i]++;
 1420               		.loc 1 363 29 is_stmt 1 view .LVU253
 363:test3.c       ****                             cmd_buf_len[i]++;
 1421               		.loc 1 363 56 is_stmt 0 view .LVU254
 1422 0980 D08A      		add.l %a2,%d0
 1423 0982 2200      		move.l %d0,%d1
 1424 0984 EB89      		lsl.l #5,%d1
 1425 0986 2241      		move.l %d1,%a1
68K GAS  /tmp/ccdyPHKc.s 			page 39


 1426 0988 D3C0      		add.l %d0,%a1
 1427 098a D3CA      		add.l %a2,%a1
 1428 098c 2209      		move.l %a1,%d1
 1429 098e 0681 0000 		add.l #cmd_buf,%d1
 1429      0000 
 1430 0994 226F 0030 		move.l 48(%sp),%a1
 1431 0998 1382 1800 		move.b %d2,(%a1,%d1.l)
 364:test3.c       ****                             cmd_buf[i][cmd_buf_len[i]] = '\0';
 1432               		.loc 1 364 29 is_stmt 1 view .LVU255
 364:test3.c       ****                             cmd_buf[i][cmd_buf_len[i]] = '\0';
 1433               		.loc 1 364 43 is_stmt 0 view .LVU256
 1434 099c 2009      		move.l %a1,%d0
 1435 099e 5280      		addq.l #1,%d0
 1436 09a0 43F9 0000 		lea cmd_buf_len,%a1
 1436      0000 
 1437 09a6 242F 002C 		move.l 44(%sp),%d2
 1438 09aa 2380 2800 		move.l %d0,(%a1,%d2.l)
 365:test3.c       ****                             fast_printf(i == 0, i == 1, "\x1b[47;30m%s\x1b[0m", last_keybuf[i]); //
 1439               		.loc 1 365 29 is_stmt 1 view .LVU257
 365:test3.c       ****                             fast_printf(i == 0, i == 1, "\x1b[47;30m%s\x1b[0m", last_keybuf[i]); //
 1440               		.loc 1 365 56 is_stmt 0 view .LVU258
 1441 09ae 2241      		move.l %d1,%a1
 1442 09b0 4231 0800 		clr.b (%a1,%d0.l)
 366:test3.c       ****                         }
 1443               		.loc 1 366 29 is_stmt 1 view .LVU259
 1444 09b4 2F08      		move.l %a0,-(%sp)
 1445               		.cfi_def_cfa_offset 68
 1446 09b6 4879 0000 		pea .LC12
 1446      0000 
 1447               		.cfi_def_cfa_offset 72
 1448 09bc 7201      		moveq #1,%d1
 1449 09be B28A      		cmp.l %a2,%d1
 1450 09c0 57C0      		seq %d0
 1451 09c2 4880      		ext.w %d0
 1452 09c4 48C0      		ext.l %d0
 1453 09c6 4480      		neg.l %d0
 1454 09c8 2F00      		move.l %d0,-(%sp)
 1455               		.cfi_def_cfa_offset 76
 1456 09ca B4FC 0000 		cmp.w #0,%a2
 1457 09ce 57C0      		seq %d0
 1458 09d0 4880      		ext.w %d0
 1459 09d2 48C0      		ext.l %d0
 1460 09d4 4480      		neg.l %d0
 1461 09d6 2F00      		move.l %d0,-(%sp)
 1462               		.cfi_def_cfa_offset 80
 1463 09d8 4E93      		jsr (%a3)
 1464               	.LVL81:
 373:test3.c       ****                     last_keybuf_len[i] = 0;
 1465               		.loc 1 373 35 is_stmt 0 view .LVU260
 1466 09da 2479 0000 		move.l i,%a2
 1466      0000 
 1467 09e0 4FEF 0010 		lea (16,%sp),%sp
 1468               		.cfi_def_cfa_offset 64
 1469 09e4 200A      		move.l %a2,%d0
 1470 09e6 D08A      		add.l %a2,%d0
 373:test3.c       ****                     last_keybuf_len[i] = 0;
 1471               		.loc 1 373 21 is_stmt 1 view .LVU261
68K GAS  /tmp/ccdyPHKc.s 			page 40


 373:test3.c       ****                     last_keybuf_len[i] = 0;
 1472               		.loc 1 373 39 is_stmt 0 view .LVU262
 1473 09e8 D080      		add.l %d0,%d0
 1474 09ea 2200      		move.l %d0,%d1
 1475 09ec D28A      		add.l %a2,%d1
 1476 09ee D281      		add.l %d1,%d1
 1477 09f0 41F9 0000 		lea last_keybuf,%a0
 1477      0000 
 1478 09f6 4230 1800 		clr.b (%a0,%d1.l)
 374:test3.c       ****                 }
 1479               		.loc 1 374 21 is_stmt 1 view .LVU263
 374:test3.c       ****                 }
 1480               		.loc 1 374 40 is_stmt 0 view .LVU264
 1481 09fa 43F9 0000 		lea last_keybuf_len,%a1
 1481      0000 
 1482 0a00 42B1 0800 		clr.l (%a1,%d0.l)
 1483 0a04 6000 FD3A 		jra .L56
 1484               	.L57:
 340:test3.c       ****                                 strncmp(cmd_buf[i], "help", 4) == 0 && cmd_buf_len[i] == 4)
 1485               		.loc 1 340 66 discriminator 1 view .LVU265
 1486 0a08 7001      		moveq #1,%d0
 1487 0a0a B082      		cmp.l %d2,%d0
 1488 0a0c 6600 FE8E 		jne .L35
 1489               	.L36:
 343:test3.c       ****                                 fast_printf(i == 0, i == 1, RESETSGR); // Reset text formatting
 1490               		.loc 1 343 33 is_stmt 1 view .LVU266
 1491 0a10 4878 002F 		pea 47.w
 1492               		.cfi_def_cfa_offset 68
 1493 0a14 4879 0000 		pea .LC14
 1493      0000 
 1494               		.cfi_def_cfa_offset 72
 1495 0a1a 7401      		moveq #1,%d2
 1496 0a1c B48A      		cmp.l %a2,%d2
 1497 0a1e 57C0      		seq %d0
 1498 0a20 4880      		ext.w %d0
 1499 0a22 48C0      		ext.l %d0
 1500 0a24 4480      		neg.l %d0
 1501 0a26 2F00      		move.l %d0,-(%sp)
 1502               		.cfi_def_cfa_offset 76
 1503 0a28 B4FC 0000 		cmp.w #0,%a2
 1504 0a2c 57C0      		seq %d0
 1505 0a2e 4880      		ext.w %d0
 1506 0a30 48C0      		ext.l %d0
 1507 0a32 4480      		neg.l %d0
 1508 0a34 2F00      		move.l %d0,-(%sp)
 1509               		.cfi_def_cfa_offset 80
 1510 0a36 4E93      		jsr (%a3)
 1511               	.LVL82:
 344:test3.c       ****                                 fast_printf(i == 0, i == 1, CLEARDISPLAY); // Clear the screen
 1512               		.loc 1 344 33 view .LVU267
 1513 0a38 2039 0000 		move.l i,%d0
 1513      0000 
 1514 0a3e 4879 0000 		pea .LC8
 1514      0000 
 1515               		.cfi_def_cfa_offset 84
 1516 0a44 B480      		cmp.l %d0,%d2
 1517 0a46 57C1      		seq %d1
68K GAS  /tmp/ccdyPHKc.s 			page 41


 1518 0a48 4881      		ext.w %d1
 1519 0a4a 48C1      		ext.l %d1
 1520 0a4c 4481      		neg.l %d1
 1521 0a4e 2F01      		move.l %d1,-(%sp)
 1522               		.cfi_def_cfa_offset 88
 1523 0a50 4A80      		tst.l %d0
 1524 0a52 57C0      		seq %d0
 1525 0a54 4880      		ext.w %d0
 1526 0a56 48C0      		ext.l %d0
 1527 0a58 4480      		neg.l %d0
 1528 0a5a 2F00      		move.l %d0,-(%sp)
 1529               		.cfi_def_cfa_offset 92
 1530 0a5c 4E93      		jsr (%a3)
 1531               	.LVL83:
 345:test3.c       ****                                 fast_printf(i == 0, i == 1, help_text); // Display help text
 1532               		.loc 1 345 33 view .LVU268
 1533 0a5e 2039 0000 		move.l i,%d0
 1533      0000 
 1534 0a64 4879 0000 		pea .LC15
 1534      0000 
 1535               		.cfi_def_cfa_offset 96
 1536 0a6a B480      		cmp.l %d0,%d2
 1537 0a6c 57C1      		seq %d1
 1538 0a6e 4881      		ext.w %d1
 1539 0a70 48C1      		ext.l %d1
 1540 0a72 4481      		neg.l %d1
 1541 0a74 2F01      		move.l %d1,-(%sp)
 1542               		.cfi_def_cfa_offset 100
 1543 0a76 4A80      		tst.l %d0
 1544 0a78 57C0      		seq %d0
 1545 0a7a 4880      		ext.w %d0
 1546 0a7c 48C0      		ext.l %d0
 1547 0a7e 4480      		neg.l %d0
 1548 0a80 2F00      		move.l %d0,-(%sp)
 1549               		.cfi_def_cfa_offset 104
 1550 0a82 4E93      		jsr (%a3)
 1551               	.LVL84:
 346:test3.c       ****                                 in_alt_screen[i] = true; // Indicate alternate screen is active
 1552               		.loc 1 346 33 view .LVU269
 1553 0a84 2039 0000 		move.l i,%d0
 1553      0000 
 1554 0a8a 4FEF 0024 		lea (36,%sp),%sp
 1555               		.cfi_def_cfa_offset 68
 1556 0a8e 2EBC 0000 		move.l #help_text,(%sp)
 1556      0000 
 1557 0a94 B480      		cmp.l %d0,%d2
 1558 0a96 57C1      		seq %d1
 1559 0a98 4881      		ext.w %d1
 1560 0a9a 48C1      		ext.l %d1
 1561 0a9c 4481      		neg.l %d1
 1562 0a9e 2F01      		move.l %d1,-(%sp)
 1563               		.cfi_def_cfa_offset 72
 1564 0aa0 4A80      		tst.l %d0
 1565 0aa2 57C0      		seq %d0
 1566 0aa4 4880      		ext.w %d0
 1567 0aa6 48C0      		ext.l %d0
 1568 0aa8 4480      		neg.l %d0
68K GAS  /tmp/ccdyPHKc.s 			page 42


 1569 0aaa 2F00      		move.l %d0,-(%sp)
 1570               		.cfi_def_cfa_offset 76
 1571 0aac 4E93      		jsr (%a3)
 1572               	.LVL85:
 347:test3.c       ****                                 cmd_buf_len[i] = 0; // Clear the command buffer
 1573               		.loc 1 347 33 view .LVU270
 347:test3.c       ****                                 cmd_buf_len[i] = 0; // Clear the command buffer
 1574               		.loc 1 347 46 is_stmt 0 view .LVU271
 1575 0aae 2479 0000 		move.l i,%a2
 1575      0000 
 347:test3.c       ****                                 cmd_buf_len[i] = 0; // Clear the command buffer
 1576               		.loc 1 347 50 view .LVU272
 1577 0ab4 41F9 0000 		lea in_alt_screen,%a0
 1577      0000 
 1578 0aba 11BC 0001 		move.b #1,(%a0,%a2.l)
 1578      A800 
 348:test3.c       ****                                 cmd_buf[i][0] = '\0';
 1579               		.loc 1 348 33 is_stmt 1 view .LVU273
 348:test3.c       ****                                 cmd_buf[i][0] = '\0';
 1580               		.loc 1 348 48 is_stmt 0 view .LVU274
 1581 0ac0 200A      		move.l %a2,%d0
 1582 0ac2 D08A      		add.l %a2,%d0
 1583 0ac4 2200      		move.l %d0,%d1
 1584 0ac6 D280      		add.l %d0,%d1
 1585 0ac8 43F9 0000 		lea cmd_buf_len,%a1
 1585      0000 
 1586 0ace 42B1 1800 		clr.l (%a1,%d1.l)
 349:test3.c       ****                             }
 1587               		.loc 1 349 33 is_stmt 1 view .LVU275
 349:test3.c       ****                             }
 1588               		.loc 1 349 47 is_stmt 0 view .LVU276
 1589 0ad2 2200      		move.l %d0,%d1
 1590 0ad4 D28A      		add.l %a2,%d1
 1591 0ad6 2401      		move.l %d1,%d2
 1592 0ad8 EB8A      		lsl.l #5,%d2
 1593 0ada D282      		add.l %d2,%d1
 1594 0adc D28A      		add.l %a2,%d1
 1595 0ade 41F9 0000 		lea cmd_buf,%a0
 1595      0000 
 1596 0ae4 4230 1800 		clr.b (%a0,%d1.l)
 1597 0ae8 4FEF 000C 		lea (12,%sp),%sp
 1598               		.cfi_def_cfa_offset 64
 373:test3.c       ****                     last_keybuf_len[i] = 0;
 1599               		.loc 1 373 21 is_stmt 1 view .LVU277
 373:test3.c       ****                     last_keybuf_len[i] = 0;
 1600               		.loc 1 373 39 is_stmt 0 view .LVU278
 1601 0aec D080      		add.l %d0,%d0
 1602 0aee 2200      		move.l %d0,%d1
 1603 0af0 D28A      		add.l %a2,%d1
 1604 0af2 D281      		add.l %d1,%d1
 1605 0af4 41F9 0000 		lea last_keybuf,%a0
 1605      0000 
 1606 0afa 4230 1800 		clr.b (%a0,%d1.l)
 374:test3.c       ****                 }
 1607               		.loc 1 374 21 is_stmt 1 view .LVU279
 374:test3.c       ****                 }
 1608               		.loc 1 374 40 is_stmt 0 view .LVU280
68K GAS  /tmp/ccdyPHKc.s 			page 43


 1609 0afe 43F9 0000 		lea last_keybuf_len,%a1
 1609      0000 
 1610 0b04 42B1 0800 		clr.l (%a1,%d0.l)
 1611 0b08 6000 FC36 		jra .L56
 1612               	.L38:
 368:test3.c       ****                         {
 1613               		.loc 1 368 30 is_stmt 1 view .LVU281
 1614               	.LBB4:
 370:test3.c       ****                         }
 1615               		.loc 1 370 29 view .LVU282
 1616 0b0c 4878 0001 		pea 1.w
 1617               		.cfi_def_cfa_offset 68
 1618 0b10 2F08      		move.l %a0,-(%sp)
 1619               		.cfi_def_cfa_offset 72
 1620 0b12 486A 0003 		pea 3(%a2)
 1621               		.cfi_def_cfa_offset 76
 1622 0b16 4EB9 0000 		jsr write
 1622      0000 
 1623               	.LVL86:
 1624               	.LBE4:
 373:test3.c       ****                     last_keybuf_len[i] = 0;
 1625               		.loc 1 373 35 is_stmt 0 view .LVU283
 1626 0b1c 2479 0000 		move.l i,%a2
 1626      0000 
 1627 0b22 4FEF 000C 		lea (12,%sp),%sp
 1628               		.cfi_def_cfa_offset 64
 1629 0b26 200A      		move.l %a2,%d0
 1630 0b28 D08A      		add.l %a2,%d0
 373:test3.c       ****                     last_keybuf_len[i] = 0;
 1631               		.loc 1 373 21 is_stmt 1 view .LVU284
 373:test3.c       ****                     last_keybuf_len[i] = 0;
 1632               		.loc 1 373 39 is_stmt 0 view .LVU285
 1633 0b2a D080      		add.l %d0,%d0
 1634 0b2c 2200      		move.l %d0,%d1
 1635 0b2e D28A      		add.l %a2,%d1
 1636 0b30 D281      		add.l %d1,%d1
 1637 0b32 41F9 0000 		lea last_keybuf,%a0
 1637      0000 
 1638 0b38 4230 1800 		clr.b (%a0,%d1.l)
 374:test3.c       ****                 }
 1639               		.loc 1 374 21 is_stmt 1 view .LVU286
 374:test3.c       ****                 }
 1640               		.loc 1 374 40 is_stmt 0 view .LVU287
 1641 0b3c 43F9 0000 		lea last_keybuf_len,%a1
 1641      0000 
 1642 0b42 42B1 0800 		clr.l (%a1,%d0.l)
 1643 0b46 6000 FBF8 		jra .L56
 1644               		.cfi_endproc
 1645               	.LFE5:
 1646               		.size	command_bar, .-command_bar
 1647               		.section	.rodata.str1.1
 1648               	.LC16:
 1649 00bf 1B5B 306D 		.string	"\033[0m\n\342\224\202\033[1;38;5;%dm%s: \033[0m"
 1649      0AE2 9482 
 1649      1B5B 313B 
 1649      3338 3B35 
 1649      3B25 646D 
68K GAS  /tmp/ccdyPHKc.s 			page 44


 1650               	.LC17:
 1651 00dc 1B5B 2564 		.string	"\033[%d;999H\342\224\202"
 1651      3B39 3939 
 1651      48E2 9482 
 1651      00
 1652               	.LC18:
 1653 00e9 1B5B 304B 		.string	"\033[0K"
 1653      00
 1654               	.LC19:
 1655 00ee 1B5B 3939 		.string	"\033[999;H\033[44;97m\033[5mSending Empty message is not allowed\033[K\033[0m"
 1655      393B 481B 
 1655      5B34 343B 
 1655      3937 6D1B 
 1655      5B35 6D53 
 1656               	.LC20:
 1657 012d 1B5B 3939 		.string	"\033[999;H\033[44;97m\033[5mMaximum character limit per message reached (%d characters)\0
 1657      393B 481B 
 1657      5B34 343B 
 1657      3937 6D1B 
 1657      5B35 6D4D 
 1658               		.text
 1659               		.align	2
 1660               		.globl	main_app
 1661               		.type	main_app, @function
 1662               	main_app:
 1663               	.LFB6:
 399:test3.c       ****     }
 400:test3.c       **** }
 401:test3.c       **** 
 402:test3.c       **** // Main application loop to handle user input and message processing
 403:test3.c       **** void main_app()
 404:test3.c       **** {
 1664               		.loc 1 404 1 is_stmt 1 view -0
 1665               		.cfi_startproc
 1666 0b4a 4FEF FFF4 		lea (-12,%sp),%sp
 1667               		.cfi_def_cfa_offset 16
 1668 0b4e 48E7 3F3E 		movem.l #16190,-(%sp)
 1669               		.cfi_def_cfa_offset 60
 1670               		.cfi_offset 2, -60
 1671               		.cfi_offset 3, -56
 1672               		.cfi_offset 4, -52
 1673               		.cfi_offset 5, -48
 1674               		.cfi_offset 6, -44
 1675               		.cfi_offset 7, -40
 1676               		.cfi_offset 10, -36
 1677               		.cfi_offset 11, -32
 1678               		.cfi_offset 12, -28
 1679               		.cfi_offset 13, -24
 1680               		.cfi_offset 14, -20
 405:test3.c       ****     bool warn_length[2] = {false, false}; // Tracks if a warning for maximum length was displayed
 1681               		.loc 1 405 5 view .LVU289
 1682               		.loc 1 405 10 is_stmt 0 view .LVU290
 1683 0b52 422F 0034 		clr.b 52(%sp)
 1684 0b56 422F 0035 		clr.b 53(%sp)
 406:test3.c       ****     bool warn_empty[2] = {false, false};  // Tracks if a warning for empty messages was displayed
 1685               		.loc 1 406 5 is_stmt 1 view .LVU291
 1686               		.loc 1 406 10 is_stmt 0 view .LVU292
68K GAS  /tmp/ccdyPHKc.s 			page 45


 1687 0b5a 422F 0036 		clr.b 54(%sp)
 1688 0b5e 422F 0037 		clr.b 55(%sp)
 1689 0b62 47F9 0000 		lea P,%a3
 1689      0000 
 1690 0b68 4BF9 0000 		lea rand,%a5
 1690      0000 
 1691 0b6e 49F9 0000 		lea inappcom,%a4
 1691      0000 
 1692 0b74 263C 0000 		move.l #inkey,%d3
 1692      0000 
 1693 0b7a 4DF9 0000 		lea keypress,%a6
 1693      0000 
 1694 0b80 243C 0000 		move.l #last_keybuf_len,%d2
 1694      0000 
 1695 0b86 283C 0000 		move.l #last_keybuf,%d4
 1695      0000 
 1696 0b8c 2E3C 0000 		move.l #fast_printf,%d7
 1696      0000 
 1697 0b92 45F9 0000 		lea V,%a2
 1697      0000 
 407:test3.c       ****     int some_num1; // Random variable for potential delays or additional functionality
 1698               		.loc 1 407 5 is_stmt 1 view .LVU293
 408:test3.c       **** 
 409:test3.c       ****     // Infinite loop to process user input and messages
 410:test3.c       ****     while (1)
 1699               		.loc 1 410 5 view .LVU294
 411:test3.c       ****     {
 412:test3.c       ****         P(0); // Lock semaphore 0 for safe resource access
 1700               		.loc 1 412 9 view .LVU295
 1701 0b98 42A7      		clr.l -(%sp)
 1702               		.cfi_def_cfa_offset 64
 1703 0b9a 4E93      		jsr (%a3)
 1704               	.LVL87:
 413:test3.c       ****         P(1); // Lock semaphore 1 for additional synchronization
 1705               		.loc 1 413 9 view .LVU296
 1706 0b9c 4878 0001 		pea 1.w
 1707               		.cfi_def_cfa_offset 68
 1708 0ba0 4E93      		jsr (%a3)
 1709               	.LVL88:
 414:test3.c       **** 
 415:test3.c       ****         some_num1 = rand() %100 ; 
 1710               		.loc 1 415 9 view .LVU297
 1711               		.loc 1 415 21 is_stmt 0 view .LVU298
 1712 0ba2 4E95      		jsr (%a5)
 1713               	.LVL89:
 416:test3.c       **** 
 417:test3.c       ****         // Process input for each channel (0 and 1)
 418:test3.c       ****         for (i = 0; i <= 1; i++)
 1714               		.loc 1 418 9 is_stmt 1 view .LVU299
 1715               		.loc 1 418 16 is_stmt 0 view .LVU300
 1716 0ba4 42B9 0000 		clr.l i
 1716      0000 
 1717               		.loc 1 418 23 is_stmt 1 view .LVU301
 1718               		.loc 1 418 16 is_stmt 0 view .LVU302
 1719 0baa 508F      		addq.l #8,%sp
 1720               		.cfi_def_cfa_offset 60
 1721               		.loc 1 418 23 view .LVU303
68K GAS  /tmp/ccdyPHKc.s 			page 46


 1722 0bac 91C8      		sub.l %a0,%a0
 1723               	.L82:
 419:test3.c       ****         {
 420:test3.c       ****             if (inappcom[i]) // If the user is in command input mode
 1724               		.loc 1 420 13 is_stmt 1 view .LVU304
 1725               		.loc 1 420 16 is_stmt 0 view .LVU305
 1726 0bae 4A34 8800 		tst.b (%a4,%a0.l)
 1727 0bb2 6638      		jne .L59
 418:test3.c       ****         {
 1728               		.loc 1 418 30 view .LVU306
 1729 0bb4 2079 0000 		move.l i,%a0
 1729      0000 
 1730               	.L60:
 418:test3.c       ****         {
 1731               		.loc 1 418 30 is_stmt 1 discriminator 2 view .LVU307
 1732 0bba 5288      		addq.l #1,%a0
 1733 0bbc 23C8 0000 		move.l %a0,i
 1733      0000 
 418:test3.c       ****         {
 1734               		.loc 1 418 23 discriminator 2 view .LVU308
 1735 0bc2 7001      		moveq #1,%d0
 1736 0bc4 B088      		cmp.l %a0,%d0
 1737 0bc6 6CE6      		jge .L82
 421:test3.c       ****             {
 422:test3.c       ****                 keypress[i] = inkey(i); // Get the keypress for the channel
 423:test3.c       **** 
 424:test3.c       ****                 if (keypress[i] != -1) // If a key is pressed
 425:test3.c       ****                 {
 426:test3.c       ****                     // Add the keypress to the key buffer
 427:test3.c       ****                     last_keybuf[i][last_keybuf_len[i]] = keypress[i];
 428:test3.c       ****                     last_keybuf_len[i]++;
 429:test3.c       ****                     last_keybuf[i][last_keybuf_len[i]] = '\0';
 430:test3.c       ****                 }
 431:test3.c       ****                 else
 432:test3.c       ****                 {
 433:test3.c       ****                     if (last_keybuf_len[i] > 0) // If there is data in the key buffer
 434:test3.c       ****                     {
 435:test3.c       ****                         if (strcmp(last_keybuf[i], ESC) == 0) // If Escape key is pressed
 436:test3.c       ****                         {
 437:test3.c       ****                             fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[47;30m%s\x1b[K\x1b[0m", com
 438:test3.c       ****                             inappcom[i] = false; // Exit command input mode
 439:test3.c       ****                         }
 440:test3.c       ****                         else if (strcmp(last_keybuf[i], BACKSPACE) == 0) // If Backspace is pressed
 441:test3.c       ****                         {
 442:test3.c       ****                             if (msg_buf_len[i] > 0) // Ensure the message buffer is not empty
 443:test3.c       ****                             {
 444:test3.c       ****                                 write(i + 3, &term_backspace, 3); // Handle backspace visually
 445:test3.c       ****                                 msg_buf_len[i]--; // Remove the last character from the buffer
 446:test3.c       ****                                 msg_buf[i][msg_buf_len[i]] = '\0';
 447:test3.c       ****                             }
 448:test3.c       ****                         }
 449:test3.c       ****                         else if (strcmp(last_keybuf[i], ENTER) == 0) // If Enter is pressed
 450:test3.c       ****                         {
 451:test3.c       ****                             if (msg_buf_len[i] > 0) // If the message buffer contains data
 452:test3.c       ****                             {
 453:test3.c       ****                                 fast_printf(true, true, DECRESETMODE, 47); // Reset the screen mode
 454:test3.c       ****                                 if (warn_empty[i]) // If an empty message warning was displayed
68K GAS  /tmp/ccdyPHKc.s 			page 47


 455:test3.c       ****                                 {
 456:test3.c       ****                                     fast_printf(i == 0, i == 1, CURSORINVISIBLE);
 457:test3.c       ****                                     fast_printf(i == 0, i == 1, SAVECURSORLOC);
 458:test3.c       ****                                     fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[47;30m%s\x1b[K\x1b[
 459:test3.c       ****                                     fast_printf(i == 0, i == 1, RETCURSORLOC);
 460:test3.c       ****                                     fast_printf(i == 0, i == 1, CURSORVISIBLE);
 461:test3.c       ****                                     warn_empty[i] = false; // Clear the warning flag
 462:test3.c       ****                                 }
 463:test3.c       ****                                 // Display the message in the chat area
 464:test3.c       ****                                 fast_printf(true, true, CURSORINVISIBLE);
 465:test3.c       ****                                 fast_printf(true, true, CURSORMOVE, 1, 1);
 466:test3.c       ****                                 for (j = 0; j < chat_row; j++)
 467:test3.c       ****                                     printf_buf[j] = '\n';
 468:test3.c       ****                                 printf_buf[j + 1] = '\0';
 469:test3.c       ****                                 write(3, &printf_buf, chat_row); // Write the new message to channe
 470:test3.c       ****                                 write(4, &printf_buf, chat_row); // Write the new message to channe
 471:test3.c       ****                                 if (chat_row < screen_height - 5) // Increment chat row if within l
 472:test3.c       ****                                     chat_row++;
 473:test3.c       ****                                 fast_printf(true, true, "\x1b[0m\n│\x1b[1;38;5;%dm%s: \x1b[0m", c
 474:test3.c       ****                                 write(3, &msg_buf[i], msg_buf_len[i]); // Write the message content
 475:test3.c       ****                                 write(4, &msg_buf[i], msg_buf_len[i]);
 476:test3.c       ****                                 fast_printf(true, true, "\x1b[%d;999H│", chat_row + 1); // Update
 477:test3.c       ****                                 msg_buf_len[i] = 0; // Clear the message buffer
 478:test3.c       ****                                 msg_buf[i][0] = '\0';
 479:test3.c       **** 
 480:test3.c       ****                                 // Reset the input area
 481:test3.c       ****                                 fast_printf(true, false, CURSORMOVE, screen_height - 2, term_input_
 482:test3.c       ****                                 fast_printf(false, true, CURSORMOVE, screen_height - 2, term_input_
 483:test3.c       ****                                 fast_printf(i == 0, i == 1, DELETELINEAFTERCURSOR);
 484:test3.c       ****                                 fast_printf(true, true, "\x1b[%d;999H│", screen_height - 2);
 485:test3.c       ****                                 if (inappcom[0])
 486:test3.c       ****                                 {
 487:test3.c       ****                                     fast_printf(true, false, CURSORMOVE, screen_height - 2, term_in
 488:test3.c       ****                                 }
 489:test3.c       ****                                 else
 490:test3.c       ****                                 {
 491:test3.c       ****                                     fast_printf(true, false, CURSORMOVE, screen_height, strlen(comm
 492:test3.c       ****                                 }
 493:test3.c       ****                                 if (inappcom[1])
 494:test3.c       ****                                 {
 495:test3.c       ****                                     fast_printf(false, true, CURSORMOVE, screen_height - 2, term_in
 496:test3.c       ****                                 }
 497:test3.c       ****                                 else
 498:test3.c       ****                                 {
 499:test3.c       ****                                     fast_printf(false, true, CURSORMOVE, screen_height, strlen(comm
 500:test3.c       ****                                 }
 501:test3.c       ****                                 fast_printf(true, true, CURSORVISIBLE); // Make the cursor visible
 502:test3.c       ****                             }
 503:test3.c       ****                             else // If the message buffer is empty
 504:test3.c       ****                             {
 505:test3.c       ****                                 // Display a warning about empty messages
 506:test3.c       ****                                 fast_printf(i == 0, i == 1, CURSORINVISIBLE);
 507:test3.c       ****                                 fast_printf(i == 0, i == 1, SAVECURSORLOC);
 508:test3.c       ****                                 fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[44;97m\x1b[5mSending Em
 509:test3.c       ****                                 fast_printf(i == 0, i == 1, RETCURSORLOC);
 510:test3.c       ****                                 fast_printf(i == 0, i == 1, CURSORVISIBLE);
 511:test3.c       ****                                 warn_empty[i] = true; // Set the warning flag
68K GAS  /tmp/ccdyPHKc.s 			page 48


 512:test3.c       ****                             }
 513:test3.c       ****                             // Restore the alternate screen mode
 514:test3.c       ****                             fast_printf(in_alt_screen[0], in_alt_screen[1], DECSETMODE, 47);
 515:test3.c       ****                             fast_printf(in_alt_screen[0], in_alt_screen[1], CURSORMOVE, 1, 1);
 516:test3.c       ****                             fast_printf(in_alt_screen[0], in_alt_screen[1], help_text);
 517:test3.c       ****                         }
 518:test3.c       ****                         else if (last_keybuf_len[i] == 1 && last_keybuf[i][0] >= 32 && last_keybuf[
 519:test3.c       ****                         {
 520:test3.c       ****                             if (msg_buf_len[i] < 100) // Ensure the buffer does not exceed the limi
 521:test3.c       ****                             {
 522:test3.c       ****                                 msg_buf[i][msg_buf_len[i]] = last_keybuf[i][0]; // Add character to
 523:test3.c       ****                                 msg_buf_len[i]++;
 524:test3.c       ****                                 msg_buf[i][msg_buf_len[i]] = '\0';
 525:test3.c       ****                                 write(i + 3, &last_keybuf[i], last_keybuf_len[i]); // Write the key
 526:test3.c       ****                                 if (warn_length[i]) // If a length warning was displayed
 527:test3.c       ****                                 {
 528:test3.c       ****                                     fast_printf(i == 0, i == 1, CURSORINVISIBLE);
 529:test3.c       ****                                     fast_printf(i == 0, i == 1, SAVECURSORLOC);
 530:test3.c       ****                                     fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[47;30m%s\x1b[K\x1b[
 531:test3.c       ****                                     fast_printf(i == 0, i == 1, RETCURSORLOC);
 532:test3.c       ****                                     fast_printf(i == 0, i == 1, CURSORVISIBLE);
 533:test3.c       ****                                     warn_length[i] = false; // Clear the warning flag
 534:test3.c       ****                                 }
 535:test3.c       ****                             }
 536:test3.c       ****                             else // If the buffer is full
 537:test3.c       ****                             {
 538:test3.c       ****                                 // Display a warning about maximum length
 539:test3.c       ****                                 fast_printf(i == 0, i == 1, CURSORINVISIBLE);
 540:test3.c       ****                                 fast_printf(i == 0, i == 1, SAVECURSORLOC);
 541:test3.c       ****                                 fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[44;97m\x1b[5mMaximum ch
 542:test3.c       ****                                 fast_printf(i == 0, i == 1, RETCURSORLOC);
 543:test3.c       ****                                 fast_printf(i == 0, i == 1, CURSORVISIBLE);
 544:test3.c       ****                                 warn_length[i] = true; // Set the warning flag
 545:test3.c       ****                             }
 546:test3.c       ****                         }
 547:test3.c       ****                         else if (!(last_keybuf_len[i] == 3 && last_keybuf[i][0] == 27 && last_keybu
 548:test3.c       ****                         {
 549:test3.c       ****                             // Ignore arrow keys
 550:test3.c       ****                             write(i + 3, &last_keybuf[i], last_keybuf_len[i]);
 551:test3.c       ****                         }
 552:test3.c       ****                         last_keybuf[i][0] = '\0'; // Clear the key buffer
 553:test3.c       ****                         last_keybuf_len[i] = 0;
 554:test3.c       ****                     }
 555:test3.c       ****                 }
 556:test3.c       ****                 keypress[i] = -1; // Reset the keypress
 557:test3.c       ****             }
 558:test3.c       ****         }
 559:test3.c       ****         V(1); // Release semaphore 1
 1738               		.loc 1 559 9 view .LVU309
 1739 0bc8 4878 0001 		pea 1.w
 1740               		.cfi_def_cfa_offset 64
 1741 0bcc 4E92      		jsr (%a2)
 1742               	.LVL90:
 560:test3.c       ****         V(0); // Release semaphore 0
 1743               		.loc 1 560 9 view .LVU310
 1744 0bce 42A7      		clr.l -(%sp)
 1745               		.cfi_def_cfa_offset 68
68K GAS  /tmp/ccdyPHKc.s 			page 49


 1746 0bd0 4E92      		jsr (%a2)
 1747               	.LVL91:
 410:test3.c       ****     {
 1748               		.loc 1 410 11 view .LVU311
 412:test3.c       ****         P(1); // Lock semaphore 1 for additional synchronization
 1749               		.loc 1 412 9 is_stmt 0 view .LVU312
 1750 0bd2 508F      		addq.l #8,%sp
 1751               		.cfi_def_cfa_offset 60
 407:test3.c       **** 
 1752               		.loc 1 407 5 is_stmt 1 view .LVU313
 410:test3.c       ****     {
 1753               		.loc 1 410 5 view .LVU314
 412:test3.c       ****         P(1); // Lock semaphore 1 for additional synchronization
 1754               		.loc 1 412 9 view .LVU315
 1755 0bd4 42A7      		clr.l -(%sp)
 1756               		.cfi_def_cfa_offset 64
 1757 0bd6 4E93      		jsr (%a3)
 1758               	.LVL92:
 413:test3.c       **** 
 1759               		.loc 1 413 9 view .LVU316
 1760 0bd8 4878 0001 		pea 1.w
 1761               		.cfi_def_cfa_offset 68
 1762 0bdc 4E93      		jsr (%a3)
 1763               	.LVL93:
 415:test3.c       **** 
 1764               		.loc 1 415 9 view .LVU317
 415:test3.c       **** 
 1765               		.loc 1 415 21 is_stmt 0 view .LVU318
 1766 0bde 4E95      		jsr (%a5)
 1767               	.LVL94:
 418:test3.c       ****         {
 1768               		.loc 1 418 9 is_stmt 1 view .LVU319
 418:test3.c       ****         {
 1769               		.loc 1 418 16 is_stmt 0 view .LVU320
 1770 0be0 42B9 0000 		clr.l i
 1770      0000 
 418:test3.c       ****         {
 1771               		.loc 1 418 23 is_stmt 1 view .LVU321
 418:test3.c       ****         {
 1772               		.loc 1 418 16 is_stmt 0 view .LVU322
 1773 0be6 508F      		addq.l #8,%sp
 1774               		.cfi_def_cfa_offset 60
 418:test3.c       ****         {
 1775               		.loc 1 418 23 view .LVU323
 1776 0be8 91C8      		sub.l %a0,%a0
 1777 0bea 60C2      		jra .L82
 1778               	.L59:
 422:test3.c       **** 
 1779               		.loc 1 422 17 is_stmt 1 view .LVU324
 422:test3.c       **** 
 1780               		.loc 1 422 31 is_stmt 0 view .LVU325
 1781 0bec B0FC 0000 		cmp.w #0,%a0
 1782 0bf0 56C0      		sne %d0
 1783 0bf2 4880      		ext.w %d0
 1784 0bf4 3040      		move.w %d0,%a0
 1785 0bf6 2008      		move.l %a0,%d0
 1786 0bf8 4480      		neg.l %d0
68K GAS  /tmp/ccdyPHKc.s 			page 50


 1787 0bfa 2F00      		move.l %d0,-(%sp)
 1788               		.cfi_def_cfa_offset 64
 1789 0bfc 2043      		move.l %d3,%a0
 1790 0bfe 4E90      		jsr (%a0)
 1791               	.LVL95:
 422:test3.c       **** 
 1792               		.loc 1 422 25 view .LVU326
 1793 0c00 2079 0000 		move.l i,%a0
 1793      0000 
 422:test3.c       **** 
 1794               		.loc 1 422 29 view .LVU327
 1795 0c06 1D80 8800 		move.b %d0,(%a6,%a0.l)
 424:test3.c       ****                 {
 1796               		.loc 1 424 17 is_stmt 1 view .LVU328
 424:test3.c       ****                 {
 1797               		.loc 1 424 20 is_stmt 0 view .LVU329
 1798 0c0a 588F      		addq.l #4,%sp
 1799               		.cfi_def_cfa_offset 60
 1800 0c0c 0C00 FFFF 		cmp.b #-1,%d0
 1801 0c10 6732      		jeq .L61
 427:test3.c       ****                     last_keybuf_len[i]++;
 1802               		.loc 1 427 21 is_stmt 1 view .LVU330
 427:test3.c       ****                     last_keybuf_len[i]++;
 1803               		.loc 1 427 51 is_stmt 0 view .LVU331
 1804 0c12 2208      		move.l %a0,%d1
 1805 0c14 D288      		add.l %a0,%d1
 1806 0c16 D281      		add.l %d1,%d1
 1807 0c18 2242      		move.l %d2,%a1
 1808 0c1a 2A31 1800 		move.l (%a1,%d1.l),%d5
 427:test3.c       ****                     last_keybuf_len[i]++;
 1809               		.loc 1 427 56 view .LVU332
 1810 0c1e 43F0 1800 		lea (%a0,%d1.l),%a1
 1811 0c22 D3C9      		add.l %a1,%a1
 1812 0c24 2C09      		move.l %a1,%d6
 1813 0c26 DC84      		add.l %d4,%d6
 1814 0c28 2246      		move.l %d6,%a1
 1815 0c2a 1380 5800 		move.b %d0,(%a1,%d5.l)
 428:test3.c       ****                     last_keybuf[i][last_keybuf_len[i]] = '\0';
 1816               		.loc 1 428 21 is_stmt 1 view .LVU333
 428:test3.c       ****                     last_keybuf[i][last_keybuf_len[i]] = '\0';
 1817               		.loc 1 428 39 is_stmt 0 view .LVU334
 1818 0c2e 5285      		addq.l #1,%d5
 1819 0c30 2242      		move.l %d2,%a1
 1820 0c32 2385 1800 		move.l %d5,(%a1,%d1.l)
 429:test3.c       ****                 }
 1821               		.loc 1 429 21 is_stmt 1 view .LVU335
 429:test3.c       ****                 }
 1822               		.loc 1 429 56 is_stmt 0 view .LVU336
 1823 0c36 2246      		move.l %d6,%a1
 1824 0c38 4231 5800 		clr.b (%a1,%d5.l)
 1825               	.L62:
 556:test3.c       ****             }
 1826               		.loc 1 556 17 is_stmt 1 view .LVU337
 556:test3.c       ****             }
 1827               		.loc 1 556 29 is_stmt 0 view .LVU338
 1828 0c3c 50F6 8800 		st (%a6,%a0.l)
 1829 0c40 6000 FF78 		jra .L60
68K GAS  /tmp/ccdyPHKc.s 			page 51


 1830               	.L61:
 433:test3.c       ****                     {
 1831               		.loc 1 433 21 is_stmt 1 view .LVU339
 433:test3.c       ****                     {
 1832               		.loc 1 433 40 is_stmt 0 view .LVU340
 1833 0c44 2008      		move.l %a0,%d0
 1834 0c46 D088      		add.l %a0,%d0
 1835 0c48 2240      		move.l %d0,%a1
 1836 0c4a D3C0      		add.l %d0,%a1
 1837 0c4c 2231 2800 		move.l (%a1,%d2.l),%d1
 433:test3.c       ****                     {
 1838               		.loc 1 433 24 view .LVU341
 1839 0c50 6FEA      		jle .L62
 435:test3.c       ****                         {
 1840               		.loc 1 435 25 is_stmt 1 view .LVU342
 435:test3.c       ****                         {
 1841               		.loc 1 435 47 is_stmt 0 view .LVU343
 1842 0c52 D3C8      		add.l %a0,%a1
 1843 0c54 D3C9      		add.l %a1,%a1
 1844 0c56 D3FC 0000 		add.l #last_keybuf,%a1
 1844      0000 
 1845 0c5c 2F49 002C 		move.l %a1,44(%sp)
 435:test3.c       ****                         {
 1846               		.loc 1 435 29 view .LVU344
 1847 0c60 7A00      		moveq #0,%d5
 1848 0c62 1A11      		move.b (%a1),%d5
 1849 0c64 7C1B      		moveq #27,%d6
 1850 0c66 BC85      		cmp.l %d5,%d6
 1851 0c68 6660      		jne .L64
 435:test3.c       ****                         {
 1852               		.loc 1 435 28 view .LVU345
 1853 0c6a 4A29 0001 		tst.b 1(%a1)
 1854 0c6e 665A      		jne .L64
 437:test3.c       ****                             inappcom[i] = false; // Exit command input mode
 1855               		.loc 1 437 29 is_stmt 1 view .LVU346
 1856 0c70 4879 0000 		pea command_prompt
 1856      0000 
 1857               		.cfi_def_cfa_offset 64
 1858 0c76 4879 0000 		pea .LC9
 1858      0000 
 1859               		.cfi_def_cfa_offset 68
 1860 0c7c 7201      		moveq #1,%d1
 1861 0c7e B288      		cmp.l %a0,%d1
 1862 0c80 57C0      		seq %d0
 1863 0c82 4880      		ext.w %d0
 1864 0c84 48C0      		ext.l %d0
 1865 0c86 4480      		neg.l %d0
 1866 0c88 2F00      		move.l %d0,-(%sp)
 1867               		.cfi_def_cfa_offset 72
 1868 0c8a B0FC 0000 		cmp.w #0,%a0
 1869 0c8e 57C0      		seq %d0
 1870 0c90 4880      		ext.w %d0
 1871 0c92 48C0      		ext.l %d0
 1872 0c94 4480      		neg.l %d0
 1873 0c96 2F00      		move.l %d0,-(%sp)
 1874               		.cfi_def_cfa_offset 76
 1875 0c98 2047      		move.l %d7,%a0
68K GAS  /tmp/ccdyPHKc.s 			page 52


 1876 0c9a 4E90      		jsr (%a0)
 1877               	.LVL96:
 438:test3.c       ****                         }
 1878               		.loc 1 438 29 view .LVU347
 438:test3.c       ****                         }
 1879               		.loc 1 438 37 is_stmt 0 view .LVU348
 1880 0c9c 2079 0000 		move.l i,%a0
 1880      0000 
 438:test3.c       ****                         }
 1881               		.loc 1 438 41 view .LVU349
 1882 0ca2 4234 8800 		clr.b (%a4,%a0.l)
 1883 0ca6 4FEF 0010 		lea (16,%sp),%sp
 1884               		.cfi_def_cfa_offset 60
 1885 0caa 2008      		move.l %a0,%d0
 1886 0cac D088      		add.l %a0,%d0
 1887               	.L65:
 552:test3.c       ****                         last_keybuf_len[i] = 0;
 1888               		.loc 1 552 25 is_stmt 1 view .LVU350
 552:test3.c       ****                         last_keybuf_len[i] = 0;
 1889               		.loc 1 552 43 is_stmt 0 view .LVU351
 1890 0cae D080      		add.l %d0,%d0
 1891 0cb0 2200      		move.l %d0,%d1
 1892 0cb2 D288      		add.l %a0,%d1
 1893 0cb4 D281      		add.l %d1,%d1
 1894 0cb6 2244      		move.l %d4,%a1
 1895 0cb8 4231 1800 		clr.b (%a1,%d1.l)
 553:test3.c       ****                     }
 1896               		.loc 1 553 25 is_stmt 1 view .LVU352
 553:test3.c       ****                     }
 1897               		.loc 1 553 44 is_stmt 0 view .LVU353
 1898 0cbc 2242      		move.l %d2,%a1
 1899 0cbe 42B1 0800 		clr.l (%a1,%d0.l)
 1900               	.L94:
 556:test3.c       ****             }
 1901               		.loc 1 556 17 is_stmt 1 view .LVU354
 556:test3.c       ****             }
 1902               		.loc 1 556 29 is_stmt 0 view .LVU355
 1903 0cc2 50F6 8800 		st (%a6,%a0.l)
 1904 0cc6 6000 FEF2 		jra .L60
 1905               	.L64:
 440:test3.c       ****                         {
 1906               		.loc 1 440 30 is_stmt 1 view .LVU356
 440:test3.c       ****                         {
 1907               		.loc 1 440 34 is_stmt 0 view .LVU357
 1908 0cca 7C7F      		moveq #127,%d6
 1909 0ccc BC85      		cmp.l %d5,%d6
 1910 0cce 6600 0082 		jne .L67
 440:test3.c       ****                         {
 1911               		.loc 1 440 33 view .LVU358
 1912 0cd2 226F 002C 		move.l 44(%sp),%a1
 1913 0cd6 4A29 0001 		tst.b 1(%a1)
 1914 0cda 6676      		jne .L67
 442:test3.c       ****                             {
 1915               		.loc 1 442 29 is_stmt 1 view .LVU359
 442:test3.c       ****                             {
 1916               		.loc 1 442 44 is_stmt 0 view .LVU360
 1917 0cdc 2200      		move.l %d0,%d1
68K GAS  /tmp/ccdyPHKc.s 			page 53


 1918 0cde D280      		add.l %d0,%d1
 442:test3.c       ****                             {
 1919               		.loc 1 442 32 view .LVU361
 1920 0ce0 43F9 0000 		lea msg_buf_len,%a1
 1920      0000 
 1921 0ce6 4AB1 1800 		tst.l (%a1,%d1.l)
 1922 0cea 67C2      		jeq .L65
 1923               	.LBB5:
 444:test3.c       ****                                 msg_buf_len[i]--; // Remove the last character from the buffer
 1924               		.loc 1 444 33 is_stmt 1 view .LVU362
 1925 0cec 4878 0003 		pea 3.w
 1926               		.cfi_def_cfa_offset 64
 1927 0cf0 4879 0000 		pea term_backspace
 1927      0000 
 1928               		.cfi_def_cfa_offset 68
 1929 0cf6 4868 0003 		pea 3(%a0)
 1930               		.cfi_def_cfa_offset 72
 1931 0cfa 4EB9 0000 		jsr write
 1931      0000 
 1932               	.LVL97:
 445:test3.c       ****                                 msg_buf[i][msg_buf_len[i]] = '\0';
 1933               		.loc 1 445 33 view .LVU363
 445:test3.c       ****                                 msg_buf[i][msg_buf_len[i]] = '\0';
 1934               		.loc 1 445 44 is_stmt 0 view .LVU364
 1935 0d00 2079 0000 		move.l i,%a0
 1935      0000 
 1936 0d06 2008      		move.l %a0,%d0
 1937 0d08 D088      		add.l %a0,%d0
 1938 0d0a 2200      		move.l %d0,%d1
 1939 0d0c D280      		add.l %d0,%d1
 445:test3.c       ****                                 msg_buf[i][msg_buf_len[i]] = '\0';
 1940               		.loc 1 445 47 view .LVU365
 1941 0d0e 43F9 0000 		lea msg_buf_len,%a1
 1941      0000 
 1942 0d14 2A31 1800 		move.l (%a1,%d1.l),%d5
 1943 0d18 5385      		subq.l #1,%d5
 1944 0d1a 2385 1800 		move.l %d5,(%a1,%d1.l)
 446:test3.c       ****                             }
 1945               		.loc 1 446 33 is_stmt 1 view .LVU366
 446:test3.c       ****                             }
 1946               		.loc 1 446 60 is_stmt 0 view .LVU367
 1947 0d1e 2200      		move.l %d0,%d1
 1948 0d20 D288      		add.l %a0,%d1
 1949 0d22 2C01      		move.l %d1,%d6
 1950 0d24 EB8E      		lsl.l #5,%d6
 1951 0d26 2241      		move.l %d1,%a1
 1952 0d28 D3C6      		add.l %d6,%a1
 1953 0d2a D3C8      		add.l %a0,%a1
 1954 0d2c D3FC 0000 		add.l #msg_buf,%a1
 1954      0000 
 1955 0d32 4231 5800 		clr.b (%a1,%d5.l)
 1956 0d36 4FEF 000C 		lea (12,%sp),%sp
 1957               		.cfi_def_cfa_offset 60
 1958               	.LBE5:
 552:test3.c       ****                         last_keybuf_len[i] = 0;
 1959               		.loc 1 552 25 is_stmt 1 view .LVU368
 552:test3.c       ****                         last_keybuf_len[i] = 0;
68K GAS  /tmp/ccdyPHKc.s 			page 54


 1960               		.loc 1 552 43 is_stmt 0 view .LVU369
 1961 0d3a D080      		add.l %d0,%d0
 1962 0d3c 2200      		move.l %d0,%d1
 1963 0d3e D288      		add.l %a0,%d1
 1964 0d40 D281      		add.l %d1,%d1
 1965 0d42 2244      		move.l %d4,%a1
 1966 0d44 4231 1800 		clr.b (%a1,%d1.l)
 553:test3.c       ****                     }
 1967               		.loc 1 553 25 is_stmt 1 view .LVU370
 553:test3.c       ****                     }
 1968               		.loc 1 553 44 is_stmt 0 view .LVU371
 1969 0d48 2242      		move.l %d2,%a1
 1970 0d4a 42B1 0800 		clr.l (%a1,%d0.l)
 1971 0d4e 6000 FF72 		jra .L94
 1972               	.L67:
 449:test3.c       ****                         {
 1973               		.loc 1 449 30 is_stmt 1 view .LVU372
 449:test3.c       ****                         {
 1974               		.loc 1 449 34 is_stmt 0 view .LVU373
 1975 0d52 7C0D      		moveq #13,%d6
 1976 0d54 BC85      		cmp.l %d5,%d6
 1977 0d56 6600 018E 		jne .L69
 1978 0d5a 226F 002C 		move.l 44(%sp),%a1
 1979 0d5e 7A00      		moveq #0,%d5
 1980 0d60 1A29 0001 		move.b 1(%a1),%d5
 449:test3.c       ****                         {
 1981               		.loc 1 449 33 view .LVU374
 1982 0d64 4A85      		tst.l %d5
 1983 0d66 6600 017E 		jne .L69
 451:test3.c       ****                             {
 1984               		.loc 1 451 29 is_stmt 1 view .LVU375
 451:test3.c       ****                             {
 1985               		.loc 1 451 44 is_stmt 0 view .LVU376
 1986 0d6a D080      		add.l %d0,%d0
 451:test3.c       ****                             {
 1987               		.loc 1 451 32 view .LVU377
 1988 0d6c 43F9 0000 		lea msg_buf_len,%a1
 1988      0000 
 1989 0d72 4AB1 0800 		tst.l (%a1,%d0.l)
 1990 0d76 6600 03A4 		jne .L95
 506:test3.c       ****                                 fast_printf(i == 0, i == 1, SAVECURSORLOC);
 1991               		.loc 1 506 33 is_stmt 1 view .LVU378
 1992 0d7a 4879 0000 		pea .LC1
 1992      0000 
 1993               		.cfi_def_cfa_offset 64
 1994 0d80 7201      		moveq #1,%d1
 1995 0d82 B288      		cmp.l %a0,%d1
 1996 0d84 57C0      		seq %d0
 1997 0d86 4880      		ext.w %d0
 1998 0d88 48C0      		ext.l %d0
 1999 0d8a 4480      		neg.l %d0
 2000 0d8c 2F00      		move.l %d0,-(%sp)
 2001               		.cfi_def_cfa_offset 68
 2002 0d8e B0FC 0000 		cmp.w #0,%a0
 2003 0d92 57C0      		seq %d0
 2004 0d94 4880      		ext.w %d0
 2005 0d96 48C0      		ext.l %d0
68K GAS  /tmp/ccdyPHKc.s 			page 55


 2006 0d98 4480      		neg.l %d0
 2007 0d9a 2F00      		move.l %d0,-(%sp)
 2008               		.cfi_def_cfa_offset 72
 2009 0d9c 2047      		move.l %d7,%a0
 2010 0d9e 4E90      		jsr (%a0)
 2011               	.LVL98:
 507:test3.c       ****                                 fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[44;97m\x1b[5mSending Em
 2012               		.loc 1 507 33 view .LVU379
 2013 0da0 2039 0000 		move.l i,%d0
 2013      0000 
 2014 0da6 4879 0000 		pea .LC2
 2014      0000 
 2015               		.cfi_def_cfa_offset 76
 2016 0dac 7A01      		moveq #1,%d5
 2017 0dae BA80      		cmp.l %d0,%d5
 2018 0db0 57C1      		seq %d1
 2019 0db2 4881      		ext.w %d1
 2020 0db4 48C1      		ext.l %d1
 2021 0db6 4481      		neg.l %d1
 2022 0db8 2F01      		move.l %d1,-(%sp)
 2023               		.cfi_def_cfa_offset 80
 2024 0dba 4A80      		tst.l %d0
 2025 0dbc 57C0      		seq %d0
 2026 0dbe 4880      		ext.w %d0
 2027 0dc0 48C0      		ext.l %d0
 2028 0dc2 4480      		neg.l %d0
 2029 0dc4 2F00      		move.l %d0,-(%sp)
 2030               		.cfi_def_cfa_offset 84
 2031 0dc6 2047      		move.l %d7,%a0
 2032 0dc8 4E90      		jsr (%a0)
 2033               	.LVL99:
 508:test3.c       ****                                 fast_printf(i == 0, i == 1, RETCURSORLOC);
 2034               		.loc 1 508 33 view .LVU380
 2035 0dca 2039 0000 		move.l i,%d0
 2035      0000 
 2036 0dd0 4879 0000 		pea .LC19
 2036      0000 
 2037               		.cfi_def_cfa_offset 88
 2038 0dd6 BA80      		cmp.l %d0,%d5
 2039 0dd8 57C1      		seq %d1
 2040 0dda 4881      		ext.w %d1
 2041 0ddc 48C1      		ext.l %d1
 2042 0dde 4481      		neg.l %d1
 2043 0de0 2F01      		move.l %d1,-(%sp)
 2044               		.cfi_def_cfa_offset 92
 2045 0de2 4A80      		tst.l %d0
 2046 0de4 57C0      		seq %d0
 2047 0de6 4880      		ext.w %d0
 2048 0de8 48C0      		ext.l %d0
 2049 0dea 4480      		neg.l %d0
 2050 0dec 2F00      		move.l %d0,-(%sp)
 2051               		.cfi_def_cfa_offset 96
 2052 0dee 2247      		move.l %d7,%a1
 2053 0df0 4E91      		jsr (%a1)
 2054               	.LVL100:
 509:test3.c       ****                                 fast_printf(i == 0, i == 1, CURSORVISIBLE);
 2055               		.loc 1 509 33 view .LVU381
68K GAS  /tmp/ccdyPHKc.s 			page 56


 2056 0df2 2039 0000 		move.l i,%d0
 2056      0000 
 2057 0df8 4FEF 0020 		lea (32,%sp),%sp
 2058               		.cfi_def_cfa_offset 64
 2059 0dfc 2EBC 0000 		move.l #.LC4,(%sp)
 2059      0000 
 2060 0e02 BA80      		cmp.l %d0,%d5
 2061 0e04 57C1      		seq %d1
 2062 0e06 4881      		ext.w %d1
 2063 0e08 48C1      		ext.l %d1
 2064 0e0a 4481      		neg.l %d1
 2065 0e0c 2F01      		move.l %d1,-(%sp)
 2066               		.cfi_def_cfa_offset 68
 2067 0e0e 4A80      		tst.l %d0
 2068 0e10 57C0      		seq %d0
 2069 0e12 4880      		ext.w %d0
 2070 0e14 48C0      		ext.l %d0
 2071 0e16 4480      		neg.l %d0
 2072 0e18 2F00      		move.l %d0,-(%sp)
 2073               		.cfi_def_cfa_offset 72
 2074 0e1a 2047      		move.l %d7,%a0
 2075 0e1c 4E90      		jsr (%a0)
 2076               	.LVL101:
 510:test3.c       ****                                 warn_empty[i] = true; // Set the warning flag
 2077               		.loc 1 510 33 view .LVU382
 2078 0e1e 2039 0000 		move.l i,%d0
 2078      0000 
 2079 0e24 4879 0000 		pea .LC5
 2079      0000 
 2080               		.cfi_def_cfa_offset 76
 2081 0e2a BA80      		cmp.l %d0,%d5
 2082 0e2c 57C1      		seq %d1
 2083 0e2e 4881      		ext.w %d1
 2084 0e30 48C1      		ext.l %d1
 2085 0e32 4481      		neg.l %d1
 2086 0e34 2F01      		move.l %d1,-(%sp)
 2087               		.cfi_def_cfa_offset 80
 2088 0e36 4A80      		tst.l %d0
 2089 0e38 57C0      		seq %d0
 2090 0e3a 4880      		ext.w %d0
 2091 0e3c 48C0      		ext.l %d0
 2092 0e3e 4480      		neg.l %d0
 2093 0e40 2F00      		move.l %d0,-(%sp)
 2094               		.cfi_def_cfa_offset 84
 2095 0e42 2247      		move.l %d7,%a1
 2096 0e44 4E91      		jsr (%a1)
 2097               	.LVL102:
 511:test3.c       ****                             }
 2098               		.loc 1 511 33 view .LVU383
 511:test3.c       ****                             }
 2099               		.loc 1 511 47 is_stmt 0 view .LVU384
 2100 0e46 2039 0000 		move.l i,%d0
 2100      0000 
 2101 0e4c 1FBC 0001 		move.b #1,78(%sp,%d0.l)
 2101      084E 
 2102 0e52 4FEF 0018 		lea (24,%sp),%sp
 2103               		.cfi_def_cfa_offset 60
68K GAS  /tmp/ccdyPHKc.s 			page 57


 514:test3.c       ****                             fast_printf(in_alt_screen[0], in_alt_screen[1], CURSORMOVE, 1, 1);
 2104               		.loc 1 514 29 is_stmt 1 view .LVU385
 2105 0e56 4878 002F 		pea 47.w
 2106               		.cfi_def_cfa_offset 64
 2107 0e5a 4879 0000 		pea .LC14
 2107      0000 
 2108               		.cfi_def_cfa_offset 68
 2109 0e60 7000      		moveq #0,%d0
 2110 0e62 1039 0000 		move.b in_alt_screen+1,%d0
 2110      0000 
 2111 0e68 2F00      		move.l %d0,-(%sp)
 2112               		.cfi_def_cfa_offset 72
 2113 0e6a 41F9 0000 		lea in_alt_screen,%a0
 2113      0000 
 2114 0e70 1010      		move.b (%a0),%d0
 2115 0e72 2F00      		move.l %d0,-(%sp)
 2116               		.cfi_def_cfa_offset 76
 2117 0e74 2247      		move.l %d7,%a1
 2118 0e76 4E91      		jsr (%a1)
 2119               	.LVL103:
 515:test3.c       ****                             fast_printf(in_alt_screen[0], in_alt_screen[1], help_text);
 2120               		.loc 1 515 29 view .LVU386
 2121 0e78 4878 0001 		pea 1.w
 2122               		.cfi_def_cfa_offset 80
 2123 0e7c 4878 0001 		pea 1.w
 2124               		.cfi_def_cfa_offset 84
 2125 0e80 4879 0000 		pea .LC10
 2125      0000 
 2126               		.cfi_def_cfa_offset 88
 2127 0e86 7000      		moveq #0,%d0
 2128 0e88 1039 0000 		move.b in_alt_screen+1,%d0
 2128      0000 
 2129 0e8e 2F00      		move.l %d0,-(%sp)
 2130               		.cfi_def_cfa_offset 92
 2131 0e90 41F9 0000 		lea in_alt_screen,%a0
 2131      0000 
 2132 0e96 1010      		move.b (%a0),%d0
 2133 0e98 2F00      		move.l %d0,-(%sp)
 2134               		.cfi_def_cfa_offset 96
 2135 0e9a 2247      		move.l %d7,%a1
 2136 0e9c 4E91      		jsr (%a1)
 2137               	.LVL104:
 516:test3.c       ****                         }
 2138               		.loc 1 516 29 view .LVU387
 2139 0e9e 4FEF 0020 		lea (32,%sp),%sp
 2140               		.cfi_def_cfa_offset 64
 2141 0ea2 2EBC 0000 		move.l #help_text,(%sp)
 2141      0000 
 2142 0ea8 7000      		moveq #0,%d0
 2143 0eaa 1039 0000 		move.b in_alt_screen+1,%d0
 2143      0000 
 2144 0eb0 2F00      		move.l %d0,-(%sp)
 2145               		.cfi_def_cfa_offset 68
 2146 0eb2 41F9 0000 		lea in_alt_screen,%a0
 2146      0000 
 2147 0eb8 1010      		move.b (%a0),%d0
 2148 0eba 2F00      		move.l %d0,-(%sp)
68K GAS  /tmp/ccdyPHKc.s 			page 58


 2149               		.cfi_def_cfa_offset 72
 2150 0ebc 2247      		move.l %d7,%a1
 2151 0ebe 4E91      		jsr (%a1)
 2152               	.LVL105:
 552:test3.c       ****                         last_keybuf_len[i] = 0;
 2153               		.loc 1 552 39 is_stmt 0 view .LVU388
 2154 0ec0 2079 0000 		move.l i,%a0
 2154      0000 
 2155 0ec6 4FEF 000C 		lea (12,%sp),%sp
 2156               		.cfi_def_cfa_offset 60
 2157 0eca 2008      		move.l %a0,%d0
 2158 0ecc D088      		add.l %a0,%d0
 2159               	.L99:
 552:test3.c       ****                         last_keybuf_len[i] = 0;
 2160               		.loc 1 552 25 is_stmt 1 view .LVU389
 552:test3.c       ****                         last_keybuf_len[i] = 0;
 2161               		.loc 1 552 43 is_stmt 0 view .LVU390
 2162 0ece D080      		add.l %d0,%d0
 2163 0ed0 2200      		move.l %d0,%d1
 2164 0ed2 D288      		add.l %a0,%d1
 2165 0ed4 D281      		add.l %d1,%d1
 2166 0ed6 2244      		move.l %d4,%a1
 2167 0ed8 4231 1800 		clr.b (%a1,%d1.l)
 553:test3.c       ****                     }
 2168               		.loc 1 553 25 is_stmt 1 view .LVU391
 553:test3.c       ****                     }
 2169               		.loc 1 553 44 is_stmt 0 view .LVU392
 2170 0edc 2242      		move.l %d2,%a1
 2171 0ede 42B1 0800 		clr.l (%a1,%d0.l)
 2172 0ee2 6000 FDDE 		jra .L94
 2173               	.L69:
 518:test3.c       ****                         {
 2174               		.loc 1 518 30 is_stmt 1 view .LVU393
 518:test3.c       ****                         {
 2175               		.loc 1 518 33 is_stmt 0 view .LVU394
 2176 0ee6 7A01      		moveq #1,%d5
 2177 0ee8 BA81      		cmp.l %d1,%d5
 2178 0eea 6750      		jeq .L96
 547:test3.c       ****                         {
 2179               		.loc 1 547 30 is_stmt 1 view .LVU395
 547:test3.c       ****                         {
 2180               		.loc 1 547 33 is_stmt 0 view .LVU396
 2181 0eec 7A03      		moveq #3,%d5
 2182 0eee BA81      		cmp.l %d1,%d5
 2183 0ef0 6614      		jne .L80
 547:test3.c       ****                         {
 2184               		.loc 1 547 77 discriminator 1 view .LVU397
 2185 0ef2 2A00      		move.l %d0,%d5
 2186 0ef4 DA80      		add.l %d0,%d5
 2187 0ef6 DA88      		add.l %a0,%d5
 2188 0ef8 DA85      		add.l %d5,%d5
 547:test3.c       ****                         {
 2189               		.loc 1 547 60 discriminator 1 view .LVU398
 2190 0efa 2244      		move.l %d4,%a1
 2191 0efc 0C31 001B 		cmp.b #27,(%a1,%d5.l)
 2191      5800 
 2192 0f02 6700 01DC 		jeq .L97
68K GAS  /tmp/ccdyPHKc.s 			page 59


 2193               	.L80:
 2194               	.LBB6:
 550:test3.c       ****                         }
 2195               		.loc 1 550 29 is_stmt 1 view .LVU399
 2196 0f06 2F01      		move.l %d1,-(%sp)
 2197               		.cfi_def_cfa_offset 64
 2198 0f08 2F2F 0030 		move.l 48(%sp),-(%sp)
 2199               		.cfi_def_cfa_offset 68
 2200 0f0c 4868 0003 		pea 3(%a0)
 2201               		.cfi_def_cfa_offset 72
 2202 0f10 4EB9 0000 		jsr write
 2202      0000 
 2203               	.LVL106:
 2204               	.LBE6:
 552:test3.c       ****                         last_keybuf_len[i] = 0;
 2205               		.loc 1 552 39 is_stmt 0 view .LVU400
 2206 0f16 2079 0000 		move.l i,%a0
 2206      0000 
 2207 0f1c 4FEF 000C 		lea (12,%sp),%sp
 2208               		.cfi_def_cfa_offset 60
 2209               	.L91:
 2210 0f20 2008      		move.l %a0,%d0
 2211 0f22 D088      		add.l %a0,%d0
 552:test3.c       ****                         last_keybuf_len[i] = 0;
 2212               		.loc 1 552 25 is_stmt 1 view .LVU401
 552:test3.c       ****                         last_keybuf_len[i] = 0;
 2213               		.loc 1 552 43 is_stmt 0 view .LVU402
 2214 0f24 D080      		add.l %d0,%d0
 2215 0f26 2200      		move.l %d0,%d1
 2216 0f28 D288      		add.l %a0,%d1
 2217 0f2a D281      		add.l %d1,%d1
 2218 0f2c 2244      		move.l %d4,%a1
 2219 0f2e 4231 1800 		clr.b (%a1,%d1.l)
 553:test3.c       ****                     }
 2220               		.loc 1 553 25 is_stmt 1 view .LVU403
 553:test3.c       ****                     }
 2221               		.loc 1 553 44 is_stmt 0 view .LVU404
 2222 0f32 2242      		move.l %d2,%a1
 2223 0f34 42B1 0800 		clr.l (%a1,%d0.l)
 2224 0f38 6000 FD88 		jra .L94
 2225               	.L96:
 518:test3.c       ****                         {
 2226               		.loc 1 518 75 discriminator 1 view .LVU405
 2227 0f3c 2C00      		move.l %d0,%d6
 2228 0f3e DC80      		add.l %d0,%d6
 2229 0f40 2F46 0030 		move.l %d6,48(%sp)
 2230 0f44 2A06      		move.l %d6,%d5
 2231 0f46 DA88      		add.l %a0,%d5
 2232 0f48 DA85      		add.l %d5,%d5
 2233 0f4a 2244      		move.l %d4,%a1
 2234 0f4c 1A31 5800 		move.b (%a1,%d5.l),%d5
 518:test3.c       ****                         {
 2235               		.loc 1 518 58 discriminator 1 view .LVU406
 2236 0f50 1C05      		move.b %d5,%d6
 2237 0f52 0606 FFE0 		add.b #-32,%d6
 2238 0f56 0C06 005E 		cmp.b #94,%d6
 2239 0f5a 62AA      		jhi .L80
68K GAS  /tmp/ccdyPHKc.s 			page 60


 520:test3.c       ****                             {
 2240               		.loc 1 520 29 is_stmt 1 view .LVU407
 520:test3.c       ****                             {
 2241               		.loc 1 520 44 is_stmt 0 view .LVU408
 2242 0f5c 43F9 0000 		lea msg_buf_len,%a1
 2242      0000 
 2243 0f62 222F 0030 		move.l 48(%sp),%d1
 2244 0f66 2C31 1800 		move.l (%a1,%d1.l),%d6
 520:test3.c       ****                             {
 2245               		.loc 1 520 32 view .LVU409
 2246 0f6a 7263      		moveq #99,%d1
 2247 0f6c B286      		cmp.l %d6,%d1
 2248 0f6e 6500 0672 		jcs .L81
 2249               	.LBB7:
 522:test3.c       ****                                 msg_buf_len[i]++;
 2250               		.loc 1 522 33 is_stmt 1 view .LVU410
 522:test3.c       ****                                 msg_buf_len[i]++;
 2251               		.loc 1 522 60 is_stmt 0 view .LVU411
 2252 0f72 D088      		add.l %a0,%d0
 2253 0f74 2200      		move.l %d0,%d1
 2254 0f76 EB89      		lsl.l #5,%d1
 2255 0f78 D081      		add.l %d1,%d0
 2256 0f7a D088      		add.l %a0,%d0
 2257 0f7c 0680 0000 		add.l #msg_buf,%d0
 2257      0000 
 2258 0f82 2240      		move.l %d0,%a1
 2259 0f84 1385 6800 		move.b %d5,(%a1,%d6.l)
 523:test3.c       ****                                 msg_buf[i][msg_buf_len[i]] = '\0';
 2260               		.loc 1 523 33 is_stmt 1 view .LVU412
 523:test3.c       ****                                 msg_buf[i][msg_buf_len[i]] = '\0';
 2261               		.loc 1 523 47 is_stmt 0 view .LVU413
 2262 0f88 5286      		addq.l #1,%d6
 2263 0f8a 43F9 0000 		lea msg_buf_len,%a1
 2263      0000 
 2264 0f90 222F 0030 		move.l 48(%sp),%d1
 2265 0f94 2386 1800 		move.l %d6,(%a1,%d1.l)
 524:test3.c       ****                                 write(i + 3, &last_keybuf[i], last_keybuf_len[i]); // Write the key
 2266               		.loc 1 524 33 is_stmt 1 view .LVU414
 524:test3.c       ****                                 write(i + 3, &last_keybuf[i], last_keybuf_len[i]); // Write the key
 2267               		.loc 1 524 60 is_stmt 0 view .LVU415
 2268 0f98 2240      		move.l %d0,%a1
 2269 0f9a 4231 6800 		clr.b (%a1,%d6.l)
 525:test3.c       ****                                 if (warn_length[i]) // If a length warning was displayed
 2270               		.loc 1 525 33 is_stmt 1 view .LVU416
 2271 0f9e 4878 0001 		pea 1.w
 2272               		.cfi_def_cfa_offset 64
 2273 0fa2 2F2F 0030 		move.l 48(%sp),-(%sp)
 2274               		.cfi_def_cfa_offset 68
 2275 0fa6 4868 0003 		pea 3(%a0)
 2276               		.cfi_def_cfa_offset 72
 2277 0faa 4EB9 0000 		jsr write
 2277      0000 
 2278               	.LVL107:
 526:test3.c       ****                                 {
 2279               		.loc 1 526 33 view .LVU417
 526:test3.c       ****                                 {
 2280               		.loc 1 526 48 is_stmt 0 view .LVU418
68K GAS  /tmp/ccdyPHKc.s 			page 61


 2281 0fb0 2079 0000 		move.l i,%a0
 2281      0000 
 526:test3.c       ****                                 {
 2282               		.loc 1 526 36 view .LVU419
 2283 0fb6 4FEF 000C 		lea (12,%sp),%sp
 2284               		.cfi_def_cfa_offset 60
 2285 0fba 4A37 8834 		tst.b 52(%sp,%a0.l)
 2286 0fbe 6700 FF60 		jeq .L91
 528:test3.c       ****                                     fast_printf(i == 0, i == 1, SAVECURSORLOC);
 2287               		.loc 1 528 37 is_stmt 1 view .LVU420
 2288 0fc2 4879 0000 		pea .LC1
 2288      0000 
 2289               		.cfi_def_cfa_offset 64
 2290 0fc8 7201      		moveq #1,%d1
 2291 0fca B288      		cmp.l %a0,%d1
 2292 0fcc 57C0      		seq %d0
 2293 0fce 4880      		ext.w %d0
 2294 0fd0 48C0      		ext.l %d0
 2295 0fd2 4480      		neg.l %d0
 2296 0fd4 2F00      		move.l %d0,-(%sp)
 2297               		.cfi_def_cfa_offset 68
 2298 0fd6 B0FC 0000 		cmp.w #0,%a0
 2299 0fda 57C0      		seq %d0
 2300 0fdc 4880      		ext.w %d0
 2301 0fde 48C0      		ext.l %d0
 2302 0fe0 4480      		neg.l %d0
 2303 0fe2 2F00      		move.l %d0,-(%sp)
 2304               		.cfi_def_cfa_offset 72
 2305 0fe4 2047      		move.l %d7,%a0
 2306 0fe6 4E90      		jsr (%a0)
 2307               	.LVL108:
 529:test3.c       ****                                     fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[47;30m%s\x1b[K\x1b[
 2308               		.loc 1 529 37 view .LVU421
 2309 0fe8 2039 0000 		move.l i,%d0
 2309      0000 
 2310 0fee 4879 0000 		pea .LC2
 2310      0000 
 2311               		.cfi_def_cfa_offset 76
 2312 0ff4 7A01      		moveq #1,%d5
 2313 0ff6 BA80      		cmp.l %d0,%d5
 2314 0ff8 57C1      		seq %d1
 2315 0ffa 4881      		ext.w %d1
 2316 0ffc 48C1      		ext.l %d1
 2317 0ffe 4481      		neg.l %d1
 2318 1000 2F01      		move.l %d1,-(%sp)
 2319               		.cfi_def_cfa_offset 80
 2320 1002 4A80      		tst.l %d0
 2321 1004 57C0      		seq %d0
 2322 1006 4880      		ext.w %d0
 2323 1008 48C0      		ext.l %d0
 2324 100a 4480      		neg.l %d0
 2325 100c 2F00      		move.l %d0,-(%sp)
 2326               		.cfi_def_cfa_offset 84
 2327 100e 2047      		move.l %d7,%a0
 2328 1010 4E90      		jsr (%a0)
 2329               	.LVL109:
 530:test3.c       ****                                     fast_printf(i == 0, i == 1, RETCURSORLOC);
68K GAS  /tmp/ccdyPHKc.s 			page 62


 2330               		.loc 1 530 37 view .LVU422
 530:test3.c       ****                                     fast_printf(i == 0, i == 1, RETCURSORLOC);
 2331               		.loc 1 530 121 is_stmt 0 view .LVU423
 2332 1012 2039 0000 		move.l i,%d0
 2332      0000 
 2333 1018 2200      		move.l %d0,%d1
 2334 101a D280      		add.l %d0,%d1
 2335 101c D281      		add.l %d1,%d1
 530:test3.c       ****                                     fast_printf(i == 0, i == 1, RETCURSORLOC);
 2336               		.loc 1 530 113 view .LVU424
 2337 101e 43F9 0000 		lea tip_num,%a1
 2337      0000 
 2338 1024 2071 1800 		move.l (%a1,%d1.l),%a0
 2339 1028 2208      		move.l %a0,%d1
 2340 102a D288      		add.l %a0,%d1
 2341 102c D288      		add.l %a0,%d1
 2342 102e 2A01      		move.l %d1,%d5
 2343 1030 EB8D      		lsl.l #5,%d5
 2344 1032 D285      		add.l %d5,%d1
 2345 1034 D288      		add.l %a0,%d1
 530:test3.c       ****                                     fast_printf(i == 0, i == 1, RETCURSORLOC);
 2346               		.loc 1 530 37 view .LVU425
 2347 1036 0681 0000 		add.l #tip_list,%d1
 2347      0000 
 2348 103c 2F01      		move.l %d1,-(%sp)
 2349               		.cfi_def_cfa_offset 88
 2350 103e 4879 0000 		pea .LC9
 2350      0000 
 2351               		.cfi_def_cfa_offset 92
 2352 1044 7A01      		moveq #1,%d5
 2353 1046 BA80      		cmp.l %d0,%d5
 2354 1048 57C1      		seq %d1
 2355 104a 4881      		ext.w %d1
 2356 104c 48C1      		ext.l %d1
 2357 104e 4481      		neg.l %d1
 2358 1050 2F01      		move.l %d1,-(%sp)
 2359               		.cfi_def_cfa_offset 96
 2360 1052 4A80      		tst.l %d0
 2361 1054 57C0      		seq %d0
 2362 1056 4880      		ext.w %d0
 2363 1058 48C0      		ext.l %d0
 2364 105a 4480      		neg.l %d0
 2365 105c 2F00      		move.l %d0,-(%sp)
 2366               		.cfi_def_cfa_offset 100
 2367 105e 2047      		move.l %d7,%a0
 2368 1060 4E90      		jsr (%a0)
 2369               	.LVL110:
 531:test3.c       ****                                     fast_printf(i == 0, i == 1, CURSORVISIBLE);
 2370               		.loc 1 531 37 is_stmt 1 view .LVU426
 2371 1062 2039 0000 		move.l i,%d0
 2371      0000 
 2372 1068 4FEF 0024 		lea (36,%sp),%sp
 2373               		.cfi_def_cfa_offset 64
 2374 106c 2EBC 0000 		move.l #.LC4,(%sp)
 2374      0000 
 2375 1072 BA80      		cmp.l %d0,%d5
 2376 1074 57C1      		seq %d1
68K GAS  /tmp/ccdyPHKc.s 			page 63


 2377 1076 4881      		ext.w %d1
 2378 1078 48C1      		ext.l %d1
 2379 107a 4481      		neg.l %d1
 2380 107c 2F01      		move.l %d1,-(%sp)
 2381               		.cfi_def_cfa_offset 68
 2382 107e 4A80      		tst.l %d0
 2383 1080 57C0      		seq %d0
 2384 1082 4880      		ext.w %d0
 2385 1084 48C0      		ext.l %d0
 2386 1086 4480      		neg.l %d0
 2387 1088 2F00      		move.l %d0,-(%sp)
 2388               		.cfi_def_cfa_offset 72
 2389 108a 2247      		move.l %d7,%a1
 2390 108c 4E91      		jsr (%a1)
 2391               	.LVL111:
 532:test3.c       ****                                     warn_length[i] = false; // Clear the warning flag
 2392               		.loc 1 532 37 view .LVU427
 2393 108e 2039 0000 		move.l i,%d0
 2393      0000 
 2394 1094 4879 0000 		pea .LC5
 2394      0000 
 2395               		.cfi_def_cfa_offset 76
 2396 109a BA80      		cmp.l %d0,%d5
 2397 109c 57C1      		seq %d1
 2398 109e 4881      		ext.w %d1
 2399 10a0 48C1      		ext.l %d1
 2400 10a2 4481      		neg.l %d1
 2401 10a4 2F01      		move.l %d1,-(%sp)
 2402               		.cfi_def_cfa_offset 80
 2403 10a6 4A80      		tst.l %d0
 2404 10a8 57C0      		seq %d0
 2405 10aa 4880      		ext.w %d0
 2406 10ac 48C0      		ext.l %d0
 2407 10ae 4480      		neg.l %d0
 2408 10b0 2F00      		move.l %d0,-(%sp)
 2409               		.cfi_def_cfa_offset 84
 2410 10b2 2047      		move.l %d7,%a0
 2411 10b4 4E90      		jsr (%a0)
 2412               	.LVL112:
 533:test3.c       ****                                 }
 2413               		.loc 1 533 37 view .LVU428
 533:test3.c       ****                                 }
 2414               		.loc 1 533 48 is_stmt 0 view .LVU429
 2415 10b6 2079 0000 		move.l i,%a0
 2415      0000 
 533:test3.c       ****                                 }
 2416               		.loc 1 533 52 view .LVU430
 2417 10bc 4237 884C 		clr.b 76(%sp,%a0.l)
 2418 10c0 4FEF 0018 		lea (24,%sp),%sp
 2419               		.cfi_def_cfa_offset 60
 2420 10c4 2008      		move.l %a0,%d0
 2421 10c6 D088      		add.l %a0,%d0
 2422               	.LBE7:
 552:test3.c       ****                         last_keybuf_len[i] = 0;
 2423               		.loc 1 552 25 is_stmt 1 view .LVU431
 552:test3.c       ****                         last_keybuf_len[i] = 0;
 2424               		.loc 1 552 43 is_stmt 0 view .LVU432
68K GAS  /tmp/ccdyPHKc.s 			page 64


 2425 10c8 D080      		add.l %d0,%d0
 2426 10ca 2200      		move.l %d0,%d1
 2427 10cc D288      		add.l %a0,%d1
 2428 10ce D281      		add.l %d1,%d1
 2429 10d0 2244      		move.l %d4,%a1
 2430 10d2 4231 1800 		clr.b (%a1,%d1.l)
 553:test3.c       ****                     }
 2431               		.loc 1 553 25 is_stmt 1 view .LVU433
 553:test3.c       ****                     }
 2432               		.loc 1 553 44 is_stmt 0 view .LVU434
 2433 10d6 2242      		move.l %d2,%a1
 2434 10d8 42B1 0800 		clr.l (%a1,%d0.l)
 2435 10dc 6000 FBE4 		jra .L94
 2436               	.L97:
 547:test3.c       ****                         {
 2437               		.loc 1 547 104 discriminator 2 view .LVU435
 2438 10e0 DA84      		add.l %d4,%d5
 547:test3.c       ****                         {
 2439               		.loc 1 547 87 discriminator 2 view .LVU436
 2440 10e2 2245      		move.l %d5,%a1
 2441 10e4 0C29 005B 		cmp.b #91,1(%a1)
 2441      0001 
 2442 10ea 6600 FE1A 		jne .L80
 547:test3.c       ****                         {
 2443               		.loc 1 547 114 discriminator 3 view .LVU437
 2444 10ee 1A29 0002 		move.b 2(%a1),%d5
 2445 10f2 0605 FFBF 		add.b #-65,%d5
 2446 10f6 0C05 0003 		cmp.b #3,%d5
 2447 10fa 6300 FBB2 		jls .L65
 2448               	.LBB8:
 550:test3.c       ****                         }
 2449               		.loc 1 550 29 is_stmt 1 view .LVU438
 2450 10fe 2F01      		move.l %d1,-(%sp)
 2451               		.cfi_def_cfa_offset 64
 2452 1100 2F2F 0030 		move.l 48(%sp),-(%sp)
 2453               		.cfi_def_cfa_offset 68
 2454 1104 4868 0003 		pea 3(%a0)
 2455               		.cfi_def_cfa_offset 72
 2456 1108 4EB9 0000 		jsr write
 2456      0000 
 2457               	.LVL113:
 2458               	.LBE8:
 552:test3.c       ****                         last_keybuf_len[i] = 0;
 2459               		.loc 1 552 39 is_stmt 0 view .LVU439
 2460 110e 2079 0000 		move.l i,%a0
 2460      0000 
 2461 1114 4FEF 000C 		lea (12,%sp),%sp
 2462               		.cfi_def_cfa_offset 60
 2463 1118 6000 FE06 		jra .L91
 2464               	.L95:
 2465               	.LBB9:
 453:test3.c       ****                                 if (warn_empty[i]) // If an empty message warning was displayed
 2466               		.loc 1 453 33 is_stmt 1 view .LVU440
 2467 111c 4878 002F 		pea 47.w
 2468               		.cfi_def_cfa_offset 64
 2469 1120 4879 0000 		pea .LC6
 2469      0000 
68K GAS  /tmp/ccdyPHKc.s 			page 65


 2470               		.cfi_def_cfa_offset 68
 2471 1126 4878 0001 		pea 1.w
 2472               		.cfi_def_cfa_offset 72
 2473 112a 4878 0001 		pea 1.w
 2474               		.cfi_def_cfa_offset 76
 2475 112e 2047      		move.l %d7,%a0
 2476 1130 4E90      		jsr (%a0)
 2477               	.LVL114:
 454:test3.c       ****                                 {
 2478               		.loc 1 454 33 view .LVU441
 454:test3.c       ****                                 {
 2479               		.loc 1 454 47 is_stmt 0 view .LVU442
 2480 1132 2039 0000 		move.l i,%d0
 2480      0000 
 454:test3.c       ****                                 {
 2481               		.loc 1 454 36 view .LVU443
 2482 1138 4FEF 0010 		lea (16,%sp),%sp
 2483               		.cfi_def_cfa_offset 60
 2484 113c 4A37 0836 		tst.b 54(%sp,%d0.l)
 2485 1140 6600 039E 		jne .L98
 2486               	.L71:
 464:test3.c       ****                                 fast_printf(true, true, CURSORMOVE, 1, 1);
 2487               		.loc 1 464 33 is_stmt 1 view .LVU444
 2488 1144 4879 0000 		pea .LC1
 2488      0000 
 2489               		.cfi_def_cfa_offset 64
 2490 114a 4878 0001 		pea 1.w
 2491               		.cfi_def_cfa_offset 68
 2492 114e 4878 0001 		pea 1.w
 2493               		.cfi_def_cfa_offset 72
 2494 1152 2247      		move.l %d7,%a1
 2495 1154 4E91      		jsr (%a1)
 2496               	.LVL115:
 465:test3.c       ****                                 for (j = 0; j < chat_row; j++)
 2497               		.loc 1 465 33 view .LVU445
 2498 1156 4878 0001 		pea 1.w
 2499               		.cfi_def_cfa_offset 76
 2500 115a 4878 0001 		pea 1.w
 2501               		.cfi_def_cfa_offset 80
 2502 115e 4879 0000 		pea .LC10
 2502      0000 
 2503               		.cfi_def_cfa_offset 84
 2504 1164 4878 0001 		pea 1.w
 2505               		.cfi_def_cfa_offset 88
 2506 1168 4878 0001 		pea 1.w
 2507               		.cfi_def_cfa_offset 92
 2508 116c 2047      		move.l %d7,%a0
 2509 116e 4E90      		jsr (%a0)
 2510               	.LVL116:
 466:test3.c       ****                                     printf_buf[j] = '\n';
 2511               		.loc 1 466 33 view .LVU446
 466:test3.c       ****                                     printf_buf[j] = '\n';
 2512               		.loc 1 466 40 is_stmt 0 view .LVU447
 2513 1170 42B9 0000 		clr.l j
 2513      0000 
 466:test3.c       ****                                     printf_buf[j] = '\n';
 2514               		.loc 1 466 47 is_stmt 1 view .LVU448
68K GAS  /tmp/ccdyPHKc.s 			page 66


 2515 1176 2C39 0000 		move.l chat_row,%d6
 2515      0000 
 2516 117c 4FEF 0020 		lea (32,%sp),%sp
 2517               		.cfi_def_cfa_offset 60
 2518 1180 671E      		jeq .L72
 467:test3.c       ****                                 printf_buf[j + 1] = '\0';
 2519               		.loc 1 467 51 is_stmt 0 view .LVU449
 2520 1182 2F06      		move.l %d6,-(%sp)
 2521               		.cfi_def_cfa_offset 64
 2522 1184 4878 000A 		pea 10.w
 2523               		.cfi_def_cfa_offset 68
 2524 1188 4879 0000 		pea printf_buf
 2524      0000 
 2525               		.cfi_def_cfa_offset 72
 2526 118e 4EB9 0000 		jsr memset
 2526      0000 
 2527               	.LVL117:
 466:test3.c       ****                                     printf_buf[j] = '\n';
 2528               		.loc 1 466 60 view .LVU450
 2529 1194 2A06      		move.l %d6,%d5
 2530 1196 23C6 0000 		move.l %d6,j
 2530      0000 
 2531 119c 4FEF 000C 		lea (12,%sp),%sp
 2532               		.cfi_def_cfa_offset 60
 2533               	.L72:
 468:test3.c       ****                                 write(3, &printf_buf, chat_row); // Write the new message to channe
 2534               		.loc 1 468 33 is_stmt 1 view .LVU451
 468:test3.c       ****                                 write(3, &printf_buf, chat_row); // Write the new message to channe
 2535               		.loc 1 468 51 is_stmt 0 view .LVU452
 2536 11a0 43F9 0000 		lea printf_buf,%a1
 2536      0000 
 2537 11a6 4231 5801 		clr.b 1(%a1,%d5.l)
 469:test3.c       ****                                 write(4, &printf_buf, chat_row); // Write the new message to channe
 2538               		.loc 1 469 33 is_stmt 1 view .LVU453
 2539 11aa 2F06      		move.l %d6,-(%sp)
 2540               		.cfi_def_cfa_offset 64
 2541 11ac 2F09      		move.l %a1,-(%sp)
 2542               		.cfi_def_cfa_offset 68
 2543 11ae 4878 0003 		pea 3.w
 2544               		.cfi_def_cfa_offset 72
 2545 11b2 4EB9 0000 		jsr write
 2545      0000 
 2546               	.LVL118:
 470:test3.c       ****                                 if (chat_row < screen_height - 5) // Increment chat row if within l
 2547               		.loc 1 470 33 view .LVU454
 2548 11b8 2F39 0000 		move.l chat_row,-(%sp)
 2548      0000 
 2549               		.cfi_def_cfa_offset 76
 2550 11be 4879 0000 		pea printf_buf
 2550      0000 
 2551               		.cfi_def_cfa_offset 80
 2552 11c4 4878 0004 		pea 4.w
 2553               		.cfi_def_cfa_offset 84
 2554 11c8 4EB9 0000 		jsr write
 2554      0000 
 2555               	.LVL119:
 471:test3.c       ****                                     chat_row++;
68K GAS  /tmp/ccdyPHKc.s 			page 67


 2556               		.loc 1 471 33 view .LVU455
 471:test3.c       ****                                     chat_row++;
 2557               		.loc 1 471 46 is_stmt 0 view .LVU456
 2558 11ce 2039 0000 		move.l chat_row,%d0
 2558      0000 
 471:test3.c       ****                                     chat_row++;
 2559               		.loc 1 471 62 view .LVU457
 2560 11d4 2239 0000 		move.l screen_height,%d1
 2560      0000 
 2561 11da 5B81      		subq.l #5,%d1
 471:test3.c       ****                                     chat_row++;
 2562               		.loc 1 471 36 view .LVU458
 2563 11dc 4FEF 0018 		lea (24,%sp),%sp
 2564               		.cfi_def_cfa_offset 60
 2565 11e0 B081      		cmp.l %d1,%d0
 2566 11e2 6408      		jcc .L73
 472:test3.c       ****                                 fast_printf(true, true, "\x1b[0m\n│\x1b[1;38;5;%dm%s: \x1b[0m", c
 2567               		.loc 1 472 37 is_stmt 1 view .LVU459
 472:test3.c       ****                                 fast_printf(true, true, "\x1b[0m\n│\x1b[1;38;5;%dm%s: \x1b[0m", c
 2568               		.loc 1 472 45 is_stmt 0 view .LVU460
 2569 11e4 5280      		addq.l #1,%d0
 2570 11e6 23C0 0000 		move.l %d0,chat_row
 2570      0000 
 2571               	.L73:
 473:test3.c       ****                                 write(3, &msg_buf[i], msg_buf_len[i]); // Write the message content
 2572               		.loc 1 473 33 is_stmt 1 view .LVU461
 473:test3.c       ****                                 write(3, &msg_buf[i], msg_buf_len[i]); // Write the message content
 2573               		.loc 1 473 140 is_stmt 0 view .LVU462
 2574 11ec 2239 0000 		move.l i,%d1
 2574      0000 
 2575 11f2 2001      		move.l %d1,%d0
 2576 11f4 D081      		add.l %d1,%d0
 2577 11f6 D080      		add.l %d0,%d0
 2578 11f8 D081      		add.l %d1,%d0
 2579 11fa D080      		add.l %d0,%d0
 473:test3.c       ****                                 write(3, &msg_buf[i], msg_buf_len[i]); // Write the message content
 2580               		.loc 1 473 33 view .LVU463
 2581 11fc 0680 0000 		add.l #client_nickname,%d0
 2581      0000 
 2582 1202 2F00      		move.l %d0,-(%sp)
 2583               		.cfi_def_cfa_offset 64
 2584 1204 41F9 0000 		lea client_nickname_color,%a0
 2584      0000 
 2585 120a 1030 1800 		move.b (%a0,%d1.l),%d0
 2586 120e 4880      		ext.w %d0
 2587 1210 3240      		move.w %d0,%a1
 2588 1212 2F09      		move.l %a1,-(%sp)
 2589               		.cfi_def_cfa_offset 68
 2590 1214 4879 0000 		pea .LC16
 2590      0000 
 2591               		.cfi_def_cfa_offset 72
 2592 121a 4878 0001 		pea 1.w
 2593               		.cfi_def_cfa_offset 76
 2594 121e 4878 0001 		pea 1.w
 2595               		.cfi_def_cfa_offset 80
 2596 1222 2047      		move.l %d7,%a0
 2597 1224 4E90      		jsr (%a0)
68K GAS  /tmp/ccdyPHKc.s 			page 68


 2598               	.LVL120:
 474:test3.c       ****                                 write(4, &msg_buf[i], msg_buf_len[i]);
 2599               		.loc 1 474 33 is_stmt 1 view .LVU464
 2600 1226 2239 0000 		move.l i,%d1
 2600      0000 
 2601 122c 2001      		move.l %d1,%d0
 2602 122e D081      		add.l %d1,%d0
 2603 1230 2040      		move.l %d0,%a0
 2604 1232 D1C0      		add.l %d0,%a0
 2605 1234 43F9 0000 		lea msg_buf_len,%a1
 2605      0000 
 2606 123a 2F31 8800 		move.l (%a1,%a0.l),-(%sp)
 2607               		.cfi_def_cfa_offset 84
 2608 123e D081      		add.l %d1,%d0
 2609 1240 2A00      		move.l %d0,%d5
 2610 1242 EB8D      		lsl.l #5,%d5
 2611 1244 D085      		add.l %d5,%d0
 2612 1246 D081      		add.l %d1,%d0
 2613 1248 0680 0000 		add.l #msg_buf,%d0
 2613      0000 
 2614 124e 2F00      		move.l %d0,-(%sp)
 2615               		.cfi_def_cfa_offset 88
 2616 1250 4878 0003 		pea 3.w
 2617               		.cfi_def_cfa_offset 92
 2618 1254 4EB9 0000 		jsr write
 2618      0000 
 2619               	.LVL121:
 475:test3.c       ****                                 fast_printf(true, true, "\x1b[%d;999H│", chat_row + 1); // Update
 2620               		.loc 1 475 33 view .LVU465
 2621 125a 2239 0000 		move.l i,%d1
 2621      0000 
 2622 1260 4FEF 0020 		lea (32,%sp),%sp
 2623               		.cfi_def_cfa_offset 60
 2624 1264 2001      		move.l %d1,%d0
 2625 1266 D081      		add.l %d1,%d0
 2626 1268 2040      		move.l %d0,%a0
 2627 126a D1C0      		add.l %d0,%a0
 2628 126c 43F9 0000 		lea msg_buf_len,%a1
 2628      0000 
 2629 1272 2F31 8800 		move.l (%a1,%a0.l),-(%sp)
 2630               		.cfi_def_cfa_offset 64
 2631 1276 D081      		add.l %d1,%d0
 2632 1278 2A00      		move.l %d0,%d5
 2633 127a EB8D      		lsl.l #5,%d5
 2634 127c D085      		add.l %d5,%d0
 2635 127e D081      		add.l %d1,%d0
 2636 1280 0680 0000 		add.l #msg_buf,%d0
 2636      0000 
 2637 1286 2F00      		move.l %d0,-(%sp)
 2638               		.cfi_def_cfa_offset 68
 2639 1288 4878 0004 		pea 4.w
 2640               		.cfi_def_cfa_offset 72
 2641 128c 4EB9 0000 		jsr write
 2641      0000 
 2642               	.LVL122:
 476:test3.c       ****                                 msg_buf_len[i] = 0; // Clear the message buffer
 2643               		.loc 1 476 33 view .LVU466
68K GAS  /tmp/ccdyPHKc.s 			page 69


 2644 1292 2039 0000 		move.l chat_row,%d0
 2644      0000 
 2645 1298 5280      		addq.l #1,%d0
 2646 129a 2F00      		move.l %d0,-(%sp)
 2647               		.cfi_def_cfa_offset 76
 2648 129c 4879 0000 		pea .LC17
 2648      0000 
 2649               		.cfi_def_cfa_offset 80
 2650 12a2 4878 0001 		pea 1.w
 2651               		.cfi_def_cfa_offset 84
 2652 12a6 4878 0001 		pea 1.w
 2653               		.cfi_def_cfa_offset 88
 2654 12aa 2047      		move.l %d7,%a0
 2655 12ac 4E90      		jsr (%a0)
 2656               	.LVL123:
 477:test3.c       ****                                 msg_buf[i][0] = '\0';
 2657               		.loc 1 477 33 view .LVU467
 477:test3.c       ****                                 msg_buf[i][0] = '\0';
 2658               		.loc 1 477 44 is_stmt 0 view .LVU468
 2659 12ae 2239 0000 		move.l i,%d1
 2659      0000 
 477:test3.c       ****                                 msg_buf[i][0] = '\0';
 2660               		.loc 1 477 48 view .LVU469
 2661 12b4 2001      		move.l %d1,%d0
 2662 12b6 D081      		add.l %d1,%d0
 2663 12b8 2040      		move.l %d0,%a0
 2664 12ba D1C0      		add.l %d0,%a0
 2665 12bc 43F9 0000 		lea msg_buf_len,%a1
 2665      0000 
 2666 12c2 42B1 8800 		clr.l (%a1,%a0.l)
 478:test3.c       **** 
 2667               		.loc 1 478 33 is_stmt 1 view .LVU470
 478:test3.c       **** 
 2668               		.loc 1 478 47 is_stmt 0 view .LVU471
 2669 12c6 D081      		add.l %d1,%d0
 2670 12c8 2A00      		move.l %d0,%d5
 2671 12ca EB8D      		lsl.l #5,%d5
 2672 12cc D085      		add.l %d5,%d0
 2673 12ce D081      		add.l %d1,%d0
 2674 12d0 41F9 0000 		lea msg_buf,%a0
 2674      0000 
 2675 12d6 4230 0800 		clr.b (%a0,%d0.l)
 481:test3.c       ****                                 fast_printf(false, true, CURSORMOVE, screen_height - 2, term_input_
 2676               		.loc 1 481 33 is_stmt 1 view .LVU472
 2677 12da 41F9 0000 		lea term_input_col,%a0
 2677      0000 
 2678 12e0 2010      		move.l (%a0),%d0
 2679 12e2 D091      		add.l (%a1),%d0
 2680 12e4 2F00      		move.l %d0,-(%sp)
 2681               		.cfi_def_cfa_offset 92
 2682 12e6 2039 0000 		move.l screen_height,%d0
 2682      0000 
 2683 12ec 5580      		subq.l #2,%d0
 2684 12ee 2F00      		move.l %d0,-(%sp)
 2685               		.cfi_def_cfa_offset 96
 2686 12f0 4879 0000 		pea .LC10
 2686      0000 
68K GAS  /tmp/ccdyPHKc.s 			page 70


 2687               		.cfi_def_cfa_offset 100
 2688 12f6 42A7      		clr.l -(%sp)
 2689               		.cfi_def_cfa_offset 104
 2690 12f8 4878 0001 		pea 1.w
 2691               		.cfi_def_cfa_offset 108
 2692 12fc 2047      		move.l %d7,%a0
 2693 12fe 4E90      		jsr (%a0)
 2694               	.LVL124:
 482:test3.c       ****                                 fast_printf(i == 0, i == 1, DELETELINEAFTERCURSOR);
 2695               		.loc 1 482 33 view .LVU473
 2696 1300 4FEF 0030 		lea (48,%sp),%sp
 2697               		.cfi_def_cfa_offset 60
 2698 1304 2039 0000 		move.l term_input_col+4,%d0
 2698      0000 
 2699 130a D0B9 0000 		add.l msg_buf_len+4,%d0
 2699      0000 
 2700 1310 2F00      		move.l %d0,-(%sp)
 2701               		.cfi_def_cfa_offset 64
 2702 1312 2239 0000 		move.l screen_height,%d1
 2702      0000 
 2703 1318 5581      		subq.l #2,%d1
 2704 131a 2F01      		move.l %d1,-(%sp)
 2705               		.cfi_def_cfa_offset 68
 2706 131c 4879 0000 		pea .LC10
 2706      0000 
 2707               		.cfi_def_cfa_offset 72
 2708 1322 4878 0001 		pea 1.w
 2709               		.cfi_def_cfa_offset 76
 2710 1326 42A7      		clr.l -(%sp)
 2711               		.cfi_def_cfa_offset 80
 2712 1328 2047      		move.l %d7,%a0
 2713 132a 4E90      		jsr (%a0)
 2714               	.LVL125:
 483:test3.c       ****                                 fast_printf(true, true, "\x1b[%d;999H│", screen_height - 2);
 2715               		.loc 1 483 33 view .LVU474
 2716 132c 2039 0000 		move.l i,%d0
 2716      0000 
 2717 1332 4879 0000 		pea .LC18
 2717      0000 
 2718               		.cfi_def_cfa_offset 84
 2719 1338 7A01      		moveq #1,%d5
 2720 133a BA80      		cmp.l %d0,%d5
 2721 133c 57C1      		seq %d1
 2722 133e 4881      		ext.w %d1
 2723 1340 48C1      		ext.l %d1
 2724 1342 4481      		neg.l %d1
 2725 1344 2F01      		move.l %d1,-(%sp)
 2726               		.cfi_def_cfa_offset 88
 2727 1346 4A80      		tst.l %d0
 2728 1348 57C0      		seq %d0
 2729 134a 4880      		ext.w %d0
 2730 134c 48C0      		ext.l %d0
 2731 134e 4480      		neg.l %d0
 2732 1350 2F00      		move.l %d0,-(%sp)
 2733               		.cfi_def_cfa_offset 92
 2734 1352 2047      		move.l %d7,%a0
 2735 1354 4E90      		jsr (%a0)
68K GAS  /tmp/ccdyPHKc.s 			page 71


 2736               	.LVL126:
 484:test3.c       ****                                 if (inappcom[0])
 2737               		.loc 1 484 33 view .LVU475
 2738 1356 4FEF 0020 		lea (32,%sp),%sp
 2739               		.cfi_def_cfa_offset 60
 2740 135a 2039 0000 		move.l screen_height,%d0
 2740      0000 
 2741 1360 5580      		subq.l #2,%d0
 2742 1362 2F00      		move.l %d0,-(%sp)
 2743               		.cfi_def_cfa_offset 64
 2744 1364 4879 0000 		pea .LC17
 2744      0000 
 2745               		.cfi_def_cfa_offset 68
 2746 136a 4878 0001 		pea 1.w
 2747               		.cfi_def_cfa_offset 72
 2748 136e 4878 0001 		pea 1.w
 2749               		.cfi_def_cfa_offset 76
 2750 1372 2047      		move.l %d7,%a0
 2751 1374 4E90      		jsr (%a0)
 2752               	.LVL127:
 485:test3.c       ****                                 {
 2753               		.loc 1 485 33 view .LVU476
 485:test3.c       ****                                 {
 2754               		.loc 1 485 36 is_stmt 0 view .LVU477
 2755 1376 4FEF 0010 		lea (16,%sp),%sp
 2756               		.cfi_def_cfa_offset 60
 2757 137a 4A39 0000 		tst.b inappcom.l
 2757      0000 
 2758 1380 6700 0134 		jeq .L74
 487:test3.c       ****                                 }
 2759               		.loc 1 487 37 is_stmt 1 view .LVU478
 2760 1384 41F9 0000 		lea term_input_col,%a0
 2760      0000 
 2761 138a 2010      		move.l (%a0),%d0
 2762 138c 41F9 0000 		lea msg_buf_len,%a0
 2762      0000 
 2763 1392 D090      		add.l (%a0),%d0
 2764 1394 2F00      		move.l %d0,-(%sp)
 2765               		.cfi_def_cfa_offset 64
 2766 1396 2039 0000 		move.l screen_height,%d0
 2766      0000 
 2767 139c 5580      		subq.l #2,%d0
 2768 139e 2F00      		move.l %d0,-(%sp)
 2769               		.cfi_def_cfa_offset 68
 2770 13a0 4879 0000 		pea .LC10
 2770      0000 
 2771               		.cfi_def_cfa_offset 72
 2772 13a6 42A7      		clr.l -(%sp)
 2773               		.cfi_def_cfa_offset 76
 2774 13a8 4878 0001 		pea 1.w
 2775               		.cfi_def_cfa_offset 80
 2776 13ac 2047      		move.l %d7,%a0
 2777 13ae 4E90      		jsr (%a0)
 2778               	.LVL128:
 2779 13b0 4FEF 0014 		lea (20,%sp),%sp
 2780               		.cfi_def_cfa_offset 60
 2781               	.L75:
68K GAS  /tmp/ccdyPHKc.s 			page 72


 493:test3.c       ****                                 {
 2782               		.loc 1 493 33 view .LVU479
 495:test3.c       ****                                 }
 2783               		.loc 1 495 37 is_stmt 0 view .LVU480
 2784 13b4 2079 0000 		move.l screen_height,%a0
 2784      0000 
 493:test3.c       ****                                 {
 2785               		.loc 1 493 36 view .LVU481
 2786 13ba 4A39 0000 		tst.b inappcom+1.l
 2786      0000 
 2787 13c0 6700 00BA 		jeq .L76
 495:test3.c       ****                                 }
 2788               		.loc 1 495 37 is_stmt 1 view .LVU482
 2789 13c4 2039 0000 		move.l term_input_col+4,%d0
 2789      0000 
 2790 13ca D0B9 0000 		add.l msg_buf_len+4,%d0
 2790      0000 
 2791 13d0 2F00      		move.l %d0,-(%sp)
 2792               		.cfi_def_cfa_offset 64
 2793 13d2 4868 FFFE 		pea -2(%a0)
 2794               		.cfi_def_cfa_offset 68
 499:test3.c       ****                                 }
 2795               		.loc 1 499 37 is_stmt 0 view .LVU483
 2796 13d6 4879 0000 		pea .LC10
 2796      0000 
 2797               		.cfi_def_cfa_offset 72
 2798 13dc 4878 0001 		pea 1.w
 2799               		.cfi_def_cfa_offset 76
 2800 13e0 42A7      		clr.l -(%sp)
 2801               		.cfi_def_cfa_offset 80
 2802 13e2 2047      		move.l %d7,%a0
 2803 13e4 4E90      		jsr (%a0)
 2804               	.LVL129:
 501:test3.c       ****                             }
 2805               		.loc 1 501 33 view .LVU484
 2806 13e6 4FEF 0010 		lea (16,%sp),%sp
 2807               		.cfi_def_cfa_offset 64
 2808 13ea 2EBC 0000 		move.l #.LC5,(%sp)
 2808      0000 
 2809 13f0 4878 0001 		pea 1.w
 2810               		.cfi_def_cfa_offset 68
 2811 13f4 4878 0001 		pea 1.w
 2812               		.cfi_def_cfa_offset 72
 2813 13f8 2247      		move.l %d7,%a1
 2814 13fa 4E91      		jsr (%a1)
 2815               	.LVL130:
 2816               	.LBE9:
 2817 13fc 4FEF 000C 		lea (12,%sp),%sp
 2818               		.cfi_def_cfa_offset 60
 2819               	.L100:
 514:test3.c       ****                             fast_printf(in_alt_screen[0], in_alt_screen[1], CURSORMOVE, 1, 1);
 2820               		.loc 1 514 29 is_stmt 1 view .LVU485
 2821 1400 4878 002F 		pea 47.w
 2822               		.cfi_def_cfa_offset 64
 2823 1404 4879 0000 		pea .LC14
 2823      0000 
 2824               		.cfi_def_cfa_offset 68
68K GAS  /tmp/ccdyPHKc.s 			page 73


 2825 140a 7000      		moveq #0,%d0
 2826 140c 1039 0000 		move.b in_alt_screen+1,%d0
 2826      0000 
 2827 1412 2F00      		move.l %d0,-(%sp)
 2828               		.cfi_def_cfa_offset 72
 2829 1414 41F9 0000 		lea in_alt_screen,%a0
 2829      0000 
 2830 141a 1010      		move.b (%a0),%d0
 2831 141c 2F00      		move.l %d0,-(%sp)
 2832               		.cfi_def_cfa_offset 76
 2833 141e 2247      		move.l %d7,%a1
 2834 1420 4E91      		jsr (%a1)
 2835               	.LVL131:
 515:test3.c       ****                             fast_printf(in_alt_screen[0], in_alt_screen[1], help_text);
 2836               		.loc 1 515 29 view .LVU486
 2837 1422 4878 0001 		pea 1.w
 2838               		.cfi_def_cfa_offset 80
 2839 1426 4878 0001 		pea 1.w
 2840               		.cfi_def_cfa_offset 84
 2841 142a 4879 0000 		pea .LC10
 2841      0000 
 2842               		.cfi_def_cfa_offset 88
 2843 1430 7000      		moveq #0,%d0
 2844 1432 1039 0000 		move.b in_alt_screen+1,%d0
 2844      0000 
 2845 1438 2F00      		move.l %d0,-(%sp)
 2846               		.cfi_def_cfa_offset 92
 2847 143a 41F9 0000 		lea in_alt_screen,%a0
 2847      0000 
 2848 1440 1010      		move.b (%a0),%d0
 2849 1442 2F00      		move.l %d0,-(%sp)
 2850               		.cfi_def_cfa_offset 96
 2851 1444 2247      		move.l %d7,%a1
 2852 1446 4E91      		jsr (%a1)
 2853               	.LVL132:
 516:test3.c       ****                         }
 2854               		.loc 1 516 29 view .LVU487
 2855 1448 4FEF 0020 		lea (32,%sp),%sp
 2856               		.cfi_def_cfa_offset 64
 2857 144c 2EBC 0000 		move.l #help_text,(%sp)
 2857      0000 
 2858 1452 7000      		moveq #0,%d0
 2859 1454 1039 0000 		move.b in_alt_screen+1,%d0
 2859      0000 
 2860 145a 2F00      		move.l %d0,-(%sp)
 2861               		.cfi_def_cfa_offset 68
 2862 145c 41F9 0000 		lea in_alt_screen,%a0
 2862      0000 
 2863 1462 1010      		move.b (%a0),%d0
 2864 1464 2F00      		move.l %d0,-(%sp)
 2865               		.cfi_def_cfa_offset 72
 2866 1466 2247      		move.l %d7,%a1
 2867 1468 4E91      		jsr (%a1)
 2868               	.LVL133:
 552:test3.c       ****                         last_keybuf_len[i] = 0;
 2869               		.loc 1 552 39 is_stmt 0 view .LVU488
 2870 146a 2079 0000 		move.l i,%a0
68K GAS  /tmp/ccdyPHKc.s 			page 74


 2870      0000 
 2871 1470 4FEF 000C 		lea (12,%sp),%sp
 2872               		.cfi_def_cfa_offset 60
 2873 1474 2008      		move.l %a0,%d0
 2874 1476 D088      		add.l %a0,%d0
 2875 1478 6000 FA54 		jra .L99
 2876               	.L76:
 2877               	.LBB10:
 499:test3.c       ****                                 }
 2878               		.loc 1 499 37 is_stmt 1 view .LVU489
 2879 147c 700A      		moveq #10,%d0
 2880 147e D0B9 0000 		add.l cmd_buf_len+4,%d0
 2880      0000 
 2881 1484 2F00      		move.l %d0,-(%sp)
 2882               		.cfi_def_cfa_offset 64
 2883 1486 2F08      		move.l %a0,-(%sp)
 2884               		.cfi_def_cfa_offset 68
 2885 1488 4879 0000 		pea .LC10
 2885      0000 
 2886               		.cfi_def_cfa_offset 72
 2887 148e 4878 0001 		pea 1.w
 2888               		.cfi_def_cfa_offset 76
 2889 1492 42A7      		clr.l -(%sp)
 2890               		.cfi_def_cfa_offset 80
 2891 1494 2047      		move.l %d7,%a0
 2892 1496 4E90      		jsr (%a0)
 2893               	.LVL134:
 501:test3.c       ****                             }
 2894               		.loc 1 501 33 is_stmt 0 view .LVU490
 2895 1498 4FEF 0010 		lea (16,%sp),%sp
 2896               		.cfi_def_cfa_offset 64
 2897 149c 2EBC 0000 		move.l #.LC5,(%sp)
 2897      0000 
 2898 14a2 4878 0001 		pea 1.w
 2899               		.cfi_def_cfa_offset 68
 2900 14a6 4878 0001 		pea 1.w
 2901               		.cfi_def_cfa_offset 72
 2902 14aa 2247      		move.l %d7,%a1
 2903 14ac 4E91      		jsr (%a1)
 2904               	.LVL135:
 2905               	.LBE10:
 2906 14ae 4FEF 000C 		lea (12,%sp),%sp
 2907               		.cfi_def_cfa_offset 60
 2908 14b2 6000 FF4C 		jra .L100
 2909               	.L74:
 2910               	.LBB11:
 491:test3.c       ****                                 }
 2911               		.loc 1 491 37 is_stmt 1 view .LVU491
 2912 14b6 700A      		moveq #10,%d0
 2913 14b8 41F9 0000 		lea cmd_buf_len,%a0
 2913      0000 
 2914 14be D090      		add.l (%a0),%d0
 2915 14c0 2F00      		move.l %d0,-(%sp)
 2916               		.cfi_def_cfa_offset 64
 2917 14c2 2F39 0000 		move.l screen_height,-(%sp)
 2917      0000 
 2918               		.cfi_def_cfa_offset 68
68K GAS  /tmp/ccdyPHKc.s 			page 75


 2919 14c8 4879 0000 		pea .LC10
 2919      0000 
 2920               		.cfi_def_cfa_offset 72
 2921 14ce 42A7      		clr.l -(%sp)
 2922               		.cfi_def_cfa_offset 76
 2923 14d0 4878 0001 		pea 1.w
 2924               		.cfi_def_cfa_offset 80
 2925 14d4 2247      		move.l %d7,%a1
 2926 14d6 4E91      		jsr (%a1)
 2927               	.LVL136:
 2928 14d8 4FEF 0014 		lea (20,%sp),%sp
 2929               		.cfi_def_cfa_offset 60
 2930 14dc 6000 FED6 		jra .L75
 2931               	.L98:
 456:test3.c       ****                                     fast_printf(i == 0, i == 1, SAVECURSORLOC);
 2932               		.loc 1 456 37 view .LVU492
 2933 14e0 4879 0000 		pea .LC1
 2933      0000 
 2934               		.cfi_def_cfa_offset 64
 2935 14e6 7C01      		moveq #1,%d6
 2936 14e8 BC80      		cmp.l %d0,%d6
 2937 14ea 57C1      		seq %d1
 2938 14ec 4881      		ext.w %d1
 2939 14ee 48C1      		ext.l %d1
 2940 14f0 4481      		neg.l %d1
 2941 14f2 2F01      		move.l %d1,-(%sp)
 2942               		.cfi_def_cfa_offset 68
 2943 14f4 4A80      		tst.l %d0
 2944 14f6 57C0      		seq %d0
 2945 14f8 4880      		ext.w %d0
 2946 14fa 48C0      		ext.l %d0
 2947 14fc 4480      		neg.l %d0
 2948 14fe 2F00      		move.l %d0,-(%sp)
 2949               		.cfi_def_cfa_offset 72
 2950 1500 2047      		move.l %d7,%a0
 2951 1502 4E90      		jsr (%a0)
 2952               	.LVL137:
 457:test3.c       ****                                     fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[47;30m%s\x1b[K\x1b[
 2953               		.loc 1 457 37 view .LVU493
 2954 1504 2039 0000 		move.l i,%d0
 2954      0000 
 2955 150a 4879 0000 		pea .LC2
 2955      0000 
 2956               		.cfi_def_cfa_offset 76
 2957 1510 BC80      		cmp.l %d0,%d6
 2958 1512 57C1      		seq %d1
 2959 1514 4881      		ext.w %d1
 2960 1516 48C1      		ext.l %d1
 2961 1518 4481      		neg.l %d1
 2962 151a 2F01      		move.l %d1,-(%sp)
 2963               		.cfi_def_cfa_offset 80
 2964 151c 4A80      		tst.l %d0
 2965 151e 57C0      		seq %d0
 2966 1520 4880      		ext.w %d0
 2967 1522 48C0      		ext.l %d0
 2968 1524 4480      		neg.l %d0
 2969 1526 2F00      		move.l %d0,-(%sp)
68K GAS  /tmp/ccdyPHKc.s 			page 76


 2970               		.cfi_def_cfa_offset 84
 2971 1528 2247      		move.l %d7,%a1
 2972 152a 4E91      		jsr (%a1)
 2973               	.LVL138:
 458:test3.c       ****                                     fast_printf(i == 0, i == 1, RETCURSORLOC);
 2974               		.loc 1 458 37 view .LVU494
 458:test3.c       ****                                     fast_printf(i == 0, i == 1, RETCURSORLOC);
 2975               		.loc 1 458 121 is_stmt 0 view .LVU495
 2976 152c 2039 0000 		move.l i,%d0
 2976      0000 
 2977 1532 2200      		move.l %d0,%d1
 2978 1534 D280      		add.l %d0,%d1
 2979 1536 D281      		add.l %d1,%d1
 458:test3.c       ****                                     fast_printf(i == 0, i == 1, RETCURSORLOC);
 2980               		.loc 1 458 113 view .LVU496
 2981 1538 43F9 0000 		lea tip_num,%a1
 2981      0000 
 2982 153e 2071 1800 		move.l (%a1,%d1.l),%a0
 2983 1542 2208      		move.l %a0,%d1
 2984 1544 D288      		add.l %a0,%d1
 2985 1546 D288      		add.l %a0,%d1
 2986 1548 2C01      		move.l %d1,%d6
 2987 154a EB8E      		lsl.l #5,%d6
 2988 154c D286      		add.l %d6,%d1
 2989 154e D288      		add.l %a0,%d1
 458:test3.c       ****                                     fast_printf(i == 0, i == 1, RETCURSORLOC);
 2990               		.loc 1 458 37 view .LVU497
 2991 1550 0681 0000 		add.l #tip_list,%d1
 2991      0000 
 2992 1556 2F01      		move.l %d1,-(%sp)
 2993               		.cfi_def_cfa_offset 88
 2994 1558 4879 0000 		pea .LC9
 2994      0000 
 2995               		.cfi_def_cfa_offset 92
 2996 155e 7C01      		moveq #1,%d6
 2997 1560 BC80      		cmp.l %d0,%d6
 2998 1562 57C1      		seq %d1
 2999 1564 4881      		ext.w %d1
 3000 1566 48C1      		ext.l %d1
 3001 1568 4481      		neg.l %d1
 3002 156a 2F01      		move.l %d1,-(%sp)
 3003               		.cfi_def_cfa_offset 96
 3004 156c 4A80      		tst.l %d0
 3005 156e 57C0      		seq %d0
 3006 1570 4880      		ext.w %d0
 3007 1572 48C0      		ext.l %d0
 3008 1574 4480      		neg.l %d0
 3009 1576 2F00      		move.l %d0,-(%sp)
 3010               		.cfi_def_cfa_offset 100
 3011 1578 2047      		move.l %d7,%a0
 3012 157a 4E90      		jsr (%a0)
 3013               	.LVL139:
 459:test3.c       ****                                     fast_printf(i == 0, i == 1, CURSORVISIBLE);
 3014               		.loc 1 459 37 is_stmt 1 view .LVU498
 3015 157c 2039 0000 		move.l i,%d0
 3015      0000 
 3016 1582 4FEF 0024 		lea (36,%sp),%sp
68K GAS  /tmp/ccdyPHKc.s 			page 77


 3017               		.cfi_def_cfa_offset 64
 3018 1586 2EBC 0000 		move.l #.LC4,(%sp)
 3018      0000 
 3019 158c BC80      		cmp.l %d0,%d6
 3020 158e 57C1      		seq %d1
 3021 1590 4881      		ext.w %d1
 3022 1592 48C1      		ext.l %d1
 3023 1594 4481      		neg.l %d1
 3024 1596 2F01      		move.l %d1,-(%sp)
 3025               		.cfi_def_cfa_offset 68
 3026 1598 4A80      		tst.l %d0
 3027 159a 57C0      		seq %d0
 3028 159c 4880      		ext.w %d0
 3029 159e 48C0      		ext.l %d0
 3030 15a0 4480      		neg.l %d0
 3031 15a2 2F00      		move.l %d0,-(%sp)
 3032               		.cfi_def_cfa_offset 72
 3033 15a4 2247      		move.l %d7,%a1
 3034 15a6 4E91      		jsr (%a1)
 3035               	.LVL140:
 460:test3.c       ****                                     warn_empty[i] = false; // Clear the warning flag
 3036               		.loc 1 460 37 view .LVU499
 3037 15a8 2039 0000 		move.l i,%d0
 3037      0000 
 3038 15ae 4879 0000 		pea .LC5
 3038      0000 
 3039               		.cfi_def_cfa_offset 76
 3040 15b4 BC80      		cmp.l %d0,%d6
 3041 15b6 57C1      		seq %d1
 3042 15b8 4881      		ext.w %d1
 3043 15ba 48C1      		ext.l %d1
 3044 15bc 4481      		neg.l %d1
 3045 15be 2F01      		move.l %d1,-(%sp)
 3046               		.cfi_def_cfa_offset 80
 3047 15c0 4A80      		tst.l %d0
 3048 15c2 57C0      		seq %d0
 3049 15c4 4880      		ext.w %d0
 3050 15c6 48C0      		ext.l %d0
 3051 15c8 4480      		neg.l %d0
 3052 15ca 2F00      		move.l %d0,-(%sp)
 3053               		.cfi_def_cfa_offset 84
 3054 15cc 2047      		move.l %d7,%a0
 3055 15ce 4E90      		jsr (%a0)
 3056               	.LVL141:
 461:test3.c       ****                                 }
 3057               		.loc 1 461 37 view .LVU500
 461:test3.c       ****                                 }
 3058               		.loc 1 461 51 is_stmt 0 view .LVU501
 3059 15d0 2039 0000 		move.l i,%d0
 3059      0000 
 3060 15d6 4237 084E 		clr.b 78(%sp,%d0.l)
 3061 15da 4FEF 0018 		lea (24,%sp),%sp
 3062               		.cfi_def_cfa_offset 60
 3063 15de 6000 FB64 		jra .L71
 3064               	.L81:
 3065               	.LBE11:
 539:test3.c       ****                                 fast_printf(i == 0, i == 1, SAVECURSORLOC);
68K GAS  /tmp/ccdyPHKc.s 			page 78


 3066               		.loc 1 539 33 is_stmt 1 view .LVU502
 3067 15e2 4879 0000 		pea .LC1
 3067      0000 
 3068               		.cfi_def_cfa_offset 64
 3069 15e8 7201      		moveq #1,%d1
 3070 15ea B288      		cmp.l %a0,%d1
 3071 15ec 57C0      		seq %d0
 3072 15ee 4880      		ext.w %d0
 3073 15f0 48C0      		ext.l %d0
 3074 15f2 4480      		neg.l %d0
 3075 15f4 2F00      		move.l %d0,-(%sp)
 3076               		.cfi_def_cfa_offset 68
 3077 15f6 B0FC 0000 		cmp.w #0,%a0
 3078 15fa 57C0      		seq %d0
 3079 15fc 4880      		ext.w %d0
 3080 15fe 48C0      		ext.l %d0
 3081 1600 4480      		neg.l %d0
 3082 1602 2F00      		move.l %d0,-(%sp)
 3083               		.cfi_def_cfa_offset 72
 3084 1604 2047      		move.l %d7,%a0
 3085 1606 4E90      		jsr (%a0)
 3086               	.LVL142:
 540:test3.c       ****                                 fast_printf(i == 0, i == 1, "\x1b[999;H\x1b[44;97m\x1b[5mMaximum ch
 3087               		.loc 1 540 33 view .LVU503
 3088 1608 2039 0000 		move.l i,%d0
 3088      0000 
 3089 160e 4879 0000 		pea .LC2
 3089      0000 
 3090               		.cfi_def_cfa_offset 76
 3091 1614 7A01      		moveq #1,%d5
 3092 1616 BA80      		cmp.l %d0,%d5
 3093 1618 57C1      		seq %d1
 3094 161a 4881      		ext.w %d1
 3095 161c 48C1      		ext.l %d1
 3096 161e 4481      		neg.l %d1
 3097 1620 2F01      		move.l %d1,-(%sp)
 3098               		.cfi_def_cfa_offset 80
 3099 1622 4A80      		tst.l %d0
 3100 1624 57C0      		seq %d0
 3101 1626 4880      		ext.w %d0
 3102 1628 48C0      		ext.l %d0
 3103 162a 4480      		neg.l %d0
 3104 162c 2F00      		move.l %d0,-(%sp)
 3105               		.cfi_def_cfa_offset 84
 3106 162e 2047      		move.l %d7,%a0
 3107 1630 4E90      		jsr (%a0)
 3108               	.LVL143:
 541:test3.c       ****                                 fast_printf(i == 0, i == 1, RETCURSORLOC);
 3109               		.loc 1 541 33 view .LVU504
 3110 1632 2039 0000 		move.l i,%d0
 3110      0000 
 3111 1638 4878 0064 		pea 100.w
 3112               		.cfi_def_cfa_offset 88
 3113 163c 4879 0000 		pea .LC20
 3113      0000 
 3114               		.cfi_def_cfa_offset 92
 3115 1642 BA80      		cmp.l %d0,%d5
68K GAS  /tmp/ccdyPHKc.s 			page 79


 3116 1644 57C1      		seq %d1
 3117 1646 4881      		ext.w %d1
 3118 1648 48C1      		ext.l %d1
 3119 164a 4481      		neg.l %d1
 3120 164c 2F01      		move.l %d1,-(%sp)
 3121               		.cfi_def_cfa_offset 96
 3122 164e 4A80      		tst.l %d0
 3123 1650 57C0      		seq %d0
 3124 1652 4880      		ext.w %d0
 3125 1654 48C0      		ext.l %d0
 3126 1656 4480      		neg.l %d0
 3127 1658 2F00      		move.l %d0,-(%sp)
 3128               		.cfi_def_cfa_offset 100
 3129 165a 2247      		move.l %d7,%a1
 3130 165c 4E91      		jsr (%a1)
 3131               	.LVL144:
 542:test3.c       ****                                 fast_printf(i == 0, i == 1, CURSORVISIBLE);
 3132               		.loc 1 542 33 view .LVU505
 3133 165e 2039 0000 		move.l i,%d0
 3133      0000 
 3134 1664 4FEF 0024 		lea (36,%sp),%sp
 3135               		.cfi_def_cfa_offset 64
 3136 1668 2EBC 0000 		move.l #.LC4,(%sp)
 3136      0000 
 3137 166e BA80      		cmp.l %d0,%d5
 3138 1670 57C1      		seq %d1
 3139 1672 4881      		ext.w %d1
 3140 1674 48C1      		ext.l %d1
 3141 1676 4481      		neg.l %d1
 3142 1678 2F01      		move.l %d1,-(%sp)
 3143               		.cfi_def_cfa_offset 68
 3144 167a 4A80      		tst.l %d0
 3145 167c 57C0      		seq %d0
 3146 167e 4880      		ext.w %d0
 3147 1680 48C0      		ext.l %d0
 3148 1682 4480      		neg.l %d0
 3149 1684 2F00      		move.l %d0,-(%sp)
 3150               		.cfi_def_cfa_offset 72
 3151 1686 2047      		move.l %d7,%a0
 3152 1688 4E90      		jsr (%a0)
 3153               	.LVL145:
 543:test3.c       ****                                 warn_length[i] = true; // Set the warning flag
 3154               		.loc 1 543 33 view .LVU506
 3155 168a 2039 0000 		move.l i,%d0
 3155      0000 
 3156 1690 4879 0000 		pea .LC5
 3156      0000 
 3157               		.cfi_def_cfa_offset 76
 3158 1696 BA80      		cmp.l %d0,%d5
 3159 1698 57C1      		seq %d1
 3160 169a 4881      		ext.w %d1
 3161 169c 48C1      		ext.l %d1
 3162 169e 4481      		neg.l %d1
 3163 16a0 2F01      		move.l %d1,-(%sp)
 3164               		.cfi_def_cfa_offset 80
 3165 16a2 4A80      		tst.l %d0
 3166 16a4 57C0      		seq %d0
68K GAS  /tmp/ccdyPHKc.s 			page 80


 3167 16a6 4880      		ext.w %d0
 3168 16a8 48C0      		ext.l %d0
 3169 16aa 4480      		neg.l %d0
 3170 16ac 2F00      		move.l %d0,-(%sp)
 3171               		.cfi_def_cfa_offset 84
 3172 16ae 2247      		move.l %d7,%a1
 3173 16b0 4E91      		jsr (%a1)
 3174               	.LVL146:
 544:test3.c       ****                             }
 3175               		.loc 1 544 33 view .LVU507
 544:test3.c       ****                             }
 3176               		.loc 1 544 44 is_stmt 0 view .LVU508
 3177 16b2 2079 0000 		move.l i,%a0
 3177      0000 
 544:test3.c       ****                             }
 3178               		.loc 1 544 48 view .LVU509
 3179 16b8 1FBC 0001 		move.b #1,76(%sp,%a0.l)
 3179      884C 
 3180 16be 4FEF 0018 		lea (24,%sp),%sp
 3181               		.cfi_def_cfa_offset 60
 3182 16c2 2008      		move.l %a0,%d0
 3183 16c4 D088      		add.l %a0,%d0
 552:test3.c       ****                         last_keybuf_len[i] = 0;
 3184               		.loc 1 552 25 is_stmt 1 view .LVU510
 552:test3.c       ****                         last_keybuf_len[i] = 0;
 3185               		.loc 1 552 43 is_stmt 0 view .LVU511
 3186 16c6 D080      		add.l %d0,%d0
 3187 16c8 2200      		move.l %d0,%d1
 3188 16ca D288      		add.l %a0,%d1
 3189 16cc D281      		add.l %d1,%d1
 3190 16ce 2244      		move.l %d4,%a1
 3191 16d0 4231 1800 		clr.b (%a1,%d1.l)
 553:test3.c       ****                     }
 3192               		.loc 1 553 25 is_stmt 1 view .LVU512
 553:test3.c       ****                     }
 3193               		.loc 1 553 44 is_stmt 0 view .LVU513
 3194 16d4 2242      		move.l %d2,%a1
 3195 16d6 42B1 0800 		clr.l (%a1,%d0.l)
 3196 16da 6000 F5E6 		jra .L94
 3197               		.cfi_endproc
 3198               	.LFE6:
 3199               		.size	main_app, .-main_app
 3200               		.section	.rodata.str1.1
 3201               	.LC21:
 3202 0183 1B5B 7200 		.string	"\033[r"
 3203               	.LC22:
 3204 0187 1B5B 3437 		.string	"\033[47;30mRuntime 00:00:00\033[K\033[0m\033[999;H\033[47;30m%s\033[K\033[0m"
 3204      3B33 306D 
 3204      5275 6E74 
 3204      696D 6520 
 3204      3030 3A30 
 3205               	.LC23:
 3206 01bf 1B5B 2564 		.string	"\033[%d;%dr"
 3206      3B25 6472 
 3206      00
 3207               	.LC24:
 3208 01c8 E294 8C00 		.string	"\342\224\214"
68K GAS  /tmp/ccdyPHKc.s 			page 81


 3209               	.LC25:
 3210 01cc E294 9000 		.string	"\342\224\220"
 3211               	.LC26:
 3212 01d0 E294 8000 		.string	"\342\224\200"
 3213               	.LC27:
 3214 01d4 E294 8200 		.string	"\342\224\202"
 3215               	.LC28:
 3216 01d8 E294 9C00 		.string	"\342\224\234"
 3217               	.LC29:
 3218 01dc E294 A400 		.string	"\342\224\244"
 3219               	.LC30:
 3220 01e0 E294 9400 		.string	"\342\224\224"
 3221               	.LC31:
 3222 01e4 E294 AC00 		.string	"\342\224\254"
 3223               	.LC32:
 3224 01e8 E294 9800 		.string	"\342\224\230"
 3225               	.LC33:
 3226 01ec 1B5B 316D 		.string	"\033[1m%s\033[0m"
 3226      2573 1B5B 
 3226      306D 00
 3227               	.LC34:
 3228 01f7 E294 B400 		.string	"\342\224\264"
 3229               		.text
 3230               		.align	2
 3231               		.globl	init_ui
 3232               		.type	init_ui, @function
 3233               	init_ui:
 3234               	.LFB7:
 561:test3.c       ****     }
 562:test3.c       **** }
 563:test3.c       **** 
 564:test3.c       **** // Initialize the user interface and layout of the terminal
 565:test3.c       **** void init_ui()
 566:test3.c       **** {
 3235               		.loc 1 566 1 is_stmt 1 view -0
 3236               		.cfi_startproc
 3237 16de 48E7 2030 		movem.l #8240,-(%sp)
 3238               		.cfi_def_cfa_offset 16
 3239               		.cfi_offset 2, -16
 3240               		.cfi_offset 10, -12
 3241               		.cfi_offset 11, -8
 567:test3.c       ****     // Set initial positions for input columns based on the message input prompt length
 568:test3.c       ****     for (i = 0; i <= 1; i++)
 3242               		.loc 1 568 5 view .LVU515
 3243               		.loc 1 568 19 view .LVU516
 569:test3.c       ****     {
 570:test3.c       ****         term_input_col[i] = strlen(msg_input_prompt) + 3;
 3244               		.loc 1 570 9 view .LVU517
 3245               		.loc 1 570 27 is_stmt 0 view .LVU518
 3246 16e2 700F      		moveq #15,%d0
 3247 16e4 23C0 0000 		move.l %d0,term_input_col
 3247      0000 
 568:test3.c       ****     {
 3248               		.loc 1 568 26 is_stmt 1 view .LVU519
 568:test3.c       ****     {
 3249               		.loc 1 568 19 view .LVU520
 3250               		.loc 1 570 9 view .LVU521
68K GAS  /tmp/ccdyPHKc.s 			page 82


 3251               		.loc 1 570 27 is_stmt 0 view .LVU522
 3252 16ea 23C0 0000 		move.l %d0,term_input_col+4
 3252      0000 
 568:test3.c       ****     {
 3253               		.loc 1 568 26 is_stmt 1 view .LVU523
 568:test3.c       ****     {
 3254               		.loc 1 568 19 view .LVU524
 3255 16f0 7402      		moveq #2,%d2
 3256 16f2 23C2 0000 		move.l %d2,i
 3256      0000 
 571:test3.c       ****     }
 572:test3.c       **** 
 573:test3.c       ****     // Configure terminal screen settings
 574:test3.c       ****     fast_printf(true, true, SETSCREENSIZE, screen_height, screen_width); // Set screen size
 3257               		.loc 1 574 5 view .LVU525
 3258 16f8 2F39 0000 		move.l screen_width,-(%sp)
 3258      0000 
 3259               		.cfi_def_cfa_offset 20
 3260 16fe 2F39 0000 		move.l screen_height,-(%sp)
 3260      0000 
 3261               		.cfi_def_cfa_offset 24
 3262 1704 4879 0000 		pea .LC0
 3262      0000 
 3263               		.cfi_def_cfa_offset 28
 3264 170a 4878 0001 		pea 1.w
 3265               		.cfi_def_cfa_offset 32
 3266 170e 4878 0001 		pea 1.w
 3267               		.cfi_def_cfa_offset 36
 3268 1712 45FA E8EC 		lea fast_printf,%a2
 3269 1716 4E92      		jsr (%a2)
 3270               	.LVL147:
 575:test3.c       ****     fast_printf(true, true, DECRESETMODE, 47); // Reset scroll mode
 3271               		.loc 1 575 5 view .LVU526
 3272 1718 4878 002F 		pea 47.w
 3273               		.cfi_def_cfa_offset 40
 3274 171c 4879 0000 		pea .LC6
 3274      0000 
 3275               		.cfi_def_cfa_offset 44
 3276 1722 4878 0001 		pea 1.w
 3277               		.cfi_def_cfa_offset 48
 3278 1726 4878 0001 		pea 1.w
 3279               		.cfi_def_cfa_offset 52
 3280 172a 4E92      		jsr (%a2)
 3281               	.LVL148:
 576:test3.c       ****     fast_printf(true, true, CLEARDISPLAY); // Clear the terminal display
 3282               		.loc 1 576 5 view .LVU527
 3283 172c 4FEF 0020 		lea (32,%sp),%sp
 3284               		.cfi_def_cfa_offset 20
 3285 1730 2EBC 0000 		move.l #.LC15,(%sp)
 3285      0000 
 3286 1736 4878 0001 		pea 1.w
 3287               		.cfi_def_cfa_offset 24
 3288 173a 4878 0001 		pea 1.w
 3289               		.cfi_def_cfa_offset 28
 3290 173e 4E92      		jsr (%a2)
 3291               	.LVL149:
 577:test3.c       ****     fast_printf(true, true, RESETSGR); // Reset text formatting
68K GAS  /tmp/ccdyPHKc.s 			page 83


 3292               		.loc 1 577 5 view .LVU528
 3293 1740 4879 0000 		pea .LC8
 3293      0000 
 3294               		.cfi_def_cfa_offset 32
 3295 1746 4878 0001 		pea 1.w
 3296               		.cfi_def_cfa_offset 36
 3297 174a 4878 0001 		pea 1.w
 3298               		.cfi_def_cfa_offset 40
 3299 174e 4E92      		jsr (%a2)
 3300               	.LVL150:
 578:test3.c       ****     fast_printf(true, true, RESETSCROLLROWS); // Reset scroll rows
 3301               		.loc 1 578 5 view .LVU529
 3302 1750 4879 0000 		pea .LC21
 3302      0000 
 3303               		.cfi_def_cfa_offset 44
 3304 1756 4878 0001 		pea 1.w
 3305               		.cfi_def_cfa_offset 48
 3306 175a 4878 0001 		pea 1.w
 3307               		.cfi_def_cfa_offset 52
 3308 175e 4E92      		jsr (%a2)
 3309               	.LVL151:
 579:test3.c       ****     fast_printf(true, true, DECSETMODE, 19); // Enable a specific terminal mode
 3310               		.loc 1 579 5 view .LVU530
 3311 1760 4FEF 0024 		lea (36,%sp),%sp
 3312               		.cfi_def_cfa_offset 16
 3313 1764 4878 0013 		pea 19.w
 3314               		.cfi_def_cfa_offset 20
 3315 1768 4879 0000 		pea .LC14
 3315      0000 
 3316               		.cfi_def_cfa_offset 24
 3317 176e 4878 0001 		pea 1.w
 3318               		.cfi_def_cfa_offset 28
 3319 1772 4878 0001 		pea 1.w
 3320               		.cfi_def_cfa_offset 32
 3321 1776 4E92      		jsr (%a2)
 3322               	.LVL152:
 580:test3.c       **** 
 581:test3.c       ****     // Display runtime and initial tip
 582:test3.c       ****     fast_printf(true, true, "\x1b[47;30mRuntime 00:00:00\x1b[K\x1b[0m\x1b[999;H\x1b[47;30m%s\x1b[K\
 3323               		.loc 1 582 5 view .LVU531
 3324 1778 4879 0000 		pea tip_list
 3324      0000 
 3325               		.cfi_def_cfa_offset 36
 3326 177e 4879 0000 		pea .LC22
 3326      0000 
 3327               		.cfi_def_cfa_offset 40
 3328 1784 4878 0001 		pea 1.w
 3329               		.cfi_def_cfa_offset 44
 3330 1788 4878 0001 		pea 1.w
 3331               		.cfi_def_cfa_offset 48
 3332 178c 4E92      		jsr (%a2)
 3333               	.LVL153:
 583:test3.c       **** 
 584:test3.c       ****     // Configure scrolling region
 585:test3.c       ****     fast_printf(true, true, CHANGESCROLLROWS, 2, screen_height - 4);
 3334               		.loc 1 585 5 view .LVU532
 3335 178e 4FEF 0020 		lea (32,%sp),%sp
68K GAS  /tmp/ccdyPHKc.s 			page 84


 3336               		.cfi_def_cfa_offset 16
 3337 1792 2039 0000 		move.l screen_height,%d0
 3337      0000 
 3338 1798 5980      		subq.l #4,%d0
 3339 179a 2F00      		move.l %d0,-(%sp)
 3340               		.cfi_def_cfa_offset 20
 3341 179c 4878 0002 		pea 2.w
 3342               		.cfi_def_cfa_offset 24
 3343 17a0 4879 0000 		pea .LC23
 3343      0000 
 3344               		.cfi_def_cfa_offset 28
 3345 17a6 4878 0001 		pea 1.w
 3346               		.cfi_def_cfa_offset 32
 3347 17aa 4878 0001 		pea 1.w
 3348               		.cfi_def_cfa_offset 36
 3349 17ae 4E92      		jsr (%a2)
 3350               	.LVL154:
 586:test3.c       ****     fast_printf(true, true, DECRESETMODE, 19); // Reset terminal mode
 3351               		.loc 1 586 5 view .LVU533
 3352 17b0 4878 0013 		pea 19.w
 3353               		.cfi_def_cfa_offset 40
 3354 17b4 4879 0000 		pea .LC6
 3354      0000 
 3355               		.cfi_def_cfa_offset 44
 3356 17ba 4878 0001 		pea 1.w
 3357               		.cfi_def_cfa_offset 48
 3358 17be 4878 0001 		pea 1.w
 3359               		.cfi_def_cfa_offset 52
 3360 17c2 4E92      		jsr (%a2)
 3361               	.LVL155:
 587:test3.c       ****     fast_printf(true, true, CURSORINVISIBLE); // Make the cursor invisible
 3362               		.loc 1 587 5 view .LVU534
 3363 17c4 4FEF 0020 		lea (32,%sp),%sp
 3364               		.cfi_def_cfa_offset 20
 3365 17c8 2EBC 0000 		move.l #.LC1,(%sp)
 3365      0000 
 3366 17ce 4878 0001 		pea 1.w
 3367               		.cfi_def_cfa_offset 24
 3368 17d2 4878 0001 		pea 1.w
 3369               		.cfi_def_cfa_offset 28
 3370 17d6 4E92      		jsr (%a2)
 3371               	.LVL156:
 588:test3.c       **** 
 589:test3.c       ****     // Draw the top border of the UI
 590:test3.c       ****     fast_printf(true, true, CURSORMOVE, 2, 1);
 3372               		.loc 1 590 5 view .LVU535
 3373 17d8 4878 0001 		pea 1.w
 3374               		.cfi_def_cfa_offset 32
 3375 17dc 4878 0002 		pea 2.w
 3376               		.cfi_def_cfa_offset 36
 3377 17e0 4879 0000 		pea .LC10
 3377      0000 
 3378               		.cfi_def_cfa_offset 40
 3379 17e6 4878 0001 		pea 1.w
 3380               		.cfi_def_cfa_offset 44
 3381 17ea 4878 0001 		pea 1.w
 3382               		.cfi_def_cfa_offset 48
68K GAS  /tmp/ccdyPHKc.s 			page 85


 3383 17ee 4E92      		jsr (%a2)
 3384               	.LVL157:
 591:test3.c       ****     fast_printf(true, true, "┌"); // Top left corner
 3385               		.loc 1 591 5 view .LVU536
 3386 17f0 4FEF 001C 		lea (28,%sp),%sp
 3387               		.cfi_def_cfa_offset 20
 3388 17f4 2EBC 0000 		move.l #.LC24,(%sp)
 3388      0000 
 3389 17fa 4878 0001 		pea 1.w
 3390               		.cfi_def_cfa_offset 24
 3391 17fe 4878 0001 		pea 1.w
 3392               		.cfi_def_cfa_offset 28
 3393 1802 4E92      		jsr (%a2)
 3394               	.LVL158:
 592:test3.c       ****     for (i = 1; i <= screen_width - 2; i++)
 3395               		.loc 1 592 5 view .LVU537
 3396               		.loc 1 592 12 is_stmt 0 view .LVU538
 3397 1804 7401      		moveq #1,%d2
 3398 1806 23C2 0000 		move.l %d2,i
 3398      0000 
 3399               		.loc 1 592 19 is_stmt 1 view .LVU539
 3400 180c 4FEF 000C 		lea (12,%sp),%sp
 3401               		.cfi_def_cfa_offset 16
 3402 1810 7002      		moveq #2,%d0
 3403 1812 B0B9 0000 		cmp.l screen_width.l,%d0
 3403      0000 
 3404 1818 672E      		jeq .L105
 3405               	.L102:
 593:test3.c       ****         fast_printf(true, true, "─"); // Top horizontal border
 3406               		.loc 1 593 9 discriminator 3 view .LVU540
 3407 181a 4879 0000 		pea .LC26
 3407      0000 
 3408               		.cfi_def_cfa_offset 20
 3409 1820 4878 0001 		pea 1.w
 3410               		.cfi_def_cfa_offset 24
 3411 1824 4878 0001 		pea 1.w
 3412               		.cfi_def_cfa_offset 28
 3413 1828 4E92      		jsr (%a2)
 3414               	.LVL159:
 592:test3.c       ****     for (i = 1; i <= screen_width - 2; i++)
 3415               		.loc 1 592 41 discriminator 3 view .LVU541
 3416 182a 2039 0000 		move.l i,%d0
 3416      0000 
 3417 1830 5280      		addq.l #1,%d0
 3418 1832 23C0 0000 		move.l %d0,i
 3418      0000 
 592:test3.c       ****     for (i = 1; i <= screen_width - 2; i++)
 3419               		.loc 1 592 19 discriminator 3 view .LVU542
 592:test3.c       ****     for (i = 1; i <= screen_width - 2; i++)
 3420               		.loc 1 592 35 is_stmt 0 discriminator 3 view .LVU543
 3421 1838 2239 0000 		move.l screen_width,%d1
 3421      0000 
 3422 183e 5581      		subq.l #2,%d1
 592:test3.c       ****     for (i = 1; i <= screen_width - 2; i++)
 3423               		.loc 1 592 19 discriminator 3 view .LVU544
 3424 1840 4FEF 000C 		lea (12,%sp),%sp
 3425               		.cfi_def_cfa_offset 16
68K GAS  /tmp/ccdyPHKc.s 			page 86


 3426 1844 B081      		cmp.l %d1,%d0
 3427 1846 63D2      		jls .L102
 3428               	.L105:
 594:test3.c       ****     fast_printf(true, true, "┐"); // Top right corner
 3429               		.loc 1 594 5 is_stmt 1 view .LVU545
 3430 1848 4879 0000 		pea .LC25
 3430      0000 
 3431               		.cfi_def_cfa_offset 20
 3432 184e 4878 0001 		pea 1.w
 3433               		.cfi_def_cfa_offset 24
 3434 1852 4878 0001 		pea 1.w
 3435               		.cfi_def_cfa_offset 28
 3436 1856 4E92      		jsr (%a2)
 3437               	.LVL160:
 595:test3.c       **** 
 596:test3.c       ****     // Draw the vertical borders
 597:test3.c       ****     for (i = 3; i <= screen_height - 4; i++)
 3438               		.loc 1 597 5 view .LVU546
 3439               		.loc 1 597 12 is_stmt 0 view .LVU547
 3440 1858 7403      		moveq #3,%d2
 3441 185a 23C2 0000 		move.l %d2,i
 3441      0000 
 3442               		.loc 1 597 19 is_stmt 1 view .LVU548
 3443               		.loc 1 597 36 is_stmt 0 view .LVU549
 3444 1860 2079 0000 		move.l screen_height,%a0
 3444      0000 
 3445 1866 2208      		move.l %a0,%d1
 3446 1868 5981      		subq.l #4,%d1
 3447               		.loc 1 597 19 view .LVU550
 3448 186a 4FEF 000C 		lea (12,%sp),%sp
 3449               		.cfi_def_cfa_offset 16
 3450 186e 7003      		moveq #3,%d0
 3451 1870 7402      		moveq #2,%d2
 3452 1872 B481      		cmp.l %d1,%d2
 3453 1874 6476      		jcc .L104
 3454               	.L103:
 598:test3.c       ****     {
 599:test3.c       ****         fast_printf(true, true, CURSORMOVE, i, 1);
 3455               		.loc 1 599 9 is_stmt 1 discriminator 3 view .LVU551
 3456 1876 4878 0001 		pea 1.w
 3457               		.cfi_def_cfa_offset 20
 3458 187a 2F00      		move.l %d0,-(%sp)
 3459               		.cfi_def_cfa_offset 24
 3460 187c 4879 0000 		pea .LC10
 3460      0000 
 3461               		.cfi_def_cfa_offset 28
 3462 1882 4878 0001 		pea 1.w
 3463               		.cfi_def_cfa_offset 32
 3464 1886 4878 0001 		pea 1.w
 3465               		.cfi_def_cfa_offset 36
 3466 188a 4E92      		jsr (%a2)
 3467               	.LVL161:
 600:test3.c       ****         fast_printf(true, true, "│"); // Left vertical border
 3468               		.loc 1 600 9 discriminator 3 view .LVU552
 3469 188c 4879 0000 		pea .LC27
 3469      0000 
 3470               		.cfi_def_cfa_offset 40
68K GAS  /tmp/ccdyPHKc.s 			page 87


 3471 1892 4878 0001 		pea 1.w
 3472               		.cfi_def_cfa_offset 44
 3473 1896 4878 0001 		pea 1.w
 3474               		.cfi_def_cfa_offset 48
 3475 189a 4E92      		jsr (%a2)
 3476               	.LVL162:
 601:test3.c       ****         fast_printf(true, true, CURSORMOVE, i, screen_width);
 3477               		.loc 1 601 9 discriminator 3 view .LVU553
 3478 189c 4FEF 001C 		lea (28,%sp),%sp
 3479               		.cfi_def_cfa_offset 20
 3480 18a0 2EB9 0000 		move.l screen_width,(%sp)
 3480      0000 
 3481 18a6 2F39 0000 		move.l i,-(%sp)
 3481      0000 
 3482               		.cfi_def_cfa_offset 24
 3483 18ac 4879 0000 		pea .LC10
 3483      0000 
 3484               		.cfi_def_cfa_offset 28
 3485 18b2 4878 0001 		pea 1.w
 3486               		.cfi_def_cfa_offset 32
 3487 18b6 4878 0001 		pea 1.w
 3488               		.cfi_def_cfa_offset 36
 3489 18ba 4E92      		jsr (%a2)
 3490               	.LVL163:
 602:test3.c       ****         fast_printf(true, true, "│"); // Right vertical border
 3491               		.loc 1 602 9 discriminator 3 view .LVU554
 3492 18bc 4879 0000 		pea .LC27
 3492      0000 
 3493               		.cfi_def_cfa_offset 40
 3494 18c2 4878 0001 		pea 1.w
 3495               		.cfi_def_cfa_offset 44
 3496 18c6 4878 0001 		pea 1.w
 3497               		.cfi_def_cfa_offset 48
 3498 18ca 4E92      		jsr (%a2)
 3499               	.LVL164:
 597:test3.c       ****     {
 3500               		.loc 1 597 42 discriminator 3 view .LVU555
 3501 18cc 2039 0000 		move.l i,%d0
 3501      0000 
 3502 18d2 5280      		addq.l #1,%d0
 3503 18d4 23C0 0000 		move.l %d0,i
 3503      0000 
 597:test3.c       ****     {
 3504               		.loc 1 597 19 discriminator 3 view .LVU556
 597:test3.c       ****     {
 3505               		.loc 1 597 36 is_stmt 0 discriminator 3 view .LVU557
 3506 18da 2079 0000 		move.l screen_height,%a0
 3506      0000 
 3507 18e0 2208      		move.l %a0,%d1
 3508 18e2 5981      		subq.l #4,%d1
 597:test3.c       ****     {
 3509               		.loc 1 597 19 discriminator 3 view .LVU558
 3510 18e4 4FEF 0020 		lea (32,%sp),%sp
 3511               		.cfi_def_cfa_offset 16
 3512 18e8 B081      		cmp.l %d1,%d0
 3513 18ea 638A      		jls .L103
 3514               	.L104:
68K GAS  /tmp/ccdyPHKc.s 			page 88


 603:test3.c       ****     }
 604:test3.c       **** 
 605:test3.c       ****     // Draw the divider above the message input box
 606:test3.c       ****     fast_printf(true, true, CURSORMOVE, screen_height - 3, 1);
 3515               		.loc 1 606 5 is_stmt 1 view .LVU559
 3516 18ec 4878 0001 		pea 1.w
 3517               		.cfi_def_cfa_offset 20
 3518 18f0 4868 FFFD 		pea -3(%a0)
 3519               		.cfi_def_cfa_offset 24
 3520 18f4 4879 0000 		pea .LC10
 3520      0000 
 3521               		.cfi_def_cfa_offset 28
 3522 18fa 4878 0001 		pea 1.w
 3523               		.cfi_def_cfa_offset 32
 3524 18fe 4878 0001 		pea 1.w
 3525               		.cfi_def_cfa_offset 36
 3526 1902 4E92      		jsr (%a2)
 3527               	.LVL165:
 607:test3.c       ****     fast_printf(true, true, "├"); // Left corner of the divider
 3528               		.loc 1 607 5 view .LVU560
 3529 1904 4879 0000 		pea .LC28
 3529      0000 
 3530               		.cfi_def_cfa_offset 40
 3531 190a 4878 0001 		pea 1.w
 3532               		.cfi_def_cfa_offset 44
 3533 190e 4878 0001 		pea 1.w
 3534               		.cfi_def_cfa_offset 48
 3535 1912 4E92      		jsr (%a2)
 3536               	.LVL166:
 608:test3.c       ****     for (i = 1; i <= screen_width - 2; i++)
 3537               		.loc 1 608 5 view .LVU561
 3538               		.loc 1 608 12 is_stmt 0 view .LVU562
 3539 1914 7001      		moveq #1,%d0
 3540 1916 23C0 0000 		move.l %d0,i
 3540      0000 
 3541               		.loc 1 608 19 is_stmt 1 view .LVU563
 3542 191c 4FEF 0020 		lea (32,%sp),%sp
 3543               		.cfi_def_cfa_offset 16
 3544 1920 7402      		moveq #2,%d2
 3545 1922 B4B9 0000 		cmp.l screen_width.l,%d2
 3545      0000 
 3546 1928 6740      		jeq .L111
 3547 192a 7001      		moveq #1,%d0
 3548 192c 47F9 0000 		lea term_input_col,%a3
 3548      0000 
 3549               	.L106:
 609:test3.c       ****     {
 610:test3.c       ****         if (i == term_input_col[0] - 2)
 3550               		.loc 1 610 9 view .LVU564
 3551               		.loc 1 610 36 is_stmt 0 view .LVU565
 3552 1932 2213      		move.l (%a3),%d1
 3553 1934 5581      		subq.l #2,%d1
 3554               		.loc 1 610 12 view .LVU566
 3555 1936 B081      		cmp.l %d1,%d0
 3556 1938 6700 01A0 		jeq .L126
 611:test3.c       ****             fast_printf(true, true, "┬"); // Intersection for input column
 612:test3.c       ****         else
68K GAS  /tmp/ccdyPHKc.s 			page 89


 613:test3.c       ****             fast_printf(true, true, "─"); // Horizontal divider
 3557               		.loc 1 613 13 is_stmt 1 view .LVU567
 3558 193c 4879 0000 		pea .LC26
 3558      0000 
 3559               		.cfi_def_cfa_offset 20
 3560 1942 4878 0001 		pea 1.w
 3561               		.cfi_def_cfa_offset 24
 3562 1946 4878 0001 		pea 1.w
 3563               		.cfi_def_cfa_offset 28
 3564 194a 4E92      		jsr (%a2)
 3565               	.LVL167:
 3566 194c 4FEF 000C 		lea (12,%sp),%sp
 3567               		.cfi_def_cfa_offset 16
 608:test3.c       ****     {
 3568               		.loc 1 608 41 view .LVU568
 3569 1950 2039 0000 		move.l i,%d0
 3569      0000 
 3570 1956 5280      		addq.l #1,%d0
 3571 1958 23C0 0000 		move.l %d0,i
 3571      0000 
 608:test3.c       ****     {
 3572               		.loc 1 608 19 view .LVU569
 608:test3.c       ****     {
 3573               		.loc 1 608 35 is_stmt 0 view .LVU570
 3574 195e 2239 0000 		move.l screen_width,%d1
 3574      0000 
 3575 1964 5581      		subq.l #2,%d1
 608:test3.c       ****     {
 3576               		.loc 1 608 19 view .LVU571
 3577 1966 B081      		cmp.l %d1,%d0
 3578 1968 63C8      		jls .L106
 3579               	.L111:
 614:test3.c       ****     }
 615:test3.c       ****     fast_printf(true, true, "┤"); // Right corner of the divider
 3580               		.loc 1 615 5 is_stmt 1 view .LVU572
 3581 196a 4879 0000 		pea .LC29
 3581      0000 
 3582               		.cfi_def_cfa_offset 20
 3583 1970 4878 0001 		pea 1.w
 3584               		.cfi_def_cfa_offset 24
 3585 1974 4878 0001 		pea 1.w
 3586               		.cfi_def_cfa_offset 28
 3587 1978 4E92      		jsr (%a2)
 3588               	.LVL168:
 616:test3.c       **** 
 617:test3.c       ****     // Draw the input box borders
 618:test3.c       ****     fast_printf(true, true, CURSORMOVE, screen_height - 2, 1);
 3589               		.loc 1 618 5 view .LVU573
 3590 197a 4878 0001 		pea 1.w
 3591               		.cfi_def_cfa_offset 32
 3592 197e 2039 0000 		move.l screen_height,%d0
 3592      0000 
 3593 1984 5580      		subq.l #2,%d0
 3594 1986 2F00      		move.l %d0,-(%sp)
 3595               		.cfi_def_cfa_offset 36
 3596 1988 4879 0000 		pea .LC10
 3596      0000 
68K GAS  /tmp/ccdyPHKc.s 			page 90


 3597               		.cfi_def_cfa_offset 40
 3598 198e 4878 0001 		pea 1.w
 3599               		.cfi_def_cfa_offset 44
 3600 1992 4878 0001 		pea 1.w
 3601               		.cfi_def_cfa_offset 48
 3602 1996 4E92      		jsr (%a2)
 3603               	.LVL169:
 619:test3.c       ****     fast_printf(true, true, "│"); // Left border of the input box
 3604               		.loc 1 619 5 view .LVU574
 3605 1998 4FEF 001C 		lea (28,%sp),%sp
 3606               		.cfi_def_cfa_offset 20
 3607 199c 2EBC 0000 		move.l #.LC27,(%sp)
 3607      0000 
 3608 19a2 4878 0001 		pea 1.w
 3609               		.cfi_def_cfa_offset 24
 3610 19a6 4878 0001 		pea 1.w
 3611               		.cfi_def_cfa_offset 28
 3612 19aa 4E92      		jsr (%a2)
 3613               	.LVL170:
 620:test3.c       ****     fast_printf(true, true, CURSORMOVE, screen_height - 2, screen_width);
 3614               		.loc 1 620 5 view .LVU575
 3615 19ac 2F39 0000 		move.l screen_width,-(%sp)
 3615      0000 
 3616               		.cfi_def_cfa_offset 32
 3617 19b2 2439 0000 		move.l screen_height,%d2
 3617      0000 
 3618 19b8 5582      		subq.l #2,%d2
 3619 19ba 2F02      		move.l %d2,-(%sp)
 3620               		.cfi_def_cfa_offset 36
 3621 19bc 4879 0000 		pea .LC10
 3621      0000 
 3622               		.cfi_def_cfa_offset 40
 3623 19c2 4878 0001 		pea 1.w
 3624               		.cfi_def_cfa_offset 44
 3625 19c6 4878 0001 		pea 1.w
 3626               		.cfi_def_cfa_offset 48
 3627 19ca 4E92      		jsr (%a2)
 3628               	.LVL171:
 621:test3.c       ****     fast_printf(true, true, "│"); // Right border of the input box
 3629               		.loc 1 621 5 view .LVU576
 3630 19cc 4FEF 001C 		lea (28,%sp),%sp
 3631               		.cfi_def_cfa_offset 20
 3632 19d0 2EBC 0000 		move.l #.LC27,(%sp)
 3632      0000 
 3633 19d6 4878 0001 		pea 1.w
 3634               		.cfi_def_cfa_offset 24
 3635 19da 4878 0001 		pea 1.w
 3636               		.cfi_def_cfa_offset 28
 3637 19de 4E92      		jsr (%a2)
 3638               	.LVL172:
 622:test3.c       **** 
 623:test3.c       ****     // Draw the bottom border of the UI
 624:test3.c       ****     fast_printf(true, true, CURSORMOVE, screen_height - 1, 1);
 3639               		.loc 1 624 5 view .LVU577
 3640 19e0 4878 0001 		pea 1.w
 3641               		.cfi_def_cfa_offset 32
 3642 19e4 2039 0000 		move.l screen_height,%d0
68K GAS  /tmp/ccdyPHKc.s 			page 91


 3642      0000 
 3643 19ea 5380      		subq.l #1,%d0
 3644 19ec 2F00      		move.l %d0,-(%sp)
 3645               		.cfi_def_cfa_offset 36
 3646 19ee 4879 0000 		pea .LC10
 3646      0000 
 3647               		.cfi_def_cfa_offset 40
 3648 19f4 4878 0001 		pea 1.w
 3649               		.cfi_def_cfa_offset 44
 3650 19f8 4878 0001 		pea 1.w
 3651               		.cfi_def_cfa_offset 48
 3652 19fc 4E92      		jsr (%a2)
 3653               	.LVL173:
 625:test3.c       ****     fast_printf(true, true, "└"); // Bottom left corner
 3654               		.loc 1 625 5 view .LVU578
 3655 19fe 4FEF 001C 		lea (28,%sp),%sp
 3656               		.cfi_def_cfa_offset 20
 3657 1a02 2EBC 0000 		move.l #.LC30,(%sp)
 3657      0000 
 3658 1a08 4878 0001 		pea 1.w
 3659               		.cfi_def_cfa_offset 24
 3660 1a0c 4878 0001 		pea 1.w
 3661               		.cfi_def_cfa_offset 28
 3662 1a10 4E92      		jsr (%a2)
 3663               	.LVL174:
 626:test3.c       ****     for (i = 1; i <= screen_width - 2; i++)
 3664               		.loc 1 626 5 view .LVU579
 3665               		.loc 1 626 12 is_stmt 0 view .LVU580
 3666 1a12 7401      		moveq #1,%d2
 3667 1a14 23C2 0000 		move.l %d2,i
 3667      0000 
 3668               		.loc 1 626 19 is_stmt 1 view .LVU581
 3669 1a1a 4FEF 000C 		lea (12,%sp),%sp
 3670               		.cfi_def_cfa_offset 16
 3671 1a1e 7002      		moveq #2,%d0
 3672 1a20 B0B9 0000 		cmp.l screen_width.l,%d0
 3672      0000 
 3673 1a26 6740      		jeq .L108
 3674 1a28 7001      		moveq #1,%d0
 3675 1a2a 47F9 0000 		lea term_input_col,%a3
 3675      0000 
 3676               	.L107:
 627:test3.c       ****     {
 628:test3.c       ****         if (i == term_input_col[0] - 2)
 3677               		.loc 1 628 9 view .LVU582
 3678               		.loc 1 628 36 is_stmt 0 view .LVU583
 3679 1a30 2213      		move.l (%a3),%d1
 3680 1a32 5581      		subq.l #2,%d1
 3681               		.loc 1 628 12 view .LVU584
 3682 1a34 B081      		cmp.l %d1,%d0
 3683 1a36 6700 00D6 		jeq .L127
 629:test3.c       ****             fast_printf(true, true, "┴"); // Intersection for input column
 630:test3.c       ****         else
 631:test3.c       ****             fast_printf(true, true, "─"); // Bottom horizontal border
 3684               		.loc 1 631 13 is_stmt 1 view .LVU585
 3685 1a3a 4879 0000 		pea .LC26
 3685      0000 
68K GAS  /tmp/ccdyPHKc.s 			page 92


 3686               		.cfi_def_cfa_offset 20
 3687 1a40 4878 0001 		pea 1.w
 3688               		.cfi_def_cfa_offset 24
 3689 1a44 4878 0001 		pea 1.w
 3690               		.cfi_def_cfa_offset 28
 3691 1a48 4E92      		jsr (%a2)
 3692               	.LVL175:
 3693 1a4a 4FEF 000C 		lea (12,%sp),%sp
 3694               		.cfi_def_cfa_offset 16
 626:test3.c       ****     {
 3695               		.loc 1 626 41 view .LVU586
 3696 1a4e 2039 0000 		move.l i,%d0
 3696      0000 
 3697 1a54 5280      		addq.l #1,%d0
 3698 1a56 23C0 0000 		move.l %d0,i
 3698      0000 
 626:test3.c       ****     {
 3699               		.loc 1 626 19 view .LVU587
 626:test3.c       ****     {
 3700               		.loc 1 626 35 is_stmt 0 view .LVU588
 3701 1a5c 2239 0000 		move.l screen_width,%d1
 3701      0000 
 3702 1a62 5581      		subq.l #2,%d1
 626:test3.c       ****     {
 3703               		.loc 1 626 19 view .LVU589
 3704 1a64 B081      		cmp.l %d1,%d0
 3705 1a66 63C8      		jls .L107
 3706               	.L108:
 632:test3.c       ****     }
 633:test3.c       ****     fast_printf(true, true, "┘"); // Bottom right corner
 3707               		.loc 1 633 5 is_stmt 1 view .LVU590
 3708 1a68 4879 0000 		pea .LC32
 3708      0000 
 3709               		.cfi_def_cfa_offset 20
 3710 1a6e 4878 0001 		pea 1.w
 3711               		.cfi_def_cfa_offset 24
 3712 1a72 4878 0001 		pea 1.w
 3713               		.cfi_def_cfa_offset 28
 3714 1a76 4E92      		jsr (%a2)
 3715               	.LVL176:
 634:test3.c       **** 
 635:test3.c       ****     // Position and display the message input prompt
 636:test3.c       ****     fast_printf(true, true, CURSORMOVE, screen_height - 2, 2);
 3716               		.loc 1 636 5 view .LVU591
 3717 1a78 4878 0002 		pea 2.w
 3718               		.cfi_def_cfa_offset 32
 3719 1a7c 2439 0000 		move.l screen_height,%d2
 3719      0000 
 3720 1a82 5582      		subq.l #2,%d2
 3721 1a84 2F02      		move.l %d2,-(%sp)
 3722               		.cfi_def_cfa_offset 36
 3723 1a86 4879 0000 		pea .LC10
 3723      0000 
 3724               		.cfi_def_cfa_offset 40
 3725 1a8c 4878 0001 		pea 1.w
 3726               		.cfi_def_cfa_offset 44
 3727 1a90 4878 0001 		pea 1.w
68K GAS  /tmp/ccdyPHKc.s 			page 93


 3728               		.cfi_def_cfa_offset 48
 3729 1a94 4E92      		jsr (%a2)
 3730               	.LVL177:
 637:test3.c       ****     fast_printf(true, true, "\x1b[1m%s\x1b[0m", msg_input_prompt);
 3731               		.loc 1 637 5 view .LVU592
 3732 1a96 4FEF 001C 		lea (28,%sp),%sp
 3733               		.cfi_def_cfa_offset 20
 3734 1a9a 2EBC 0000 		move.l #msg_input_prompt,(%sp)
 3734      0000 
 3735 1aa0 4879 0000 		pea .LC33
 3735      0000 
 3736               		.cfi_def_cfa_offset 24
 3737 1aa6 4878 0001 		pea 1.w
 3738               		.cfi_def_cfa_offset 28
 3739 1aaa 4878 0001 		pea 1.w
 3740               		.cfi_def_cfa_offset 32
 3741 1aae 4E92      		jsr (%a2)
 3742               	.LVL178:
 638:test3.c       ****     fast_printf(true, true, "│"); // Vertical middle border of the input box
 3743               		.loc 1 638 5 view .LVU593
 3744 1ab0 4879 0000 		pea .LC27
 3744      0000 
 3745               		.cfi_def_cfa_offset 36
 3746 1ab6 4878 0001 		pea 1.w
 3747               		.cfi_def_cfa_offset 40
 3748 1aba 4878 0001 		pea 1.w
 3749               		.cfi_def_cfa_offset 44
 3750 1abe 4E92      		jsr (%a2)
 3751               	.LVL179:
 639:test3.c       **** 
 640:test3.c       ****     // Make the cursor visible again
 641:test3.c       ****     fast_printf(true, true, CURSORVISIBLE);
 3752               		.loc 1 641 5 view .LVU594
 3753 1ac0 4879 0000 		pea .LC5
 3753      0000 
 3754               		.cfi_def_cfa_offset 48
 3755 1ac6 4878 0001 		pea 1.w
 3756               		.cfi_def_cfa_offset 52
 3757 1aca 4878 0001 		pea 1.w
 3758               		.cfi_def_cfa_offset 56
 3759 1ace 4E92      		jsr (%a2)
 3760               	.LVL180:
 642:test3.c       **** }
 3761               		.loc 1 642 1 is_stmt 0 view .LVU595
 3762 1ad0 4FEF 0028 		lea (40,%sp),%sp
 3763               		.cfi_def_cfa_offset 16
 3764 1ad4 4CDF 0C04 		movem.l (%sp)+,#3076
 3765 1ad8 4E75      		rts
 3766               	.L126:
 611:test3.c       ****         else
 3767               		.loc 1 611 13 is_stmt 1 view .LVU596
 3768 1ada 4879 0000 		pea .LC31
 3768      0000 
 3769               		.cfi_def_cfa_offset 20
 3770 1ae0 4878 0001 		pea 1.w
 3771               		.cfi_def_cfa_offset 24
 3772 1ae4 4878 0001 		pea 1.w
68K GAS  /tmp/ccdyPHKc.s 			page 94


 3773               		.cfi_def_cfa_offset 28
 3774 1ae8 4E92      		jsr (%a2)
 3775               	.LVL181:
 3776 1aea 4FEF 000C 		lea (12,%sp),%sp
 3777               		.cfi_def_cfa_offset 16
 608:test3.c       ****     {
 3778               		.loc 1 608 41 view .LVU597
 3779 1aee 2039 0000 		move.l i,%d0
 3779      0000 
 3780 1af4 5280      		addq.l #1,%d0
 3781 1af6 23C0 0000 		move.l %d0,i
 3781      0000 
 608:test3.c       ****     {
 3782               		.loc 1 608 19 view .LVU598
 608:test3.c       ****     {
 3783               		.loc 1 608 35 is_stmt 0 view .LVU599
 3784 1afc 2239 0000 		move.l screen_width,%d1
 3784      0000 
 3785 1b02 5581      		subq.l #2,%d1
 608:test3.c       ****     {
 3786               		.loc 1 608 19 view .LVU600
 3787 1b04 B081      		cmp.l %d1,%d0
 3788 1b06 6300 FE2A 		jls .L106
 3789 1b0a 6000 FE5E 		jra .L111
 3790               	.L127:
 629:test3.c       ****         else
 3791               		.loc 1 629 13 is_stmt 1 view .LVU601
 3792 1b0e 4879 0000 		pea .LC34
 3792      0000 
 3793               		.cfi_def_cfa_offset 20
 3794 1b14 4878 0001 		pea 1.w
 3795               		.cfi_def_cfa_offset 24
 3796 1b18 4878 0001 		pea 1.w
 3797               		.cfi_def_cfa_offset 28
 3798 1b1c 4E92      		jsr (%a2)
 3799               	.LVL182:
 3800 1b1e 4FEF 000C 		lea (12,%sp),%sp
 3801               		.cfi_def_cfa_offset 16
 626:test3.c       ****     {
 3802               		.loc 1 626 41 view .LVU602
 3803 1b22 2039 0000 		move.l i,%d0
 3803      0000 
 3804 1b28 5280      		addq.l #1,%d0
 3805 1b2a 23C0 0000 		move.l %d0,i
 3805      0000 
 626:test3.c       ****     {
 3806               		.loc 1 626 19 view .LVU603
 626:test3.c       ****     {
 3807               		.loc 1 626 35 is_stmt 0 view .LVU604
 3808 1b30 2239 0000 		move.l screen_width,%d1
 3808      0000 
 3809 1b36 5581      		subq.l #2,%d1
 626:test3.c       ****     {
 3810               		.loc 1 626 19 view .LVU605
 3811 1b38 B081      		cmp.l %d1,%d0
 3812 1b3a 6300 FEF4 		jls .L107
 3813 1b3e 6000 FF28 		jra .L108
68K GAS  /tmp/ccdyPHKc.s 			page 95


 3814               		.cfi_endproc
 3815               	.LFE7:
 3816               		.size	init_ui, .-init_ui
 3817               		.section	.text.startup,"ax",@progbits
 3818               		.align	2
 3819               		.globl	main
 3820               		.type	main, @function
 3821               	main:
 3822               	.LFB8:
 643:test3.c       **** 
 644:test3.c       **** void main()
 645:test3.c       **** {
 3823               		.loc 1 645 1 is_stmt 1 view -0
 3824               		.cfi_startproc
 3825 0000 2F0A      		move.l %a2,-(%sp)
 3826               		.cfi_def_cfa_offset 8
 3827               		.cfi_offset 10, -8
 646:test3.c       ****     init_kernel();
 3828               		.loc 1 646 5 view .LVU607
 3829 0002 4EB9 0000 		jsr init_kernel
 3829      0000 
 3830               	.LVL183:
 647:test3.c       ****     init_io();
 3831               		.loc 1 647 5 view .LVU608
 3832 0008 4EB9 0000 		jsr init_io
 3832      0000 
 3833               	.LVL184:
 648:test3.c       ****     init_ui();
 3834               		.loc 1 648 5 view .LVU609
 3835 000e 4EB9 0000 		jsr init_ui
 3835      0000 
 3836               	.LVL185:
 649:test3.c       ****     set_task(runtime_clock);
 3837               		.loc 1 649 5 view .LVU610
 3838 0014 4879 0000 		pea runtime_clock
 3838      0000 
 3839               		.cfi_def_cfa_offset 12
 3840 001a 45F9 0000 		lea set_task,%a2
 3840      0000 
 3841 0020 4E92      		jsr (%a2)
 3842               	.LVL186:
 650:test3.c       ****     set_task(command_bar);
 3843               		.loc 1 650 5 view .LVU611
 3844 0022 4879 0000 		pea command_bar
 3844      0000 
 3845               		.cfi_def_cfa_offset 16
 3846 0028 4E92      		jsr (%a2)
 3847               	.LVL187:
 651:test3.c       ****     set_task(main_app);
 3848               		.loc 1 651 5 view .LVU612
 3849 002a 4879 0000 		pea main_app
 3849      0000 
 3850               		.cfi_def_cfa_offset 20
 3851 0030 4E92      		jsr (%a2)
 3852               	.LVL188:
 652:test3.c       ****     begin_sch();
 3853               		.loc 1 652 5 view .LVU613
68K GAS  /tmp/ccdyPHKc.s 			page 96


 3854 0032 4FEF 000C 		lea (12,%sp),%sp
 3855               		.cfi_def_cfa_offset 8
 653:test3.c       **** }
 3856               		.loc 1 653 1 is_stmt 0 view .LVU614
 3857 0036 245F      		move.l (%sp)+,%a2
 652:test3.c       ****     begin_sch();
 3858               		.loc 1 652 5 view .LVU615
 3859 0038 4EF9 0000 		jra begin_sch
 3859      0000 
 3860               	.LVL189:
 3861               		.cfi_endproc
 3862               	.LFE8:
 3863               		.size	main, .-main
 3864               		.globl	help_text
 3865               		.section	.rodata
 3866               		.type	help_text, @object
 3867               		.size	help_text, 147
 3868               	help_text:
 3869 0000 0A1B 5B31 		.string	"\n\033[1;4mManual page for the chat application\033[0m\n\nThis page should be populated w
 3869      3B34 6D4D 
 3869      616E 7561 
 3869      6C20 7061 
 3869      6765 2066 
 3870               		.globl	tip_list
 3871               		.type	tip_list, @object
 3872               		.size	tip_list, 400
 3873               	tip_list:
 3874 0093 5072 6573 		.string	"Press ESC to enter command mode"
 3874      7320 4553 
 3874      4320 746F 
 3874      2065 6E74 
 3874      6572 2063 
 3875 00b3 0000 0000 		.zero	68
 3875      0000 0000 
 3875      0000 0000 
 3875      0000 0000 
 3875      0000 0000 
 3876 00f7 4D61 7869 		.string	"Maximum length of each message is 100 characters"
 3876      6D75 6D20 
 3876      6C65 6E67 
 3876      7468 206F 
 3876      6620 6561 
 3877 0128 0000 0000 		.zero	51
 3877      0000 0000 
 3877      0000 0000 
 3877      0000 0000 
 3877      0000 0000 
 3878 015b 4675 6E63 		.string	"Functionality of the arrow keys is suppressed"
 3878      7469 6F6E 
 3878      616C 6974 
 3878      7920 6F66 
 3878      2074 6865 
 3879 0189 0000 0000 		.zero	54
 3879      0000 0000 
 3879      0000 0000 
 3879      0000 0000 
 3879      0000 0000 
68K GAS  /tmp/ccdyPHKc.s 			page 97


 3880 01bf 4F6E 6C79 		.string	"Only help command is available for now"
 3880      2068 656C 
 3880      7020 636F 
 3880      6D6D 616E 
 3880      6420 6973 
 3881 01e6 0000 0000 		.zero	61
 3881      0000 0000 
 3881      0000 0000 
 3881      0000 0000 
 3881      0000 0000 
 3882               		.globl	command_prompt
 3883               		.type	command_prompt, @object
 3884               		.size	command_prompt, 10
 3885               	command_prompt:
 3886 0223 436F 6D6D 		.string	"Command: "
 3886      616E 643A 
 3886      2000 
 3887               		.globl	msg_input_prompt
 3888               		.type	msg_input_prompt, @object
 3889               		.size	msg_input_prompt, 13
 3890               	msg_input_prompt:
 3891 022d 596F 7572 		.string	"Your message"
 3891      206D 6573 
 3891      7361 6765 
 3891      00
 3892               		.globl	term_line10
 3893               		.type	term_line10, @object
 3894               		.size	term_line10, 7
 3895               	term_line10:
 3896 023a 1B5B 3130 		.string	"\033[10;H"
 3896      3B48 00
 3897               		.globl	term_backspace
 3898               		.type	term_backspace, @object
 3899               		.size	term_backspace, 4
 3900               	term_backspace:
 3901 0241 0820 0800 		.string	"\b \b"
 3902               		.globl	chat_row
 3903               		.data
 3904               		.align	2
 3905               		.type	chat_row, @object
 3906               		.size	chat_row, 4
 3907               	chat_row:
 3908 0000 0000 0001 		.long	1
 3909               		.globl	screen_width
 3910               		.align	2
 3911               		.type	screen_width, @object
 3912               		.size	screen_width, 4
 3913               	screen_width:
 3914 0004 0000 00CB 		.long	203
 3915               		.globl	screen_height
 3916               		.align	2
 3917               		.type	screen_height, @object
 3918               		.size	screen_height, 4
 3919               	screen_height:
 3920 0008 0000 0023 		.long	35
 3921               		.globl	tip_num
 3922               		.section	.bss
68K GAS  /tmp/ccdyPHKc.s 			page 98


 3923               		.align	2
 3924               		.type	tip_num, @object
 3925               		.size	tip_num, 8
 3926               	tip_num:
 3927 0000 0000 0000 		.zero	8
 3927      0000 0000 
 3928               		.globl	printf_buf
 3929               		.type	printf_buf, @object
 3930               		.size	printf_buf, 100
 3931               	printf_buf:
 3932 0008 0000 0000 		.zero	100
 3932      0000 0000 
 3932      0000 0000 
 3932      0000 0000 
 3932      0000 0000 
 3933               		.globl	cmd_buf_len
 3934               		.align	2
 3935               		.type	cmd_buf_len, @object
 3936               		.size	cmd_buf_len, 8
 3937               	cmd_buf_len:
 3938 006c 0000 0000 		.zero	8
 3938      0000 0000 
 3939               		.globl	cmd_buf
 3940               		.type	cmd_buf, @object
 3941               		.size	cmd_buf, 200
 3942               	cmd_buf:
 3943 0074 0000 0000 		.zero	200
 3943      0000 0000 
 3943      0000 0000 
 3943      0000 0000 
 3943      0000 0000 
 3944               		.globl	msg_buf_len
 3945               		.align	2
 3946               		.type	msg_buf_len, @object
 3947               		.size	msg_buf_len, 8
 3948               	msg_buf_len:
 3949 013c 0000 0000 		.zero	8
 3949      0000 0000 
 3950               		.globl	msg_buf
 3951               		.type	msg_buf, @object
 3952               		.size	msg_buf, 200
 3953               	msg_buf:
 3954 0144 0000 0000 		.zero	200
 3954      0000 0000 
 3954      0000 0000 
 3954      0000 0000 
 3954      0000 0000 
 3955               		.globl	term_input_col
 3956               		.align	2
 3957               		.type	term_input_col, @object
 3958               		.size	term_input_col, 8
 3959               	term_input_col:
 3960 020c 0000 0000 		.zero	8
 3960      0000 0000 
 3961               		.globl	client_nickname_set
 3962               		.type	client_nickname_set, @object
 3963               		.size	client_nickname_set, 2
68K GAS  /tmp/ccdyPHKc.s 			page 99


 3964               	client_nickname_set:
 3965 0214 0000      		.zero	2
 3966               		.globl	client_nickname
 3967               		.data
 3968               		.type	client_nickname, @object
 3969               		.size	client_nickname, 20
 3970               	client_nickname:
 3971 000c 5553 4552 		.string	"USER1"
 3971      3100 
 3972 0012 0000 0000 		.zero	4
 3973 0016 5553 4552 		.string	"USER2"
 3973      3200 
 3974 001c 0000 0000 		.zero	4
 3975               		.globl	client_nickname_color
 3976               		.type	client_nickname_color, @object
 3977               		.size	client_nickname_color, 2
 3978               	client_nickname_color:
 3979 0020 0B0E      		.ascii	"\013\016"
 3980               		.globl	last_keybuf_len
 3981               		.section	.bss
 3982               		.align	2
 3983               		.type	last_keybuf_len, @object
 3984               		.size	last_keybuf_len, 8
 3985               	last_keybuf_len:
 3986 0216 0000 0000 		.zero	8
 3986      0000 0000 
 3987               		.globl	last_keybuf
 3988               		.type	last_keybuf, @object
 3989               		.size	last_keybuf, 20
 3990               	last_keybuf:
 3991 021e 0000 0000 		.zero	20
 3991      0000 0000 
 3991      0000 0000 
 3991      0000 0000 
 3991      0000 0000 
 3992               		.globl	keypress
 3993               		.data
 3994               		.type	keypress, @object
 3995               		.size	keypress, 2
 3996               	keypress:
 3997 0022 FFFF      		.ascii	"\377\377"
 3998               		.globl	inappcom
 3999               		.type	inappcom, @object
 4000               		.size	inappcom, 2
 4001               	inappcom:
 4002 0024 01        		.byte	1
 4003 0025 01        		.byte	1
 4004               		.globl	in_alt_screen
 4005               		.section	.bss
 4006               		.type	in_alt_screen, @object
 4007               		.size	in_alt_screen, 2
 4008               	in_alt_screen:
 4009 0232 0000      		.zero	2
 4010               		.globl	j
 4011               		.align	2
 4012               		.type	j, @object
 4013               		.size	j, 4
68K GAS  /tmp/ccdyPHKc.s 			page 100


 4014               	j:
 4015 0234 0000 0000 		.zero	4
 4016               		.globl	i
 4017               		.align	2
 4018               		.type	i, @object
 4019               		.size	i, 4
 4020               	i:
 4021 0238 0000 0000 		.zero	4
 4022               		.text
 4023               	.Letext0:
 4024               		.file 2 "/usr/local/lib/gcc/m68k-elf/11.4.0/include/stdarg.h"
 4025               		.file 3 "/usr/local/lib/gcc/m68k-elf/11.4.0/include/stddef.h"
 4026               		.file 4 "mtk_c.h"
 4027               		.file 5 "/usr/local/m68k-elf/include/string.h"
 4028               		.file 6 "/usr/local/m68k-elf/include/stdio.h"
 4029               		.file 7 "/usr/local/m68k-elf/include/stdlib.h"
 4030               		.file 8 "<built-in>"
 4031               		.section	.debug_info,"",@progbits
 4032               	.Ldebug_info0:
 4033 0000 0000 0C80 		.long	0xc80
 4034 0004 0005      		.word	0x5
 4035 0006 01        		.byte	0x1
 4036 0007 04        		.byte	0x4
 4037 0008 0000 0000 		.long	.Ldebug_abbrev0
 4038 000c 18        		.uleb128 0x18
 4039 000d 0000 0000 		.long	.LASF63
 4040 0011 1D        		.byte	0x1d
 4041 0012 0000 0000 		.long	.LASF64
 4042 0016 0000 0000 		.long	.LASF65
 4043 001a 0000 0000 		.long	.LLRL11
 4044 001e 0000 0000 		.long	0
 4045 0022 0000 0000 		.long	.Ldebug_line0
 4046 0026 0D        		.uleb128 0xd
 4047 0027 0000 0000 		.long	.LASF0
 4048 002b 02        		.byte	0x2
 4049 002c 28        		.byte	0x28
 4050 002d 1B        		.byte	0x1b
 4051 002e 0000 0032 		.long	0x32
 4052 0032 19        		.uleb128 0x19
 4053 0033 04        		.byte	0x4
 4054 0034 0000 0000 		.long	.LASF66
 4055 0038 0D        		.uleb128 0xd
 4056 0039 0000 0000 		.long	.LASF1
 4057 003d 02        		.byte	0x2
 4058 003e 63        		.byte	0x63
 4059 003f 18        		.byte	0x18
 4060 0040 0000 0026 		.long	0x26
 4061 0044 06        		.uleb128 0x6
 4062 0045 01        		.byte	0x1
 4063 0046 06        		.byte	0x6
 4064 0047 0000 0000 		.long	.LASF2
 4065 004b 06        		.uleb128 0x6
 4066 004c 01        		.byte	0x1
 4067 004d 08        		.byte	0x8
 4068 004e 0000 0000 		.long	.LASF3
 4069 0052 06        		.uleb128 0x6
 4070 0053 02        		.byte	0x2
68K GAS  /tmp/ccdyPHKc.s 			page 101


 4071 0054 05        		.byte	0x5
 4072 0055 0000 0000 		.long	.LASF4
 4073 0059 06        		.uleb128 0x6
 4074 005a 02        		.byte	0x2
 4075 005b 07        		.byte	0x7
 4076 005c 0000 0000 		.long	.LASF5
 4077 0060 06        		.uleb128 0x6
 4078 0061 04        		.byte	0x4
 4079 0062 05        		.byte	0x5
 4080 0063 0000 0000 		.long	.LASF6
 4081 0067 06        		.uleb128 0x6
 4082 0068 04        		.byte	0x4
 4083 0069 07        		.byte	0x7
 4084 006a 0000 0000 		.long	.LASF7
 4085 006e 06        		.uleb128 0x6
 4086 006f 08        		.byte	0x8
 4087 0070 05        		.byte	0x5
 4088 0071 0000 0000 		.long	.LASF8
 4089 0075 06        		.uleb128 0x6
 4090 0076 08        		.byte	0x8
 4091 0077 07        		.byte	0x7
 4092 0078 0000 0000 		.long	.LASF9
 4093 007c 0D        		.uleb128 0xd
 4094 007d 0000 0000 		.long	.LASF10
 4095 0081 03        		.byte	0x3
 4096 0082 D1        		.byte	0xd1
 4097 0083 17        		.byte	0x17
 4098 0084 0000 0067 		.long	0x67
 4099 0088 06        		.uleb128 0x6
 4100 0089 0C        		.byte	0xc
 4101 008a 04        		.byte	0x4
 4102 008b 0000 0000 		.long	.LASF11
 4103 008f 06        		.uleb128 0x6
 4104 0090 04        		.byte	0x4
 4105 0091 07        		.byte	0x7
 4106 0092 0000 0000 		.long	.LASF12
 4107 0096 1A        		.uleb128 0x1a
 4108 0097 04        		.byte	0x4
 4109 0098 05        		.byte	0x5
 4110 0099 696E 7400 		.string	"int"
 4111 009d 1B        		.uleb128 0x1b
 4112 009e 04        		.byte	0x4
 4113 009f 12        		.uleb128 0x12
 4114 00a0 0000 00A4 		.long	0xa4
 4115 00a4 06        		.uleb128 0x6
 4116 00a5 01        		.byte	0x1
 4117 00a6 06        		.byte	0x6
 4118 00a7 0000 0000 		.long	.LASF13
 4119 00ab 08        		.uleb128 0x8
 4120 00ac 0000 00A4 		.long	0xa4
 4121 00b0 12        		.uleb128 0x12
 4122 00b1 0000 00AB 		.long	0xab
 4123 00b5 1C        		.uleb128 0x1c
 4124 00b6 0000 0000 		.long	.LASF14
 4125 00ba 04        		.byte	0x4
 4126 00bb 20        		.byte	0x20
 4127 00bc 15        		.byte	0x15
68K GAS  /tmp/ccdyPHKc.s 			page 102


 4128 00bd 0000 008F 		.long	0x8f
 4129 00c1 13        		.uleb128 0x13
 4130 00c2 6900      		.string	"i"
 4131 00c4 8C        		.byte	0x8c
 4132 00c5 05        		.byte	0x5
 4133 00c6 0000 0096 		.long	0x96
 4134 00ca 05        		.uleb128 0x5
 4135 00cb 03        		.byte	0x3
 4136 00cc 0000 0000 		.long	i
 4137 00d0 13        		.uleb128 0x13
 4138 00d1 6A00      		.string	"j"
 4139 00d3 8C        		.byte	0x8c
 4140 00d4 08        		.byte	0x8
 4141 00d5 0000 0096 		.long	0x96
 4142 00d9 05        		.uleb128 0x5
 4143 00da 03        		.byte	0x3
 4144 00db 0000 0000 		.long	j
 4145 00df 04        		.uleb128 0x4
 4146 00e0 0000 00EF 		.long	0xef
 4147 00e4 0000 00EF 		.long	0xef
 4148 00e8 03        		.uleb128 0x3
 4149 00e9 0000 0067 		.long	0x67
 4150 00ed 01        		.byte	0x1
 4151 00ee 00        		.byte	0
 4152 00ef 06        		.uleb128 0x6
 4153 00f0 01        		.byte	0x1
 4154 00f1 02        		.byte	0x2
 4155 00f2 0000 0000 		.long	.LASF15
 4156 00f6 08        		.uleb128 0x8
 4157 00f7 0000 00EF 		.long	0xef
 4158 00fb 02        		.uleb128 0x2
 4159 00fc 0000 0000 		.long	.LASF16
 4160 0100 8F        		.byte	0x8f
 4161 0101 06        		.byte	0x6
 4162 0102 0000 00DF 		.long	0xdf
 4163 0106 05        		.uleb128 0x5
 4164 0107 03        		.byte	0x3
 4165 0108 0000 0000 		.long	in_alt_screen
 4166 010c 02        		.uleb128 0x2
 4167 010d 0000 0000 		.long	.LASF17
 4168 0111 90        		.byte	0x90
 4169 0112 06        		.byte	0x6
 4170 0113 0000 00DF 		.long	0xdf
 4171 0117 05        		.uleb128 0x5
 4172 0118 03        		.byte	0x3
 4173 0119 0000 0000 		.long	inappcom
 4174 011d 04        		.uleb128 0x4
 4175 011e 0000 00A4 		.long	0xa4
 4176 0122 0000 012D 		.long	0x12d
 4177 0126 03        		.uleb128 0x3
 4178 0127 0000 0067 		.long	0x67
 4179 012b 01        		.byte	0x1
 4180 012c 00        		.byte	0
 4181 012d 02        		.uleb128 0x2
 4182 012e 0000 0000 		.long	.LASF18
 4183 0132 93        		.byte	0x93
 4184 0133 06        		.byte	0x6
68K GAS  /tmp/ccdyPHKc.s 			page 103


 4185 0134 0000 011D 		.long	0x11d
 4186 0138 05        		.uleb128 0x5
 4187 0139 03        		.byte	0x3
 4188 013a 0000 0000 		.long	keypress
 4189 013e 04        		.uleb128 0x4
 4190 013f 0000 00A4 		.long	0xa4
 4191 0143 0000 0154 		.long	0x154
 4192 0147 03        		.uleb128 0x3
 4193 0148 0000 0067 		.long	0x67
 4194 014c 01        		.byte	0x1
 4195 014d 03        		.uleb128 0x3
 4196 014e 0000 0067 		.long	0x67
 4197 0152 09        		.byte	0x9
 4198 0153 00        		.byte	0
 4199 0154 02        		.uleb128 0x2
 4200 0155 0000 0000 		.long	.LASF19
 4201 0159 94        		.byte	0x94
 4202 015a 06        		.byte	0x6
 4203 015b 0000 013E 		.long	0x13e
 4204 015f 05        		.uleb128 0x5
 4205 0160 03        		.byte	0x3
 4206 0161 0000 0000 		.long	last_keybuf
 4207 0165 04        		.uleb128 0x4
 4208 0166 0000 0096 		.long	0x96
 4209 016a 0000 0175 		.long	0x175
 4210 016e 03        		.uleb128 0x3
 4211 016f 0000 0067 		.long	0x67
 4212 0173 01        		.byte	0x1
 4213 0174 00        		.byte	0
 4214 0175 02        		.uleb128 0x2
 4215 0176 0000 0000 		.long	.LASF20
 4216 017a 95        		.byte	0x95
 4217 017b 05        		.byte	0x5
 4218 017c 0000 0165 		.long	0x165
 4219 0180 05        		.uleb128 0x5
 4220 0181 03        		.byte	0x3
 4221 0182 0000 0000 		.long	last_keybuf_len
 4222 0186 02        		.uleb128 0x2
 4223 0187 0000 0000 		.long	.LASF21
 4224 018b 98        		.byte	0x98
 4225 018c 06        		.byte	0x6
 4226 018d 0000 011D 		.long	0x11d
 4227 0191 05        		.uleb128 0x5
 4228 0192 03        		.byte	0x3
 4229 0193 0000 0000 		.long	client_nickname_color
 4230 0197 02        		.uleb128 0x2
 4231 0198 0000 0000 		.long	.LASF22
 4232 019c 99        		.byte	0x99
 4233 019d 06        		.byte	0x6
 4234 019e 0000 013E 		.long	0x13e
 4235 01a2 05        		.uleb128 0x5
 4236 01a3 03        		.byte	0x3
 4237 01a4 0000 0000 		.long	client_nickname
 4238 01a8 02        		.uleb128 0x2
 4239 01a9 0000 0000 		.long	.LASF23
 4240 01ad 9A        		.byte	0x9a
 4241 01ae 06        		.byte	0x6
68K GAS  /tmp/ccdyPHKc.s 			page 104


 4242 01af 0000 00DF 		.long	0xdf
 4243 01b3 05        		.uleb128 0x5
 4244 01b4 03        		.byte	0x3
 4245 01b5 0000 0000 		.long	client_nickname_set
 4246 01b9 02        		.uleb128 0x2
 4247 01ba 0000 0000 		.long	.LASF24
 4248 01be 9D        		.byte	0x9d
 4249 01bf 05        		.byte	0x5
 4250 01c0 0000 0165 		.long	0x165
 4251 01c4 05        		.uleb128 0x5
 4252 01c5 03        		.byte	0x3
 4253 01c6 0000 0000 		.long	term_input_col
 4254 01ca 04        		.uleb128 0x4
 4255 01cb 0000 00A4 		.long	0xa4
 4256 01cf 0000 01E0 		.long	0x1e0
 4257 01d3 03        		.uleb128 0x3
 4258 01d4 0000 0067 		.long	0x67
 4259 01d8 01        		.byte	0x1
 4260 01d9 03        		.uleb128 0x3
 4261 01da 0000 0067 		.long	0x67
 4262 01de 63        		.byte	0x63
 4263 01df 00        		.byte	0
 4264 01e0 02        		.uleb128 0x2
 4265 01e1 0000 0000 		.long	.LASF25
 4266 01e5 A0        		.byte	0xa0
 4267 01e6 06        		.byte	0x6
 4268 01e7 0000 01CA 		.long	0x1ca
 4269 01eb 05        		.uleb128 0x5
 4270 01ec 03        		.byte	0x3
 4271 01ed 0000 0000 		.long	msg_buf
 4272 01f1 04        		.uleb128 0x4
 4273 01f2 0000 008F 		.long	0x8f
 4274 01f6 0000 0201 		.long	0x201
 4275 01fa 03        		.uleb128 0x3
 4276 01fb 0000 0067 		.long	0x67
 4277 01ff 01        		.byte	0x1
 4278 0200 00        		.byte	0
 4279 0201 02        		.uleb128 0x2
 4280 0202 0000 0000 		.long	.LASF26
 4281 0206 A1        		.byte	0xa1
 4282 0207 0E        		.byte	0xe
 4283 0208 0000 01F1 		.long	0x1f1
 4284 020c 05        		.uleb128 0x5
 4285 020d 03        		.byte	0x3
 4286 020e 0000 0000 		.long	msg_buf_len
 4287 0212 02        		.uleb128 0x2
 4288 0213 0000 0000 		.long	.LASF27
 4289 0217 A2        		.byte	0xa2
 4290 0218 06        		.byte	0x6
 4291 0219 0000 01CA 		.long	0x1ca
 4292 021d 05        		.uleb128 0x5
 4293 021e 03        		.byte	0x3
 4294 021f 0000 0000 		.long	cmd_buf
 4295 0223 02        		.uleb128 0x2
 4296 0224 0000 0000 		.long	.LASF28
 4297 0228 A3        		.byte	0xa3
 4298 0229 0E        		.byte	0xe
68K GAS  /tmp/ccdyPHKc.s 			page 105


 4299 022a 0000 01F1 		.long	0x1f1
 4300 022e 05        		.uleb128 0x5
 4301 022f 03        		.byte	0x3
 4302 0230 0000 0000 		.long	cmd_buf_len
 4303 0234 04        		.uleb128 0x4
 4304 0235 0000 00A4 		.long	0xa4
 4305 0239 0000 0244 		.long	0x244
 4306 023d 03        		.uleb128 0x3
 4307 023e 0000 0067 		.long	0x67
 4308 0242 63        		.byte	0x63
 4309 0243 00        		.byte	0
 4310 0244 02        		.uleb128 0x2
 4311 0245 0000 0000 		.long	.LASF29
 4312 0249 A4        		.byte	0xa4
 4313 024a 06        		.byte	0x6
 4314 024b 0000 0234 		.long	0x234
 4315 024f 05        		.uleb128 0x5
 4316 0250 03        		.byte	0x3
 4317 0251 0000 0000 		.long	printf_buf
 4318 0255 02        		.uleb128 0x2
 4319 0256 0000 0000 		.long	.LASF30
 4320 025a A7        		.byte	0xa7
 4321 025b 05        		.byte	0x5
 4322 025c 0000 0165 		.long	0x165
 4323 0260 05        		.uleb128 0x5
 4324 0261 03        		.byte	0x3
 4325 0262 0000 0000 		.long	tip_num
 4326 0266 02        		.uleb128 0x2
 4327 0267 0000 0000 		.long	.LASF31
 4328 026b AA        		.byte	0xaa
 4329 026c 0E        		.byte	0xe
 4330 026d 0000 008F 		.long	0x8f
 4331 0271 05        		.uleb128 0x5
 4332 0272 03        		.byte	0x3
 4333 0273 0000 0000 		.long	screen_height
 4334 0277 02        		.uleb128 0x2
 4335 0278 0000 0000 		.long	.LASF32
 4336 027c AB        		.byte	0xab
 4337 027d 0E        		.byte	0xe
 4338 027e 0000 008F 		.long	0x8f
 4339 0282 05        		.uleb128 0x5
 4340 0283 03        		.byte	0x3
 4341 0284 0000 0000 		.long	screen_width
 4342 0288 02        		.uleb128 0x2
 4343 0289 0000 0000 		.long	.LASF33
 4344 028d AC        		.byte	0xac
 4345 028e 0E        		.byte	0xe
 4346 028f 0000 008F 		.long	0x8f
 4347 0293 05        		.uleb128 0x5
 4348 0294 03        		.byte	0x3
 4349 0295 0000 0000 		.long	chat_row
 4350 0299 04        		.uleb128 0x4
 4351 029a 0000 00AB 		.long	0xab
 4352 029e 0000 02A9 		.long	0x2a9
 4353 02a2 03        		.uleb128 0x3
 4354 02a3 0000 0067 		.long	0x67
 4355 02a7 03        		.byte	0x3
68K GAS  /tmp/ccdyPHKc.s 			page 106


 4356 02a8 00        		.byte	0
 4357 02a9 08        		.uleb128 0x8
 4358 02aa 0000 0299 		.long	0x299
 4359 02ae 02        		.uleb128 0x2
 4360 02af 0000 0000 		.long	.LASF34
 4361 02b3 AF        		.byte	0xaf
 4362 02b4 0C        		.byte	0xc
 4363 02b5 0000 02A9 		.long	0x2a9
 4364 02b9 05        		.uleb128 0x5
 4365 02ba 03        		.byte	0x3
 4366 02bb 0000 0000 		.long	term_backspace
 4367 02bf 04        		.uleb128 0x4
 4368 02c0 0000 00AB 		.long	0xab
 4369 02c4 0000 02CF 		.long	0x2cf
 4370 02c8 03        		.uleb128 0x3
 4371 02c9 0000 0067 		.long	0x67
 4372 02cd 06        		.byte	0x6
 4373 02ce 00        		.byte	0
 4374 02cf 08        		.uleb128 0x8
 4375 02d0 0000 02BF 		.long	0x2bf
 4376 02d4 02        		.uleb128 0x2
 4377 02d5 0000 0000 		.long	.LASF35
 4378 02d9 B0        		.byte	0xb0
 4379 02da 0C        		.byte	0xc
 4380 02db 0000 02CF 		.long	0x2cf
 4381 02df 05        		.uleb128 0x5
 4382 02e0 03        		.byte	0x3
 4383 02e1 0000 0000 		.long	term_line10
 4384 02e5 04        		.uleb128 0x4
 4385 02e6 0000 00AB 		.long	0xab
 4386 02ea 0000 02F5 		.long	0x2f5
 4387 02ee 03        		.uleb128 0x3
 4388 02ef 0000 0067 		.long	0x67
 4389 02f3 0C        		.byte	0xc
 4390 02f4 00        		.byte	0
 4391 02f5 08        		.uleb128 0x8
 4392 02f6 0000 02E5 		.long	0x2e5
 4393 02fa 02        		.uleb128 0x2
 4394 02fb 0000 0000 		.long	.LASF36
 4395 02ff B3        		.byte	0xb3
 4396 0300 0C        		.byte	0xc
 4397 0301 0000 02F5 		.long	0x2f5
 4398 0305 05        		.uleb128 0x5
 4399 0306 03        		.byte	0x3
 4400 0307 0000 0000 		.long	msg_input_prompt
 4401 030b 04        		.uleb128 0x4
 4402 030c 0000 00AB 		.long	0xab
 4403 0310 0000 031B 		.long	0x31b
 4404 0314 03        		.uleb128 0x3
 4405 0315 0000 0067 		.long	0x67
 4406 0319 09        		.byte	0x9
 4407 031a 00        		.byte	0
 4408 031b 08        		.uleb128 0x8
 4409 031c 0000 030B 		.long	0x30b
 4410 0320 02        		.uleb128 0x2
 4411 0321 0000 0000 		.long	.LASF37
 4412 0325 B4        		.byte	0xb4
68K GAS  /tmp/ccdyPHKc.s 			page 107


 4413 0326 0C        		.byte	0xc
 4414 0327 0000 031B 		.long	0x31b
 4415 032b 05        		.uleb128 0x5
 4416 032c 03        		.byte	0x3
 4417 032d 0000 0000 		.long	command_prompt
 4418 0331 04        		.uleb128 0x4
 4419 0332 0000 00AB 		.long	0xab
 4420 0336 0000 0347 		.long	0x347
 4421 033a 03        		.uleb128 0x3
 4422 033b 0000 0067 		.long	0x67
 4423 033f 03        		.byte	0x3
 4424 0340 03        		.uleb128 0x3
 4425 0341 0000 0067 		.long	0x67
 4426 0345 63        		.byte	0x63
 4427 0346 00        		.byte	0
 4428 0347 08        		.uleb128 0x8
 4429 0348 0000 0331 		.long	0x331
 4430 034c 02        		.uleb128 0x2
 4431 034d 0000 0000 		.long	.LASF38
 4432 0351 B7        		.byte	0xb7
 4433 0352 0C        		.byte	0xc
 4434 0353 0000 0347 		.long	0x347
 4435 0357 05        		.uleb128 0x5
 4436 0358 03        		.byte	0x3
 4437 0359 0000 0000 		.long	tip_list
 4438 035d 04        		.uleb128 0x4
 4439 035e 0000 00AB 		.long	0xab
 4440 0362 0000 036D 		.long	0x36d
 4441 0366 03        		.uleb128 0x3
 4442 0367 0000 0067 		.long	0x67
 4443 036b 92        		.byte	0x92
 4444 036c 00        		.byte	0
 4445 036d 08        		.uleb128 0x8
 4446 036e 0000 035D 		.long	0x35d
 4447 0372 02        		.uleb128 0x2
 4448 0373 0000 0000 		.long	.LASF39
 4449 0377 BF        		.byte	0xbf
 4450 0378 0C        		.byte	0xc
 4451 0379 0000 036D 		.long	0x36d
 4452 037d 05        		.uleb128 0x5
 4453 037e 03        		.byte	0x3
 4454 037f 0000 0000 		.long	help_text
 4455 0383 0E        		.uleb128 0xe
 4456 0384 0000 0000 		.long	.LASF40
 4457 0388 41        		.byte	0x41
 4458 0389 0000 038F 		.long	0x38f
 4459 038d 07        		.uleb128 0x7
 4460 038e 00        		.byte	0
 4461 038f 1D        		.uleb128 0x1d
 4462 0390 0000 0000 		.long	.LASF46
 4463 0394 04        		.byte	0x4
 4464 0395 40        		.byte	0x40
 4465 0396 06        		.byte	0x6
 4466 0397 0000 03A1 		.long	0x3a1
 4467 039b 05        		.uleb128 0x5
 4468 039c 0000 009D 		.long	0x9d
 4469 03a0 00        		.byte	0
68K GAS  /tmp/ccdyPHKc.s 			page 108


 4470 03a1 0E        		.uleb128 0xe
 4471 03a2 0000 0000 		.long	.LASF41
 4472 03a6 3F        		.byte	0x3f
 4473 03a7 0000 03AD 		.long	0x3ad
 4474 03ab 07        		.uleb128 0x7
 4475 03ac 00        		.byte	0
 4476 03ad 0E        		.uleb128 0xe
 4477 03ae 0000 0000 		.long	.LASF42
 4478 03b2 3E        		.byte	0x3e
 4479 03b3 0000 03B9 		.long	0x3b9
 4480 03b7 07        		.uleb128 0x7
 4481 03b8 00        		.byte	0
 4482 03b9 0A        		.uleb128 0xa
 4483 03ba 0000 0000 		.long	.LASF43
 4484 03be 05        		.byte	0x5
 4485 03bf 2B        		.byte	0x2b
 4486 03c0 06        		.byte	0x6
 4487 03c1 0000 0096 		.long	0x96
 4488 03c5 0000 03D9 		.long	0x3d9
 4489 03c9 05        		.uleb128 0x5
 4490 03ca 0000 00B0 		.long	0xb0
 4491 03ce 05        		.uleb128 0x5
 4492 03cf 0000 00B0 		.long	0xb0
 4493 03d3 05        		.uleb128 0x5
 4494 03d4 0000 007C 		.long	0x7c
 4495 03d8 00        		.byte	0
 4496 03d9 0A        		.uleb128 0xa
 4497 03da 0000 0000 		.long	.LASF44
 4498 03de 05        		.byte	0x5
 4499 03df 24        		.byte	0x24
 4500 03e0 06        		.byte	0x6
 4501 03e1 0000 0096 		.long	0x96
 4502 03e5 0000 03F4 		.long	0x3f4
 4503 03e9 05        		.uleb128 0x5
 4504 03ea 0000 00B0 		.long	0xb0
 4505 03ee 05        		.uleb128 0x5
 4506 03ef 0000 00B0 		.long	0xb0
 4507 03f3 00        		.byte	0
 4508 03f4 0A        		.uleb128 0xa
 4509 03f5 0000 0000 		.long	.LASF45
 4510 03f9 04        		.byte	0x4
 4511 03fa 43        		.byte	0x43
 4512 03fb 05        		.byte	0x5
 4513 03fc 0000 0096 		.long	0x96
 4514 0400 0000 040A 		.long	0x40a
 4515 0404 05        		.uleb128 0x5
 4516 0405 0000 00EF 		.long	0xef
 4517 0409 00        		.byte	0
 4518 040a 1E        		.uleb128 0x1e
 4519 040b 0000 0000 		.long	.LASF67
 4520 040f 07        		.byte	0x7
 4521 0410 90        		.byte	0x90
 4522 0411 05        		.byte	0x5
 4523 0412 0000 0096 		.long	0x96
 4524 0416 14        		.uleb128 0x14
 4525 0417 5600      		.string	"V"
 4526 0419 23        		.byte	0x23
68K GAS  /tmp/ccdyPHKc.s 			page 109


 4527 041a 0000 0424 		.long	0x424
 4528 041e 05        		.uleb128 0x5
 4529 041f 0000 0096 		.long	0x96
 4530 0423 00        		.byte	0
 4531 0424 14        		.uleb128 0x14
 4532 0425 5000      		.string	"P"
 4533 0427 22        		.byte	0x22
 4534 0428 0000 0432 		.long	0x432
 4535 042c 05        		.uleb128 0x5
 4536 042d 0000 0096 		.long	0x96
 4537 0431 00        		.byte	0
 4538 0432 09        		.uleb128 0x9
 4539 0433 0000 0000 		.long	.LASF47
 4540 0437 0000 0096 		.long	0x96
 4541 043b 0000 0441 		.long	0x441
 4542 043f 07        		.uleb128 0x7
 4543 0440 00        		.byte	0
 4544 0441 0A        		.uleb128 0xa
 4545 0442 0000 0000 		.long	.LASF48
 4546 0446 05        		.byte	0x5
 4547 0447 29        		.byte	0x29
 4548 0448 09        		.byte	0x9
 4549 0449 0000 007C 		.long	0x7c
 4550 044d 0000 0457 		.long	0x457
 4551 0451 05        		.uleb128 0x5
 4552 0452 0000 00B0 		.long	0xb0
 4553 0456 00        		.byte	0
 4554 0457 0A        		.uleb128 0xa
 4555 0458 0000 0000 		.long	.LASF49
 4556 045c 06        		.byte	0x6
 4557 045d D8        		.byte	0xd8
 4558 045e 05        		.byte	0x5
 4559 045f 0000 0096 		.long	0x96
 4560 0463 0000 0477 		.long	0x477
 4561 0467 05        		.uleb128 0x5
 4562 0468 0000 009F 		.long	0x9f
 4563 046c 05        		.uleb128 0x5
 4564 046d 0000 00B0 		.long	0xb0
 4565 0471 05        		.uleb128 0x5
 4566 0472 0000 009D 		.long	0x9d
 4567 0476 00        		.byte	0
 4568 0477 0C        		.uleb128 0xc
 4569 0478 0000 0000 		.long	.LASF50
 4570 047c 0284      		.word	0x284
 4571 047e 0000 0000 		.long	.LFB8
 4572 0482 0000 003E 		.long	.LFE8-.LFB8
 4573 0486 01        		.uleb128 0x1
 4574 0487 9C        		.byte	0x9c
 4575 0488 0000 04CC 		.long	0x4cc
 4576 048c 01        		.uleb128 0x1
 4577 048d 0000 0000 		.long	.LVL183
 4578 0491 0000 03AD 		.long	0x3ad
 4579 0495 01        		.uleb128 0x1
 4580 0496 0000 0000 		.long	.LVL184
 4581 049a 0000 03A1 		.long	0x3a1
 4582 049e 01        		.uleb128 0x1
 4583 049f 0000 0000 		.long	.LVL185
68K GAS  /tmp/ccdyPHKc.s 			page 110


 4584 04a3 0000 04CC 		.long	0x4cc
 4585 04a7 01        		.uleb128 0x1
 4586 04a8 0000 0000 		.long	.LVL186
 4587 04ac 0000 038F 		.long	0x38f
 4588 04b0 01        		.uleb128 0x1
 4589 04b1 0000 0000 		.long	.LVL187
 4590 04b5 0000 038F 		.long	0x38f
 4591 04b9 01        		.uleb128 0x1
 4592 04ba 0000 0000 		.long	.LVL188
 4593 04be 0000 038F 		.long	0x38f
 4594 04c2 1F        		.uleb128 0x1f
 4595 04c3 0000 0000 		.long	.LVL189
 4596 04c7 0000 0383 		.long	0x383
 4597 04cb 00        		.byte	0
 4598 04cc 0C        		.uleb128 0xc
 4599 04cd 0000 0000 		.long	.LASF51
 4600 04d1 0235      		.word	0x235
 4601 04d3 0000 0000 		.long	.LFB7
 4602 04d7 0000 0464 		.long	.LFE7-.LFB7
 4603 04db 01        		.uleb128 0x1
 4604 04dc 9C        		.byte	0x9c
 4605 04dd 0000 0626 		.long	0x626
 4606 04e1 01        		.uleb128 0x1
 4607 04e2 0000 0000 		.long	.LVL147
 4608 04e6 0000 0BAD 		.long	0xbad
 4609 04ea 01        		.uleb128 0x1
 4610 04eb 0000 0000 		.long	.LVL148
 4611 04ef 0000 0BAD 		.long	0xbad
 4612 04f3 01        		.uleb128 0x1
 4613 04f4 0000 0000 		.long	.LVL149
 4614 04f8 0000 0BAD 		.long	0xbad
 4615 04fc 01        		.uleb128 0x1
 4616 04fd 0000 0000 		.long	.LVL150
 4617 0501 0000 0BAD 		.long	0xbad
 4618 0505 01        		.uleb128 0x1
 4619 0506 0000 0000 		.long	.LVL151
 4620 050a 0000 0BAD 		.long	0xbad
 4621 050e 01        		.uleb128 0x1
 4622 050f 0000 0000 		.long	.LVL152
 4623 0513 0000 0BAD 		.long	0xbad
 4624 0517 01        		.uleb128 0x1
 4625 0518 0000 0000 		.long	.LVL153
 4626 051c 0000 0BAD 		.long	0xbad
 4627 0520 01        		.uleb128 0x1
 4628 0521 0000 0000 		.long	.LVL154
 4629 0525 0000 0BAD 		.long	0xbad
 4630 0529 01        		.uleb128 0x1
 4631 052a 0000 0000 		.long	.LVL155
 4632 052e 0000 0BAD 		.long	0xbad
 4633 0532 01        		.uleb128 0x1
 4634 0533 0000 0000 		.long	.LVL156
 4635 0537 0000 0BAD 		.long	0xbad
 4636 053b 01        		.uleb128 0x1
 4637 053c 0000 0000 		.long	.LVL157
 4638 0540 0000 0BAD 		.long	0xbad
 4639 0544 01        		.uleb128 0x1
 4640 0545 0000 0000 		.long	.LVL158
68K GAS  /tmp/ccdyPHKc.s 			page 111


 4641 0549 0000 0BAD 		.long	0xbad
 4642 054d 01        		.uleb128 0x1
 4643 054e 0000 0000 		.long	.LVL159
 4644 0552 0000 0BAD 		.long	0xbad
 4645 0556 01        		.uleb128 0x1
 4646 0557 0000 0000 		.long	.LVL160
 4647 055b 0000 0BAD 		.long	0xbad
 4648 055f 01        		.uleb128 0x1
 4649 0560 0000 0000 		.long	.LVL161
 4650 0564 0000 0BAD 		.long	0xbad
 4651 0568 01        		.uleb128 0x1
 4652 0569 0000 0000 		.long	.LVL162
 4653 056d 0000 0BAD 		.long	0xbad
 4654 0571 01        		.uleb128 0x1
 4655 0572 0000 0000 		.long	.LVL163
 4656 0576 0000 0BAD 		.long	0xbad
 4657 057a 01        		.uleb128 0x1
 4658 057b 0000 0000 		.long	.LVL164
 4659 057f 0000 0BAD 		.long	0xbad
 4660 0583 01        		.uleb128 0x1
 4661 0584 0000 0000 		.long	.LVL165
 4662 0588 0000 0BAD 		.long	0xbad
 4663 058c 01        		.uleb128 0x1
 4664 058d 0000 0000 		.long	.LVL166
 4665 0591 0000 0BAD 		.long	0xbad
 4666 0595 01        		.uleb128 0x1
 4667 0596 0000 0000 		.long	.LVL167
 4668 059a 0000 0BAD 		.long	0xbad
 4669 059e 01        		.uleb128 0x1
 4670 059f 0000 0000 		.long	.LVL168
 4671 05a3 0000 0BAD 		.long	0xbad
 4672 05a7 01        		.uleb128 0x1
 4673 05a8 0000 0000 		.long	.LVL169
 4674 05ac 0000 0BAD 		.long	0xbad
 4675 05b0 01        		.uleb128 0x1
 4676 05b1 0000 0000 		.long	.LVL170
 4677 05b5 0000 0BAD 		.long	0xbad
 4678 05b9 01        		.uleb128 0x1
 4679 05ba 0000 0000 		.long	.LVL171
 4680 05be 0000 0BAD 		.long	0xbad
 4681 05c2 01        		.uleb128 0x1
 4682 05c3 0000 0000 		.long	.LVL172
 4683 05c7 0000 0BAD 		.long	0xbad
 4684 05cb 01        		.uleb128 0x1
 4685 05cc 0000 0000 		.long	.LVL173
 4686 05d0 0000 0BAD 		.long	0xbad
 4687 05d4 01        		.uleb128 0x1
 4688 05d5 0000 0000 		.long	.LVL174
 4689 05d9 0000 0BAD 		.long	0xbad
 4690 05dd 01        		.uleb128 0x1
 4691 05de 0000 0000 		.long	.LVL175
 4692 05e2 0000 0BAD 		.long	0xbad
 4693 05e6 01        		.uleb128 0x1
 4694 05e7 0000 0000 		.long	.LVL176
 4695 05eb 0000 0BAD 		.long	0xbad
 4696 05ef 01        		.uleb128 0x1
 4697 05f0 0000 0000 		.long	.LVL177
68K GAS  /tmp/ccdyPHKc.s 			page 112


 4698 05f4 0000 0BAD 		.long	0xbad
 4699 05f8 01        		.uleb128 0x1
 4700 05f9 0000 0000 		.long	.LVL178
 4701 05fd 0000 0BAD 		.long	0xbad
 4702 0601 01        		.uleb128 0x1
 4703 0602 0000 0000 		.long	.LVL179
 4704 0606 0000 0BAD 		.long	0xbad
 4705 060a 01        		.uleb128 0x1
 4706 060b 0000 0000 		.long	.LVL180
 4707 060f 0000 0BAD 		.long	0xbad
 4708 0613 01        		.uleb128 0x1
 4709 0614 0000 0000 		.long	.LVL181
 4710 0618 0000 0BAD 		.long	0xbad
 4711 061c 01        		.uleb128 0x1
 4712 061d 0000 0000 		.long	.LVL182
 4713 0621 0000 0BAD 		.long	0xbad
 4714 0625 00        		.byte	0
 4715 0626 0C        		.uleb128 0xc
 4716 0627 0000 0000 		.long	.LASF52
 4717 062b 0193      		.word	0x193
 4718 062d 0000 0000 		.long	.LFB6
 4719 0631 0000 0B94 		.long	.LFE6-.LFB6
 4720 0635 01        		.uleb128 0x1
 4721 0636 9C        		.byte	0x9c
 4722 0637 0000 08EF 		.long	0x8ef
 4723 063b 0F        		.uleb128 0xf
 4724 063c 0000 0000 		.long	.LASF53
 4725 0640 0195      		.word	0x195
 4726 0642 0A        		.byte	0xa
 4727 0643 0000 00DF 		.long	0xdf
 4728 0647 02        		.uleb128 0x2
 4729 0648 91        		.byte	0x91
 4730 0649 78        		.sleb128 -8
 4731 064a 0F        		.uleb128 0xf
 4732 064b 0000 0000 		.long	.LASF54
 4733 064f 0196      		.word	0x196
 4734 0651 0A        		.byte	0xa
 4735 0652 0000 00DF 		.long	0xdf
 4736 0656 02        		.uleb128 0x2
 4737 0657 91        		.byte	0x91
 4738 0658 7A        		.sleb128 -6
 4739 0659 20        		.uleb128 0x20
 4740 065a 0000 0000 		.long	.LASF61
 4741 065e 01        		.byte	0x1
 4742 065f 0197      		.word	0x197
 4743 0661 09        		.byte	0x9
 4744 0662 0000 0096 		.long	0x96
 4745 0666 0B        		.uleb128 0xb
 4746 0667 0000 0000 		.long	.LBB5
 4747 066b 0000 004E 		.long	.LBE5-.LBB5
 4748 066f 0000 068C 		.long	0x68c
 4749 0673 09        		.uleb128 0x9
 4750 0674 0000 0000 		.long	.LASF47
 4751 0678 0000 0096 		.long	0x96
 4752 067c 0000 0682 		.long	0x682
 4753 0680 07        		.uleb128 0x7
 4754 0681 00        		.byte	0
68K GAS  /tmp/ccdyPHKc.s 			page 113


 4755 0682 01        		.uleb128 0x1
 4756 0683 0000 0000 		.long	.LVL97
 4757 0687 0000 0432 		.long	0x432
 4758 068b 00        		.byte	0
 4759 068c 15        		.uleb128 0x15
 4760 068d 0000 0000 		.long	.LLRL10
 4761 0691 0000 0786 		.long	0x786
 4762 0695 09        		.uleb128 0x9
 4763 0696 0000 0000 		.long	.LASF47
 4764 069a 0000 0096 		.long	0x96
 4765 069e 0000 06A4 		.long	0x6a4
 4766 06a2 07        		.uleb128 0x7
 4767 06a3 00        		.byte	0
 4768 06a4 01        		.uleb128 0x1
 4769 06a5 0000 0000 		.long	.LVL114
 4770 06a9 0000 0BAD 		.long	0xbad
 4771 06ad 01        		.uleb128 0x1
 4772 06ae 0000 0000 		.long	.LVL115
 4773 06b2 0000 0BAD 		.long	0xbad
 4774 06b6 01        		.uleb128 0x1
 4775 06b7 0000 0000 		.long	.LVL116
 4776 06bb 0000 0BAD 		.long	0xbad
 4777 06bf 01        		.uleb128 0x1
 4778 06c0 0000 0000 		.long	.LVL117
 4779 06c4 0000 0C78 		.long	0xc78
 4780 06c8 01        		.uleb128 0x1
 4781 06c9 0000 0000 		.long	.LVL118
 4782 06cd 0000 0432 		.long	0x432
 4783 06d1 01        		.uleb128 0x1
 4784 06d2 0000 0000 		.long	.LVL119
 4785 06d6 0000 0432 		.long	0x432
 4786 06da 01        		.uleb128 0x1
 4787 06db 0000 0000 		.long	.LVL120
 4788 06df 0000 0BAD 		.long	0xbad
 4789 06e3 01        		.uleb128 0x1
 4790 06e4 0000 0000 		.long	.LVL121
 4791 06e8 0000 0432 		.long	0x432
 4792 06ec 01        		.uleb128 0x1
 4793 06ed 0000 0000 		.long	.LVL122
 4794 06f1 0000 0432 		.long	0x432
 4795 06f5 01        		.uleb128 0x1
 4796 06f6 0000 0000 		.long	.LVL123
 4797 06fa 0000 0BAD 		.long	0xbad
 4798 06fe 01        		.uleb128 0x1
 4799 06ff 0000 0000 		.long	.LVL124
 4800 0703 0000 0BAD 		.long	0xbad
 4801 0707 01        		.uleb128 0x1
 4802 0708 0000 0000 		.long	.LVL125
 4803 070c 0000 0BAD 		.long	0xbad
 4804 0710 01        		.uleb128 0x1
 4805 0711 0000 0000 		.long	.LVL126
 4806 0715 0000 0BAD 		.long	0xbad
 4807 0719 01        		.uleb128 0x1
 4808 071a 0000 0000 		.long	.LVL127
 4809 071e 0000 0BAD 		.long	0xbad
 4810 0722 01        		.uleb128 0x1
 4811 0723 0000 0000 		.long	.LVL128
68K GAS  /tmp/ccdyPHKc.s 			page 114


 4812 0727 0000 0BAD 		.long	0xbad
 4813 072b 01        		.uleb128 0x1
 4814 072c 0000 0000 		.long	.LVL129
 4815 0730 0000 0BAD 		.long	0xbad
 4816 0734 01        		.uleb128 0x1
 4817 0735 0000 0000 		.long	.LVL130
 4818 0739 0000 0BAD 		.long	0xbad
 4819 073d 01        		.uleb128 0x1
 4820 073e 0000 0000 		.long	.LVL134
 4821 0742 0000 0BAD 		.long	0xbad
 4822 0746 01        		.uleb128 0x1
 4823 0747 0000 0000 		.long	.LVL135
 4824 074b 0000 0BAD 		.long	0xbad
 4825 074f 01        		.uleb128 0x1
 4826 0750 0000 0000 		.long	.LVL136
 4827 0754 0000 0BAD 		.long	0xbad
 4828 0758 01        		.uleb128 0x1
 4829 0759 0000 0000 		.long	.LVL137
 4830 075d 0000 0BAD 		.long	0xbad
 4831 0761 01        		.uleb128 0x1
 4832 0762 0000 0000 		.long	.LVL138
 4833 0766 0000 0BAD 		.long	0xbad
 4834 076a 01        		.uleb128 0x1
 4835 076b 0000 0000 		.long	.LVL139
 4836 076f 0000 0BAD 		.long	0xbad
 4837 0773 01        		.uleb128 0x1
 4838 0774 0000 0000 		.long	.LVL140
 4839 0778 0000 0BAD 		.long	0xbad
 4840 077c 01        		.uleb128 0x1
 4841 077d 0000 0000 		.long	.LVL141
 4842 0781 0000 0BAD 		.long	0xbad
 4843 0785 00        		.byte	0
 4844 0786 0B        		.uleb128 0xb
 4845 0787 0000 0000 		.long	.LBB7
 4846 078b 0000 0156 		.long	.LBE7-.LBB7
 4847 078f 0000 07D9 		.long	0x7d9
 4848 0793 09        		.uleb128 0x9
 4849 0794 0000 0000 		.long	.LASF47
 4850 0798 0000 0096 		.long	0x96
 4851 079c 0000 07A2 		.long	0x7a2
 4852 07a0 07        		.uleb128 0x7
 4853 07a1 00        		.byte	0
 4854 07a2 01        		.uleb128 0x1
 4855 07a3 0000 0000 		.long	.LVL107
 4856 07a7 0000 0432 		.long	0x432
 4857 07ab 01        		.uleb128 0x1
 4858 07ac 0000 0000 		.long	.LVL108
 4859 07b0 0000 0BAD 		.long	0xbad
 4860 07b4 01        		.uleb128 0x1
 4861 07b5 0000 0000 		.long	.LVL109
 4862 07b9 0000 0BAD 		.long	0xbad
 4863 07bd 01        		.uleb128 0x1
 4864 07be 0000 0000 		.long	.LVL110
 4865 07c2 0000 0BAD 		.long	0xbad
 4866 07c6 01        		.uleb128 0x1
 4867 07c7 0000 0000 		.long	.LVL111
 4868 07cb 0000 0BAD 		.long	0xbad
68K GAS  /tmp/ccdyPHKc.s 			page 115


 4869 07cf 01        		.uleb128 0x1
 4870 07d0 0000 0000 		.long	.LVL112
 4871 07d4 0000 0BAD 		.long	0xbad
 4872 07d8 00        		.byte	0
 4873 07d9 15        		.uleb128 0x15
 4874 07da 0000 0000 		.long	.LLRL9
 4875 07de 0000 0804 		.long	0x804
 4876 07e2 09        		.uleb128 0x9
 4877 07e3 0000 0000 		.long	.LASF47
 4878 07e7 0000 0096 		.long	0x96
 4879 07eb 0000 07F1 		.long	0x7f1
 4880 07ef 07        		.uleb128 0x7
 4881 07f0 00        		.byte	0
 4882 07f1 01        		.uleb128 0x1
 4883 07f2 0000 0000 		.long	.LVL106
 4884 07f6 0000 0432 		.long	0x432
 4885 07fa 01        		.uleb128 0x1
 4886 07fb 0000 0000 		.long	.LVL113
 4887 07ff 0000 0432 		.long	0x432
 4888 0803 00        		.byte	0
 4889 0804 01        		.uleb128 0x1
 4890 0805 0000 0000 		.long	.LVL87
 4891 0809 0000 0424 		.long	0x424
 4892 080d 01        		.uleb128 0x1
 4893 080e 0000 0000 		.long	.LVL88
 4894 0812 0000 0424 		.long	0x424
 4895 0816 01        		.uleb128 0x1
 4896 0817 0000 0000 		.long	.LVL89
 4897 081b 0000 040A 		.long	0x40a
 4898 081f 01        		.uleb128 0x1
 4899 0820 0000 0000 		.long	.LVL90
 4900 0824 0000 0416 		.long	0x416
 4901 0828 01        		.uleb128 0x1
 4902 0829 0000 0000 		.long	.LVL91
 4903 082d 0000 0416 		.long	0x416
 4904 0831 01        		.uleb128 0x1
 4905 0832 0000 0000 		.long	.LVL92
 4906 0836 0000 0424 		.long	0x424
 4907 083a 01        		.uleb128 0x1
 4908 083b 0000 0000 		.long	.LVL93
 4909 083f 0000 0424 		.long	0x424
 4910 0843 01        		.uleb128 0x1
 4911 0844 0000 0000 		.long	.LVL94
 4912 0848 0000 040A 		.long	0x40a
 4913 084c 01        		.uleb128 0x1
 4914 084d 0000 0000 		.long	.LVL95
 4915 0851 0000 03F4 		.long	0x3f4
 4916 0855 01        		.uleb128 0x1
 4917 0856 0000 0000 		.long	.LVL96
 4918 085a 0000 0BAD 		.long	0xbad
 4919 085e 01        		.uleb128 0x1
 4920 085f 0000 0000 		.long	.LVL98
 4921 0863 0000 0BAD 		.long	0xbad
 4922 0867 01        		.uleb128 0x1
 4923 0868 0000 0000 		.long	.LVL99
 4924 086c 0000 0BAD 		.long	0xbad
 4925 0870 01        		.uleb128 0x1
68K GAS  /tmp/ccdyPHKc.s 			page 116


 4926 0871 0000 0000 		.long	.LVL100
 4927 0875 0000 0BAD 		.long	0xbad
 4928 0879 01        		.uleb128 0x1
 4929 087a 0000 0000 		.long	.LVL101
 4930 087e 0000 0BAD 		.long	0xbad
 4931 0882 01        		.uleb128 0x1
 4932 0883 0000 0000 		.long	.LVL102
 4933 0887 0000 0BAD 		.long	0xbad
 4934 088b 01        		.uleb128 0x1
 4935 088c 0000 0000 		.long	.LVL103
 4936 0890 0000 0BAD 		.long	0xbad
 4937 0894 01        		.uleb128 0x1
 4938 0895 0000 0000 		.long	.LVL104
 4939 0899 0000 0BAD 		.long	0xbad
 4940 089d 01        		.uleb128 0x1
 4941 089e 0000 0000 		.long	.LVL105
 4942 08a2 0000 0BAD 		.long	0xbad
 4943 08a6 01        		.uleb128 0x1
 4944 08a7 0000 0000 		.long	.LVL131
 4945 08ab 0000 0BAD 		.long	0xbad
 4946 08af 01        		.uleb128 0x1
 4947 08b0 0000 0000 		.long	.LVL132
 4948 08b4 0000 0BAD 		.long	0xbad
 4949 08b8 01        		.uleb128 0x1
 4950 08b9 0000 0000 		.long	.LVL133
 4951 08bd 0000 0BAD 		.long	0xbad
 4952 08c1 01        		.uleb128 0x1
 4953 08c2 0000 0000 		.long	.LVL142
 4954 08c6 0000 0BAD 		.long	0xbad
 4955 08ca 01        		.uleb128 0x1
 4956 08cb 0000 0000 		.long	.LVL143
 4957 08cf 0000 0BAD 		.long	0xbad
 4958 08d3 01        		.uleb128 0x1
 4959 08d4 0000 0000 		.long	.LVL144
 4960 08d8 0000 0BAD 		.long	0xbad
 4961 08dc 01        		.uleb128 0x1
 4962 08dd 0000 0000 		.long	.LVL145
 4963 08e1 0000 0BAD 		.long	0xbad
 4964 08e5 01        		.uleb128 0x1
 4965 08e6 0000 0000 		.long	.LVL146
 4966 08ea 0000 0BAD 		.long	0xbad
 4967 08ee 00        		.byte	0
 4968 08ef 0C        		.uleb128 0xc
 4969 08f0 0000 0000 		.long	.LASF55
 4970 08f4 0116      		.word	0x116
 4971 08f6 0000 0000 		.long	.LFB5
 4972 08fa 0000 08CA 		.long	.LFE5-.LFB5
 4973 08fe 01        		.uleb128 0x1
 4974 08ff 9C        		.byte	0x9c
 4975 0900 0000 0A88 		.long	0xa88
 4976 0904 0F        		.uleb128 0xf
 4977 0905 0000 0000 		.long	.LASF56
 4978 0909 0118      		.word	0x118
 4979 090b 09        		.byte	0x9
 4980 090c 0000 0165 		.long	0x165
 4981 0910 02        		.uleb128 0x2
 4982 0911 91        		.byte	0x91
68K GAS  /tmp/ccdyPHKc.s 			page 117


 4983 0912 74        		.sleb128 -12
 4984 0913 21        		.uleb128 0x21
 4985 0914 0000 0000 		.long	.LASF57
 4986 0918 01        		.byte	0x1
 4987 0919 0119      		.word	0x119
 4988 091b 09        		.byte	0x9
 4989 091c 0000 0096 		.long	0x96
 4990 0920 0000 0000 		.long	.LLST8
 4991 0924 0000 0000 		.long	.LVUS8
 4992 0928 0B        		.uleb128 0xb
 4993 0929 0000 0000 		.long	.LBB4
 4994 092d 0000 0010 		.long	.LBE4-.LBB4
 4995 0931 0000 094E 		.long	0x94e
 4996 0935 09        		.uleb128 0x9
 4997 0936 0000 0000 		.long	.LASF47
 4998 093a 0000 0096 		.long	0x96
 4999 093e 0000 0944 		.long	0x944
 5000 0942 07        		.uleb128 0x7
 5001 0943 00        		.byte	0
 5002 0944 01        		.uleb128 0x1
 5003 0945 0000 0000 		.long	.LVL86
 5004 0949 0000 0432 		.long	0x432
 5005 094d 00        		.byte	0
 5006 094e 01        		.uleb128 0x1
 5007 094f 0000 0000 		.long	.LVL49
 5008 0953 0000 0424 		.long	0x424
 5009 0957 01        		.uleb128 0x1
 5010 0958 0000 0000 		.long	.LVL50
 5011 095c 0000 0424 		.long	0x424
 5012 0960 01        		.uleb128 0x1
 5013 0961 0000 0000 		.long	.LVL51
 5014 0965 0000 040A 		.long	0x40a
 5015 0969 16        		.uleb128 0x16
 5016 096a 0000 0000 		.long	.LVL52
 5017 096e 02        		.uleb128 0x2
 5018 096f 74        		.byte	0x74
 5019 0970 00        		.sleb128 0
 5020 0971 01        		.uleb128 0x1
 5021 0972 0000 0000 		.long	.LVL54
 5022 0976 0000 0416 		.long	0x416
 5023 097a 01        		.uleb128 0x1
 5024 097b 0000 0000 		.long	.LVL55
 5025 097f 0000 0416 		.long	0x416
 5026 0983 01        		.uleb128 0x1
 5027 0984 0000 0000 		.long	.LVL56
 5028 0988 0000 0424 		.long	0x424
 5029 098c 01        		.uleb128 0x1
 5030 098d 0000 0000 		.long	.LVL57
 5031 0991 0000 0424 		.long	0x424
 5032 0995 01        		.uleb128 0x1
 5033 0996 0000 0000 		.long	.LVL58
 5034 099a 0000 040A 		.long	0x40a
 5035 099e 16        		.uleb128 0x16
 5036 099f 0000 0000 		.long	.LVL59
 5037 09a3 02        		.uleb128 0x2
 5038 09a4 74        		.byte	0x74
 5039 09a5 00        		.sleb128 0
68K GAS  /tmp/ccdyPHKc.s 			page 118


 5040 09a6 01        		.uleb128 0x1
 5041 09a7 0000 0000 		.long	.LVL61
 5042 09ab 0000 0BAD 		.long	0xbad
 5043 09af 01        		.uleb128 0x1
 5044 09b0 0000 0000 		.long	.LVL62
 5045 09b4 0000 0BAD 		.long	0xbad
 5046 09b8 01        		.uleb128 0x1
 5047 09b9 0000 0000 		.long	.LVL63
 5048 09bd 0000 0BAD 		.long	0xbad
 5049 09c1 01        		.uleb128 0x1
 5050 09c2 0000 0000 		.long	.LVL64
 5051 09c6 0000 0BAD 		.long	0xbad
 5052 09ca 01        		.uleb128 0x1
 5053 09cb 0000 0000 		.long	.LVL65
 5054 09cf 0000 0BAD 		.long	0xbad
 5055 09d3 01        		.uleb128 0x1
 5056 09d4 0000 0000 		.long	.LVL66
 5057 09d8 0000 03F4 		.long	0x3f4
 5058 09dc 01        		.uleb128 0x1
 5059 09dd 0000 0000 		.long	.LVL67
 5060 09e1 0000 0BAD 		.long	0xbad
 5061 09e5 01        		.uleb128 0x1
 5062 09e6 0000 0000 		.long	.LVL68
 5063 09ea 0000 0BAD 		.long	0xbad
 5064 09ee 01        		.uleb128 0x1
 5065 09ef 0000 0000 		.long	.LVL69
 5066 09f3 0000 0BAD 		.long	0xbad
 5067 09f7 01        		.uleb128 0x1
 5068 09f8 0000 0000 		.long	.LVL70
 5069 09fc 0000 0BAD 		.long	0xbad
 5070 0a00 01        		.uleb128 0x1
 5071 0a01 0000 0000 		.long	.LVL71
 5072 0a05 0000 0BAD 		.long	0xbad
 5073 0a09 01        		.uleb128 0x1
 5074 0a0a 0000 0000 		.long	.LVL72
 5075 0a0e 0000 0BAD 		.long	0xbad
 5076 0a12 01        		.uleb128 0x1
 5077 0a13 0000 0000 		.long	.LVL73
 5078 0a17 0000 0BAD 		.long	0xbad
 5079 0a1b 01        		.uleb128 0x1
 5080 0a1c 0000 0000 		.long	.LVL74
 5081 0a20 0000 0BAD 		.long	0xbad
 5082 0a24 01        		.uleb128 0x1
 5083 0a25 0000 0000 		.long	.LVL75
 5084 0a29 0000 0BAD 		.long	0xbad
 5085 0a2d 01        		.uleb128 0x1
 5086 0a2e 0000 0000 		.long	.LVL76
 5087 0a32 0000 0BAD 		.long	0xbad
 5088 0a36 01        		.uleb128 0x1
 5089 0a37 0000 0000 		.long	.LVL77
 5090 0a3b 0000 0BAD 		.long	0xbad
 5091 0a3f 01        		.uleb128 0x1
 5092 0a40 0000 0000 		.long	.LVL78
 5093 0a44 0000 0BAD 		.long	0xbad
 5094 0a48 01        		.uleb128 0x1
 5095 0a49 0000 0000 		.long	.LVL79
 5096 0a4d 0000 03B9 		.long	0x3b9
68K GAS  /tmp/ccdyPHKc.s 			page 119


 5097 0a51 01        		.uleb128 0x1
 5098 0a52 0000 0000 		.long	.LVL80
 5099 0a56 0000 0BAD 		.long	0xbad
 5100 0a5a 01        		.uleb128 0x1
 5101 0a5b 0000 0000 		.long	.LVL81
 5102 0a5f 0000 0BAD 		.long	0xbad
 5103 0a63 01        		.uleb128 0x1
 5104 0a64 0000 0000 		.long	.LVL82
 5105 0a68 0000 0BAD 		.long	0xbad
 5106 0a6c 01        		.uleb128 0x1
 5107 0a6d 0000 0000 		.long	.LVL83
 5108 0a71 0000 0BAD 		.long	0xbad
 5109 0a75 01        		.uleb128 0x1
 5110 0a76 0000 0000 		.long	.LVL84
 5111 0a7a 0000 0BAD 		.long	0xbad
 5112 0a7e 01        		.uleb128 0x1
 5113 0a7f 0000 0000 		.long	.LVL85
 5114 0a83 0000 0BAD 		.long	0xbad
 5115 0a87 00        		.byte	0
 5116 0a88 22        		.uleb128 0x22
 5117 0a89 0000 0000 		.long	.LASF58
 5118 0a8d 01        		.byte	0x1
 5119 0a8e E2        		.byte	0xe2
 5120 0a8f 06        		.byte	0x6
 5121 0a90 0000 0000 		.long	.LFB4
 5122 0a94 0000 01FC 		.long	.LFE4-.LFB4
 5123 0a98 01        		.uleb128 0x1
 5124 0a99 9C        		.byte	0x9c
 5125 0a9a 0000 0BAD 		.long	0xbad
 5126 0a9e 10        		.uleb128 0x10
 5127 0a9f 6872 00   		.string	"hr"
 5128 0aa2 12        		.byte	0x12
 5129 0aa3 0000 008F 		.long	0x8f
 5130 0aa7 0000 0000 		.long	.LLST4
 5131 0aab 0000 0000 		.long	.LVUS4
 5132 0aaf 10        		.uleb128 0x10
 5133 0ab0 6D69 6E00 		.string	"min"
 5134 0ab4 1A        		.byte	0x1a
 5135 0ab5 0000 008F 		.long	0x8f
 5136 0ab9 0000 0000 		.long	.LLST5
 5137 0abd 0000 0000 		.long	.LVUS5
 5138 0ac1 10        		.uleb128 0x10
 5139 0ac2 7365 6300 		.string	"sec"
 5140 0ac6 23        		.byte	0x23
 5141 0ac7 0000 008F 		.long	0x8f
 5142 0acb 0000 0000 		.long	.LLST6
 5143 0acf 0000 0000 		.long	.LVUS6
 5144 0ad3 17        		.uleb128 0x17
 5145 0ad4 0000 0000 		.long	.LASF59
 5146 0ad8 E5        		.byte	0xe5
 5147 0ad9 2C        		.byte	0x2c
 5148 0ada 0000 008F 		.long	0x8f
 5149 0ade 0000 0000 		.long	.LLST7
 5150 0ae2 0000 0000 		.long	.LVUS7
 5151 0ae6 01        		.uleb128 0x1
 5152 0ae7 0000 0000 		.long	.LVL18
 5153 0aeb 0000 0424 		.long	0x424
68K GAS  /tmp/ccdyPHKc.s 			page 120


 5154 0aef 01        		.uleb128 0x1
 5155 0af0 0000 0000 		.long	.LVL19
 5156 0af4 0000 0424 		.long	0x424
 5157 0af8 01        		.uleb128 0x1
 5158 0af9 0000 0000 		.long	.LVL22
 5159 0afd 0000 0BAD 		.long	0xbad
 5160 0b01 01        		.uleb128 0x1
 5161 0b02 0000 0000 		.long	.LVL23
 5162 0b06 0000 0BAD 		.long	0xbad
 5163 0b0a 01        		.uleb128 0x1
 5164 0b0b 0000 0000 		.long	.LVL24
 5165 0b0f 0000 0BAD 		.long	0xbad
 5166 0b13 01        		.uleb128 0x1
 5167 0b14 0000 0000 		.long	.LVL25
 5168 0b18 0000 0BAD 		.long	0xbad
 5169 0b1c 01        		.uleb128 0x1
 5170 0b1d 0000 0000 		.long	.LVL26
 5171 0b21 0000 0BAD 		.long	0xbad
 5172 0b25 01        		.uleb128 0x1
 5173 0b26 0000 0000 		.long	.LVL27
 5174 0b2a 0000 0BAD 		.long	0xbad
 5175 0b2e 01        		.uleb128 0x1
 5176 0b2f 0000 0000 		.long	.LVL29
 5177 0b33 0000 0416 		.long	0x416
 5178 0b37 01        		.uleb128 0x1
 5179 0b38 0000 0000 		.long	.LVL30
 5180 0b3c 0000 0416 		.long	0x416
 5181 0b40 01        		.uleb128 0x1
 5182 0b41 0000 0000 		.long	.LVL34
 5183 0b45 0000 0BAD 		.long	0xbad
 5184 0b49 01        		.uleb128 0x1
 5185 0b4a 0000 0000 		.long	.LVL35
 5186 0b4e 0000 0BAD 		.long	0xbad
 5187 0b52 01        		.uleb128 0x1
 5188 0b53 0000 0000 		.long	.LVL36
 5189 0b57 0000 0BAD 		.long	0xbad
 5190 0b5b 01        		.uleb128 0x1
 5191 0b5c 0000 0000 		.long	.LVL37
 5192 0b60 0000 0BAD 		.long	0xbad
 5193 0b64 01        		.uleb128 0x1
 5194 0b65 0000 0000 		.long	.LVL38
 5195 0b69 0000 0BAD 		.long	0xbad
 5196 0b6d 01        		.uleb128 0x1
 5197 0b6e 0000 0000 		.long	.LVL39
 5198 0b72 0000 0BAD 		.long	0xbad
 5199 0b76 01        		.uleb128 0x1
 5200 0b77 0000 0000 		.long	.LVL43
 5201 0b7b 0000 0BAD 		.long	0xbad
 5202 0b7f 01        		.uleb128 0x1
 5203 0b80 0000 0000 		.long	.LVL44
 5204 0b84 0000 0BAD 		.long	0xbad
 5205 0b88 01        		.uleb128 0x1
 5206 0b89 0000 0000 		.long	.LVL45
 5207 0b8d 0000 0BAD 		.long	0xbad
 5208 0b91 01        		.uleb128 0x1
 5209 0b92 0000 0000 		.long	.LVL46
 5210 0b96 0000 0BAD 		.long	0xbad
68K GAS  /tmp/ccdyPHKc.s 			page 121


 5211 0b9a 01        		.uleb128 0x1
 5212 0b9b 0000 0000 		.long	.LVL47
 5213 0b9f 0000 0BAD 		.long	0xbad
 5214 0ba3 01        		.uleb128 0x1
 5215 0ba4 0000 0000 		.long	.LVL48
 5216 0ba8 0000 0BAD 		.long	0xbad
 5217 0bac 00        		.byte	0
 5218 0bad 23        		.uleb128 0x23
 5219 0bae 0000 0000 		.long	.LASF68
 5220 0bb2 01        		.byte	0x1
 5221 0bb3 C6        		.byte	0xc6
 5222 0bb4 06        		.byte	0x6
 5223 0bb5 0000 0000 		.long	.LFB3
 5224 0bb9 0000 0084 		.long	.LFE3-.LFB3
 5225 0bbd 01        		.uleb128 0x1
 5226 0bbe 9C        		.byte	0x9c
 5227 0bbf 0000 0C78 		.long	0xc78
 5228 0bc3 11        		.uleb128 0x11
 5229 0bc4 6368 3000 		.string	"ch0"
 5230 0bc8 1D        		.byte	0x1d
 5231 0bc9 0000 00F6 		.long	0xf6
 5232 0bcd 0000 0000 		.long	.LLST0
 5233 0bd1 0000 0000 		.long	.LVUS0
 5234 0bd5 11        		.uleb128 0x11
 5235 0bd6 6368 3100 		.string	"ch1"
 5236 0bda 2D        		.byte	0x2d
 5237 0bdb 0000 00F6 		.long	0xf6
 5238 0bdf 0000 0000 		.long	.LLST1
 5239 0be3 0000 0000 		.long	.LVUS1
 5240 0be7 11        		.uleb128 0x11
 5241 0be8 666D 7400 		.string	"fmt"
 5242 0bec 3E        		.byte	0x3e
 5243 0bed 0000 00B0 		.long	0xb0
 5244 0bf1 0000 0000 		.long	.LLST2
 5245 0bf5 0000 0000 		.long	.LVUS2
 5246 0bf9 07        		.uleb128 0x7
 5247 0bfa 17        		.uleb128 0x17
 5248 0bfb 0000 0000 		.long	.LASF60
 5249 0bff C9        		.byte	0xc9
 5250 0c00 09        		.byte	0x9
 5251 0c01 0000 0096 		.long	0x96
 5252 0c05 0000 0000 		.long	.LLST3
 5253 0c09 0000 0000 		.long	.LVUS3
 5254 0c0d 24        		.uleb128 0x24
 5255 0c0e 0000 0000 		.long	.LASF62
 5256 0c12 01        		.byte	0x1
 5257 0c13 CC        		.byte	0xcc
 5258 0c14 0D        		.byte	0xd
 5259 0c15 0000 0038 		.long	0x38
 5260 0c19 0B        		.uleb128 0xb
 5261 0c1a 0000 0000 		.long	.LBB3
 5262 0c1e 0000 0016 		.long	.LBE3-.LBB3
 5263 0c22 0000 0C3F 		.long	0xc3f
 5264 0c26 09        		.uleb128 0x9
 5265 0c27 0000 0000 		.long	.LASF47
 5266 0c2b 0000 0096 		.long	0x96
 5267 0c2f 0000 0C35 		.long	0xc35
68K GAS  /tmp/ccdyPHKc.s 			page 122


 5268 0c33 07        		.uleb128 0x7
 5269 0c34 00        		.byte	0
 5270 0c35 01        		.uleb128 0x1
 5271 0c36 0000 0000 		.long	.LVL15
 5272 0c3a 0000 0432 		.long	0x432
 5273 0c3e 00        		.byte	0
 5274 0c3f 0B        		.uleb128 0xb
 5275 0c40 0000 0000 		.long	.LBB2
 5276 0c44 0000 0016 		.long	.LBE2-.LBB2
 5277 0c48 0000 0C65 		.long	0xc65
 5278 0c4c 09        		.uleb128 0x9
 5279 0c4d 0000 0000 		.long	.LASF47
 5280 0c51 0000 0096 		.long	0x96
 5281 0c55 0000 0C5B 		.long	0xc5b
 5282 0c59 07        		.uleb128 0x7
 5283 0c5a 00        		.byte	0
 5284 0c5b 01        		.uleb128 0x1
 5285 0c5c 0000 0000 		.long	.LVL11
 5286 0c60 0000 0432 		.long	0x432
 5287 0c64 00        		.byte	0
 5288 0c65 01        		.uleb128 0x1
 5289 0c66 0000 0000 		.long	.LVL4
 5290 0c6a 0000 0457 		.long	0x457
 5291 0c6e 01        		.uleb128 0x1
 5292 0c6f 0000 0000 		.long	.LVL5
 5293 0c73 0000 0441 		.long	0x441
 5294 0c77 00        		.byte	0
 5295 0c78 25        		.uleb128 0x25
 5296 0c79 0000 0000 		.long	.LASF69
 5297 0c7d 0000 0000 		.long	.LASF70
 5298 0c81 08        		.byte	0x8
 5299 0c82 00        		.byte	0
 5300 0c83 00        		.byte	0
 5301               		.section	.debug_abbrev,"",@progbits
 5302               	.Ldebug_abbrev0:
 5303 0000 01        		.uleb128 0x1
 5304 0001 48        		.uleb128 0x48
 5305 0002 00        		.byte	0
 5306 0003 7D        		.uleb128 0x7d
 5307 0004 01        		.uleb128 0x1
 5308 0005 7F        		.uleb128 0x7f
 5309 0006 13        		.uleb128 0x13
 5310 0007 00        		.byte	0
 5311 0008 00        		.byte	0
 5312 0009 02        		.uleb128 0x2
 5313 000a 34        		.uleb128 0x34
 5314 000b 00        		.byte	0
 5315 000c 03        		.uleb128 0x3
 5316 000d 0E        		.uleb128 0xe
 5317 000e 3A        		.uleb128 0x3a
 5318 000f 21        		.uleb128 0x21
 5319 0010 01        		.sleb128 1
 5320 0011 3B        		.uleb128 0x3b
 5321 0012 0B        		.uleb128 0xb
 5322 0013 39        		.uleb128 0x39
 5323 0014 0B        		.uleb128 0xb
 5324 0015 49        		.uleb128 0x49
68K GAS  /tmp/ccdyPHKc.s 			page 123


 5325 0016 13        		.uleb128 0x13
 5326 0017 3F        		.uleb128 0x3f
 5327 0018 19        		.uleb128 0x19
 5328 0019 02        		.uleb128 0x2
 5329 001a 18        		.uleb128 0x18
 5330 001b 00        		.byte	0
 5331 001c 00        		.byte	0
 5332 001d 03        		.uleb128 0x3
 5333 001e 21        		.uleb128 0x21
 5334 001f 00        		.byte	0
 5335 0020 49        		.uleb128 0x49
 5336 0021 13        		.uleb128 0x13
 5337 0022 2F        		.uleb128 0x2f
 5338 0023 0B        		.uleb128 0xb
 5339 0024 00        		.byte	0
 5340 0025 00        		.byte	0
 5341 0026 04        		.uleb128 0x4
 5342 0027 01        		.uleb128 0x1
 5343 0028 01        		.byte	0x1
 5344 0029 49        		.uleb128 0x49
 5345 002a 13        		.uleb128 0x13
 5346 002b 01        		.uleb128 0x1
 5347 002c 13        		.uleb128 0x13
 5348 002d 00        		.byte	0
 5349 002e 00        		.byte	0
 5350 002f 05        		.uleb128 0x5
 5351 0030 05        		.uleb128 0x5
 5352 0031 00        		.byte	0
 5353 0032 49        		.uleb128 0x49
 5354 0033 13        		.uleb128 0x13
 5355 0034 00        		.byte	0
 5356 0035 00        		.byte	0
 5357 0036 06        		.uleb128 0x6
 5358 0037 24        		.uleb128 0x24
 5359 0038 00        		.byte	0
 5360 0039 0B        		.uleb128 0xb
 5361 003a 0B        		.uleb128 0xb
 5362 003b 3E        		.uleb128 0x3e
 5363 003c 0B        		.uleb128 0xb
 5364 003d 03        		.uleb128 0x3
 5365 003e 0E        		.uleb128 0xe
 5366 003f 00        		.byte	0
 5367 0040 00        		.byte	0
 5368 0041 07        		.uleb128 0x7
 5369 0042 18        		.uleb128 0x18
 5370 0043 00        		.byte	0
 5371 0044 00        		.byte	0
 5372 0045 00        		.byte	0
 5373 0046 08        		.uleb128 0x8
 5374 0047 26        		.uleb128 0x26
 5375 0048 00        		.byte	0
 5376 0049 49        		.uleb128 0x49
 5377 004a 13        		.uleb128 0x13
 5378 004b 00        		.byte	0
 5379 004c 00        		.byte	0
 5380 004d 09        		.uleb128 0x9
 5381 004e 2E        		.uleb128 0x2e
68K GAS  /tmp/ccdyPHKc.s 			page 124


 5382 004f 01        		.byte	0x1
 5383 0050 3F        		.uleb128 0x3f
 5384 0051 19        		.uleb128 0x19
 5385 0052 03        		.uleb128 0x3
 5386 0053 0E        		.uleb128 0xe
 5387 0054 3A        		.uleb128 0x3a
 5388 0055 21        		.uleb128 0x21
 5389 0056 01        		.sleb128 1
 5390 0057 3B        		.uleb128 0x3b
 5391 0058 21        		.uleb128 0x21
 5392 0059 D701      		.sleb128 215
 5393 005b 39        		.uleb128 0x39
 5394 005c 21        		.uleb128 0x21
 5395 005d 09        		.sleb128 9
 5396 005e 49        		.uleb128 0x49
 5397 005f 13        		.uleb128 0x13
 5398 0060 3C        		.uleb128 0x3c
 5399 0061 19        		.uleb128 0x19
 5400 0062 01        		.uleb128 0x1
 5401 0063 13        		.uleb128 0x13
 5402 0064 00        		.byte	0
 5403 0065 00        		.byte	0
 5404 0066 0A        		.uleb128 0xa
 5405 0067 2E        		.uleb128 0x2e
 5406 0068 01        		.byte	0x1
 5407 0069 3F        		.uleb128 0x3f
 5408 006a 19        		.uleb128 0x19
 5409 006b 03        		.uleb128 0x3
 5410 006c 0E        		.uleb128 0xe
 5411 006d 3A        		.uleb128 0x3a
 5412 006e 0B        		.uleb128 0xb
 5413 006f 3B        		.uleb128 0x3b
 5414 0070 0B        		.uleb128 0xb
 5415 0071 39        		.uleb128 0x39
 5416 0072 0B        		.uleb128 0xb
 5417 0073 27        		.uleb128 0x27
 5418 0074 19        		.uleb128 0x19
 5419 0075 49        		.uleb128 0x49
 5420 0076 13        		.uleb128 0x13
 5421 0077 3C        		.uleb128 0x3c
 5422 0078 19        		.uleb128 0x19
 5423 0079 01        		.uleb128 0x1
 5424 007a 13        		.uleb128 0x13
 5425 007b 00        		.byte	0
 5426 007c 00        		.byte	0
 5427 007d 0B        		.uleb128 0xb
 5428 007e 0B        		.uleb128 0xb
 5429 007f 01        		.byte	0x1
 5430 0080 11        		.uleb128 0x11
 5431 0081 01        		.uleb128 0x1
 5432 0082 12        		.uleb128 0x12
 5433 0083 06        		.uleb128 0x6
 5434 0084 01        		.uleb128 0x1
 5435 0085 13        		.uleb128 0x13
 5436 0086 00        		.byte	0
 5437 0087 00        		.byte	0
 5438 0088 0C        		.uleb128 0xc
68K GAS  /tmp/ccdyPHKc.s 			page 125


 5439 0089 2E        		.uleb128 0x2e
 5440 008a 01        		.byte	0x1
 5441 008b 3F        		.uleb128 0x3f
 5442 008c 19        		.uleb128 0x19
 5443 008d 03        		.uleb128 0x3
 5444 008e 0E        		.uleb128 0xe
 5445 008f 3A        		.uleb128 0x3a
 5446 0090 21        		.uleb128 0x21
 5447 0091 01        		.sleb128 1
 5448 0092 3B        		.uleb128 0x3b
 5449 0093 05        		.uleb128 0x5
 5450 0094 39        		.uleb128 0x39
 5451 0095 21        		.uleb128 0x21
 5452 0096 06        		.sleb128 6
 5453 0097 11        		.uleb128 0x11
 5454 0098 01        		.uleb128 0x1
 5455 0099 12        		.uleb128 0x12
 5456 009a 06        		.uleb128 0x6
 5457 009b 40        		.uleb128 0x40
 5458 009c 18        		.uleb128 0x18
 5459 009d 7A        		.uleb128 0x7a
 5460 009e 19        		.uleb128 0x19
 5461 009f 01        		.uleb128 0x1
 5462 00a0 13        		.uleb128 0x13
 5463 00a1 00        		.byte	0
 5464 00a2 00        		.byte	0
 5465 00a3 0D        		.uleb128 0xd
 5466 00a4 16        		.uleb128 0x16
 5467 00a5 00        		.byte	0
 5468 00a6 03        		.uleb128 0x3
 5469 00a7 0E        		.uleb128 0xe
 5470 00a8 3A        		.uleb128 0x3a
 5471 00a9 0B        		.uleb128 0xb
 5472 00aa 3B        		.uleb128 0x3b
 5473 00ab 0B        		.uleb128 0xb
 5474 00ac 39        		.uleb128 0x39
 5475 00ad 0B        		.uleb128 0xb
 5476 00ae 49        		.uleb128 0x49
 5477 00af 13        		.uleb128 0x13
 5478 00b0 00        		.byte	0
 5479 00b1 00        		.byte	0
 5480 00b2 0E        		.uleb128 0xe
 5481 00b3 2E        		.uleb128 0x2e
 5482 00b4 01        		.byte	0x1
 5483 00b5 3F        		.uleb128 0x3f
 5484 00b6 19        		.uleb128 0x19
 5485 00b7 03        		.uleb128 0x3
 5486 00b8 0E        		.uleb128 0xe
 5487 00b9 3A        		.uleb128 0x3a
 5488 00ba 21        		.uleb128 0x21
 5489 00bb 04        		.sleb128 4
 5490 00bc 3B        		.uleb128 0x3b
 5491 00bd 0B        		.uleb128 0xb
 5492 00be 39        		.uleb128 0x39
 5493 00bf 21        		.uleb128 0x21
 5494 00c0 06        		.sleb128 6
 5495 00c1 3C        		.uleb128 0x3c
68K GAS  /tmp/ccdyPHKc.s 			page 126


 5496 00c2 19        		.uleb128 0x19
 5497 00c3 01        		.uleb128 0x1
 5498 00c4 13        		.uleb128 0x13
 5499 00c5 00        		.byte	0
 5500 00c6 00        		.byte	0
 5501 00c7 0F        		.uleb128 0xf
 5502 00c8 34        		.uleb128 0x34
 5503 00c9 00        		.byte	0
 5504 00ca 03        		.uleb128 0x3
 5505 00cb 0E        		.uleb128 0xe
 5506 00cc 3A        		.uleb128 0x3a
 5507 00cd 21        		.uleb128 0x21
 5508 00ce 01        		.sleb128 1
 5509 00cf 3B        		.uleb128 0x3b
 5510 00d0 05        		.uleb128 0x5
 5511 00d1 39        		.uleb128 0x39
 5512 00d2 0B        		.uleb128 0xb
 5513 00d3 49        		.uleb128 0x49
 5514 00d4 13        		.uleb128 0x13
 5515 00d5 02        		.uleb128 0x2
 5516 00d6 18        		.uleb128 0x18
 5517 00d7 00        		.byte	0
 5518 00d8 00        		.byte	0
 5519 00d9 10        		.uleb128 0x10
 5520 00da 34        		.uleb128 0x34
 5521 00db 00        		.byte	0
 5522 00dc 03        		.uleb128 0x3
 5523 00dd 08        		.uleb128 0x8
 5524 00de 3A        		.uleb128 0x3a
 5525 00df 21        		.uleb128 0x21
 5526 00e0 01        		.sleb128 1
 5527 00e1 3B        		.uleb128 0x3b
 5528 00e2 21        		.uleb128 0x21
 5529 00e3 E501      		.sleb128 229
 5530 00e5 39        		.uleb128 0x39
 5531 00e6 0B        		.uleb128 0xb
 5532 00e7 49        		.uleb128 0x49
 5533 00e8 13        		.uleb128 0x13
 5534 00e9 02        		.uleb128 0x2
 5535 00ea 17        		.uleb128 0x17
 5536 00eb B742      		.uleb128 0x2137
 5537 00ed 17        		.uleb128 0x17
 5538 00ee 00        		.byte	0
 5539 00ef 00        		.byte	0
 5540 00f0 11        		.uleb128 0x11
 5541 00f1 05        		.uleb128 0x5
 5542 00f2 00        		.byte	0
 5543 00f3 03        		.uleb128 0x3
 5544 00f4 08        		.uleb128 0x8
 5545 00f5 3A        		.uleb128 0x3a
 5546 00f6 21        		.uleb128 0x21
 5547 00f7 01        		.sleb128 1
 5548 00f8 3B        		.uleb128 0x3b
 5549 00f9 21        		.uleb128 0x21
 5550 00fa C601      		.sleb128 198
 5551 00fc 39        		.uleb128 0x39
 5552 00fd 0B        		.uleb128 0xb
68K GAS  /tmp/ccdyPHKc.s 			page 127


 5553 00fe 49        		.uleb128 0x49
 5554 00ff 13        		.uleb128 0x13
 5555 0100 02        		.uleb128 0x2
 5556 0101 17        		.uleb128 0x17
 5557 0102 B742      		.uleb128 0x2137
 5558 0104 17        		.uleb128 0x17
 5559 0105 00        		.byte	0
 5560 0106 00        		.byte	0
 5561 0107 12        		.uleb128 0x12
 5562 0108 0F        		.uleb128 0xf
 5563 0109 00        		.byte	0
 5564 010a 0B        		.uleb128 0xb
 5565 010b 21        		.uleb128 0x21
 5566 010c 04        		.sleb128 4
 5567 010d 49        		.uleb128 0x49
 5568 010e 13        		.uleb128 0x13
 5569 010f 00        		.byte	0
 5570 0110 00        		.byte	0
 5571 0111 13        		.uleb128 0x13
 5572 0112 34        		.uleb128 0x34
 5573 0113 00        		.byte	0
 5574 0114 03        		.uleb128 0x3
 5575 0115 08        		.uleb128 0x8
 5576 0116 3A        		.uleb128 0x3a
 5577 0117 21        		.uleb128 0x21
 5578 0118 01        		.sleb128 1
 5579 0119 3B        		.uleb128 0x3b
 5580 011a 0B        		.uleb128 0xb
 5581 011b 39        		.uleb128 0x39
 5582 011c 0B        		.uleb128 0xb
 5583 011d 49        		.uleb128 0x49
 5584 011e 13        		.uleb128 0x13
 5585 011f 3F        		.uleb128 0x3f
 5586 0120 19        		.uleb128 0x19
 5587 0121 02        		.uleb128 0x2
 5588 0122 18        		.uleb128 0x18
 5589 0123 00        		.byte	0
 5590 0124 00        		.byte	0
 5591 0125 14        		.uleb128 0x14
 5592 0126 2E        		.uleb128 0x2e
 5593 0127 01        		.byte	0x1
 5594 0128 3F        		.uleb128 0x3f
 5595 0129 19        		.uleb128 0x19
 5596 012a 03        		.uleb128 0x3
 5597 012b 08        		.uleb128 0x8
 5598 012c 3A        		.uleb128 0x3a
 5599 012d 21        		.uleb128 0x21
 5600 012e 04        		.sleb128 4
 5601 012f 3B        		.uleb128 0x3b
 5602 0130 0B        		.uleb128 0xb
 5603 0131 39        		.uleb128 0x39
 5604 0132 21        		.uleb128 0x21
 5605 0133 0D        		.sleb128 13
 5606 0134 27        		.uleb128 0x27
 5607 0135 19        		.uleb128 0x19
 5608 0136 3C        		.uleb128 0x3c
 5609 0137 19        		.uleb128 0x19
68K GAS  /tmp/ccdyPHKc.s 			page 128


 5610 0138 01        		.uleb128 0x1
 5611 0139 13        		.uleb128 0x13
 5612 013a 00        		.byte	0
 5613 013b 00        		.byte	0
 5614 013c 15        		.uleb128 0x15
 5615 013d 0B        		.uleb128 0xb
 5616 013e 01        		.byte	0x1
 5617 013f 55        		.uleb128 0x55
 5618 0140 17        		.uleb128 0x17
 5619 0141 01        		.uleb128 0x1
 5620 0142 13        		.uleb128 0x13
 5621 0143 00        		.byte	0
 5622 0144 00        		.byte	0
 5623 0145 16        		.uleb128 0x16
 5624 0146 48        		.uleb128 0x48
 5625 0147 00        		.byte	0
 5626 0148 7D        		.uleb128 0x7d
 5627 0149 01        		.uleb128 0x1
 5628 014a 8301      		.uleb128 0x83
 5629 014c 18        		.uleb128 0x18
 5630 014d 00        		.byte	0
 5631 014e 00        		.byte	0
 5632 014f 17        		.uleb128 0x17
 5633 0150 34        		.uleb128 0x34
 5634 0151 00        		.byte	0
 5635 0152 03        		.uleb128 0x3
 5636 0153 0E        		.uleb128 0xe
 5637 0154 3A        		.uleb128 0x3a
 5638 0155 21        		.uleb128 0x21
 5639 0156 01        		.sleb128 1
 5640 0157 3B        		.uleb128 0x3b
 5641 0158 0B        		.uleb128 0xb
 5642 0159 39        		.uleb128 0x39
 5643 015a 0B        		.uleb128 0xb
 5644 015b 49        		.uleb128 0x49
 5645 015c 13        		.uleb128 0x13
 5646 015d 02        		.uleb128 0x2
 5647 015e 17        		.uleb128 0x17
 5648 015f B742      		.uleb128 0x2137
 5649 0161 17        		.uleb128 0x17
 5650 0162 00        		.byte	0
 5651 0163 00        		.byte	0
 5652 0164 18        		.uleb128 0x18
 5653 0165 11        		.uleb128 0x11
 5654 0166 01        		.byte	0x1
 5655 0167 25        		.uleb128 0x25
 5656 0168 0E        		.uleb128 0xe
 5657 0169 13        		.uleb128 0x13
 5658 016a 0B        		.uleb128 0xb
 5659 016b 03        		.uleb128 0x3
 5660 016c 0E        		.uleb128 0xe
 5661 016d 1B        		.uleb128 0x1b
 5662 016e 0E        		.uleb128 0xe
 5663 016f 55        		.uleb128 0x55
 5664 0170 17        		.uleb128 0x17
 5665 0171 11        		.uleb128 0x11
 5666 0172 01        		.uleb128 0x1
68K GAS  /tmp/ccdyPHKc.s 			page 129


 5667 0173 10        		.uleb128 0x10
 5668 0174 17        		.uleb128 0x17
 5669 0175 00        		.byte	0
 5670 0176 00        		.byte	0
 5671 0177 19        		.uleb128 0x19
 5672 0178 0F        		.uleb128 0xf
 5673 0179 00        		.byte	0
 5674 017a 0B        		.uleb128 0xb
 5675 017b 0B        		.uleb128 0xb
 5676 017c 03        		.uleb128 0x3
 5677 017d 0E        		.uleb128 0xe
 5678 017e 00        		.byte	0
 5679 017f 00        		.byte	0
 5680 0180 1A        		.uleb128 0x1a
 5681 0181 24        		.uleb128 0x24
 5682 0182 00        		.byte	0
 5683 0183 0B        		.uleb128 0xb
 5684 0184 0B        		.uleb128 0xb
 5685 0185 3E        		.uleb128 0x3e
 5686 0186 0B        		.uleb128 0xb
 5687 0187 03        		.uleb128 0x3
 5688 0188 08        		.uleb128 0x8
 5689 0189 00        		.byte	0
 5690 018a 00        		.byte	0
 5691 018b 1B        		.uleb128 0x1b
 5692 018c 0F        		.uleb128 0xf
 5693 018d 00        		.byte	0
 5694 018e 0B        		.uleb128 0xb
 5695 018f 0B        		.uleb128 0xb
 5696 0190 00        		.byte	0
 5697 0191 00        		.byte	0
 5698 0192 1C        		.uleb128 0x1c
 5699 0193 34        		.uleb128 0x34
 5700 0194 00        		.byte	0
 5701 0195 03        		.uleb128 0x3
 5702 0196 0E        		.uleb128 0xe
 5703 0197 3A        		.uleb128 0x3a
 5704 0198 0B        		.uleb128 0xb
 5705 0199 3B        		.uleb128 0x3b
 5706 019a 0B        		.uleb128 0xb
 5707 019b 39        		.uleb128 0x39
 5708 019c 0B        		.uleb128 0xb
 5709 019d 49        		.uleb128 0x49
 5710 019e 13        		.uleb128 0x13
 5711 019f 3F        		.uleb128 0x3f
 5712 01a0 19        		.uleb128 0x19
 5713 01a1 3C        		.uleb128 0x3c
 5714 01a2 19        		.uleb128 0x19
 5715 01a3 00        		.byte	0
 5716 01a4 00        		.byte	0
 5717 01a5 1D        		.uleb128 0x1d
 5718 01a6 2E        		.uleb128 0x2e
 5719 01a7 01        		.byte	0x1
 5720 01a8 3F        		.uleb128 0x3f
 5721 01a9 19        		.uleb128 0x19
 5722 01aa 03        		.uleb128 0x3
 5723 01ab 0E        		.uleb128 0xe
68K GAS  /tmp/ccdyPHKc.s 			page 130


 5724 01ac 3A        		.uleb128 0x3a
 5725 01ad 0B        		.uleb128 0xb
 5726 01ae 3B        		.uleb128 0x3b
 5727 01af 0B        		.uleb128 0xb
 5728 01b0 39        		.uleb128 0x39
 5729 01b1 0B        		.uleb128 0xb
 5730 01b2 27        		.uleb128 0x27
 5731 01b3 19        		.uleb128 0x19
 5732 01b4 3C        		.uleb128 0x3c
 5733 01b5 19        		.uleb128 0x19
 5734 01b6 01        		.uleb128 0x1
 5735 01b7 13        		.uleb128 0x13
 5736 01b8 00        		.byte	0
 5737 01b9 00        		.byte	0
 5738 01ba 1E        		.uleb128 0x1e
 5739 01bb 2E        		.uleb128 0x2e
 5740 01bc 00        		.byte	0
 5741 01bd 3F        		.uleb128 0x3f
 5742 01be 19        		.uleb128 0x19
 5743 01bf 03        		.uleb128 0x3
 5744 01c0 0E        		.uleb128 0xe
 5745 01c1 3A        		.uleb128 0x3a
 5746 01c2 0B        		.uleb128 0xb
 5747 01c3 3B        		.uleb128 0x3b
 5748 01c4 0B        		.uleb128 0xb
 5749 01c5 39        		.uleb128 0x39
 5750 01c6 0B        		.uleb128 0xb
 5751 01c7 27        		.uleb128 0x27
 5752 01c8 19        		.uleb128 0x19
 5753 01c9 49        		.uleb128 0x49
 5754 01ca 13        		.uleb128 0x13
 5755 01cb 3C        		.uleb128 0x3c
 5756 01cc 19        		.uleb128 0x19
 5757 01cd 00        		.byte	0
 5758 01ce 00        		.byte	0
 5759 01cf 1F        		.uleb128 0x1f
 5760 01d0 48        		.uleb128 0x48
 5761 01d1 00        		.byte	0
 5762 01d2 7D        		.uleb128 0x7d
 5763 01d3 01        		.uleb128 0x1
 5764 01d4 8201      		.uleb128 0x82
 5765 01d6 19        		.uleb128 0x19
 5766 01d7 7F        		.uleb128 0x7f
 5767 01d8 13        		.uleb128 0x13
 5768 01d9 00        		.byte	0
 5769 01da 00        		.byte	0
 5770 01db 20        		.uleb128 0x20
 5771 01dc 34        		.uleb128 0x34
 5772 01dd 00        		.byte	0
 5773 01de 03        		.uleb128 0x3
 5774 01df 0E        		.uleb128 0xe
 5775 01e0 3A        		.uleb128 0x3a
 5776 01e1 0B        		.uleb128 0xb
 5777 01e2 3B        		.uleb128 0x3b
 5778 01e3 05        		.uleb128 0x5
 5779 01e4 39        		.uleb128 0x39
 5780 01e5 0B        		.uleb128 0xb
68K GAS  /tmp/ccdyPHKc.s 			page 131


 5781 01e6 49        		.uleb128 0x49
 5782 01e7 13        		.uleb128 0x13
 5783 01e8 00        		.byte	0
 5784 01e9 00        		.byte	0
 5785 01ea 21        		.uleb128 0x21
 5786 01eb 34        		.uleb128 0x34
 5787 01ec 00        		.byte	0
 5788 01ed 03        		.uleb128 0x3
 5789 01ee 0E        		.uleb128 0xe
 5790 01ef 3A        		.uleb128 0x3a
 5791 01f0 0B        		.uleb128 0xb
 5792 01f1 3B        		.uleb128 0x3b
 5793 01f2 05        		.uleb128 0x5
 5794 01f3 39        		.uleb128 0x39
 5795 01f4 0B        		.uleb128 0xb
 5796 01f5 49        		.uleb128 0x49
 5797 01f6 13        		.uleb128 0x13
 5798 01f7 02        		.uleb128 0x2
 5799 01f8 17        		.uleb128 0x17
 5800 01f9 B742      		.uleb128 0x2137
 5801 01fb 17        		.uleb128 0x17
 5802 01fc 00        		.byte	0
 5803 01fd 00        		.byte	0
 5804 01fe 22        		.uleb128 0x22
 5805 01ff 2E        		.uleb128 0x2e
 5806 0200 01        		.byte	0x1
 5807 0201 3F        		.uleb128 0x3f
 5808 0202 19        		.uleb128 0x19
 5809 0203 03        		.uleb128 0x3
 5810 0204 0E        		.uleb128 0xe
 5811 0205 3A        		.uleb128 0x3a
 5812 0206 0B        		.uleb128 0xb
 5813 0207 3B        		.uleb128 0x3b
 5814 0208 0B        		.uleb128 0xb
 5815 0209 39        		.uleb128 0x39
 5816 020a 0B        		.uleb128 0xb
 5817 020b 11        		.uleb128 0x11
 5818 020c 01        		.uleb128 0x1
 5819 020d 12        		.uleb128 0x12
 5820 020e 06        		.uleb128 0x6
 5821 020f 40        		.uleb128 0x40
 5822 0210 18        		.uleb128 0x18
 5823 0211 7C        		.uleb128 0x7c
 5824 0212 19        		.uleb128 0x19
 5825 0213 01        		.uleb128 0x1
 5826 0214 13        		.uleb128 0x13
 5827 0215 00        		.byte	0
 5828 0216 00        		.byte	0
 5829 0217 23        		.uleb128 0x23
 5830 0218 2E        		.uleb128 0x2e
 5831 0219 01        		.byte	0x1
 5832 021a 3F        		.uleb128 0x3f
 5833 021b 19        		.uleb128 0x19
 5834 021c 03        		.uleb128 0x3
 5835 021d 0E        		.uleb128 0xe
 5836 021e 3A        		.uleb128 0x3a
 5837 021f 0B        		.uleb128 0xb
68K GAS  /tmp/ccdyPHKc.s 			page 132


 5838 0220 3B        		.uleb128 0x3b
 5839 0221 0B        		.uleb128 0xb
 5840 0222 39        		.uleb128 0x39
 5841 0223 0B        		.uleb128 0xb
 5842 0224 27        		.uleb128 0x27
 5843 0225 19        		.uleb128 0x19
 5844 0226 11        		.uleb128 0x11
 5845 0227 01        		.uleb128 0x1
 5846 0228 12        		.uleb128 0x12
 5847 0229 06        		.uleb128 0x6
 5848 022a 40        		.uleb128 0x40
 5849 022b 18        		.uleb128 0x18
 5850 022c 7A        		.uleb128 0x7a
 5851 022d 19        		.uleb128 0x19
 5852 022e 01        		.uleb128 0x1
 5853 022f 13        		.uleb128 0x13
 5854 0230 00        		.byte	0
 5855 0231 00        		.byte	0
 5856 0232 24        		.uleb128 0x24
 5857 0233 34        		.uleb128 0x34
 5858 0234 00        		.byte	0
 5859 0235 03        		.uleb128 0x3
 5860 0236 0E        		.uleb128 0xe
 5861 0237 3A        		.uleb128 0x3a
 5862 0238 0B        		.uleb128 0xb
 5863 0239 3B        		.uleb128 0x3b
 5864 023a 0B        		.uleb128 0xb
 5865 023b 39        		.uleb128 0x39
 5866 023c 0B        		.uleb128 0xb
 5867 023d 49        		.uleb128 0x49
 5868 023e 13        		.uleb128 0x13
 5869 023f 00        		.byte	0
 5870 0240 00        		.byte	0
 5871 0241 25        		.uleb128 0x25
 5872 0242 2E        		.uleb128 0x2e
 5873 0243 00        		.byte	0
 5874 0244 3F        		.uleb128 0x3f
 5875 0245 19        		.uleb128 0x19
 5876 0246 3C        		.uleb128 0x3c
 5877 0247 19        		.uleb128 0x19
 5878 0248 6E        		.uleb128 0x6e
 5879 0249 0E        		.uleb128 0xe
 5880 024a 03        		.uleb128 0x3
 5881 024b 0E        		.uleb128 0xe
 5882 024c 3A        		.uleb128 0x3a
 5883 024d 0B        		.uleb128 0xb
 5884 024e 3B        		.uleb128 0x3b
 5885 024f 0B        		.uleb128 0xb
 5886 0250 00        		.byte	0
 5887 0251 00        		.byte	0
 5888 0252 00        		.byte	0
 5889               		.section	.debug_loclists,"",@progbits
 5890 0000 0000 01AD 		.long	.Ldebug_loc3-.Ldebug_loc2
 5891               	.Ldebug_loc2:
 5892 0004 0005      		.word	0x5
 5893 0006 04        		.byte	0x4
 5894 0007 00        		.byte	0
68K GAS  /tmp/ccdyPHKc.s 			page 133


 5895 0008 0000 0000 		.long	0
 5896               	.Ldebug_loc0:
 5897               	.LVUS8:
 5898 000c 00        		.uleb128 .LVU89
 5899 000d 00        		.uleb128 .LVU95
 5900 000e 00        		.uleb128 .LVU117
 5901 000f 00        		.uleb128 .LVU123
 5902               	.LLST8:
 5903 0010 06        		.byte	0x6
 5904 0011 0000 0000 		.long	.LVL52
 5905 0015 04        		.byte	0x4
 5906 0016 00        		.uleb128 .LVL52-.LVL52
 5907 0017 14        		.uleb128 .LVL53-.LVL52
 5908 0018 01        		.uleb128 0x1
 5909 0019 50        		.byte	0x50
 5910 001a 04        		.byte	0x4
 5911 001b 6C        		.uleb128 .LVL59-.LVL52
 5912 001c 8201      		.uleb128 .LVL60-.LVL52
 5913 001e 01        		.uleb128 0x1
 5914 001f 50        		.byte	0x50
 5915 0020 00        		.byte	0
 5916               	.LVUS4:
 5917 0021 01        		.uleb128 .LVU28
 5918 0022 00        		.uleb128 .LVU32
 5919 0023 00        		.uleb128 .LVU32
 5920 0024 00        		.uleb128 0
 5921               	.LLST4:
 5922 0025 06        		.byte	0x6
 5923 0026 0000 0000 		.long	.LVL16
 5924 002a 04        		.byte	0x4
 5925 002b 00        		.uleb128 .LVL16-.LVL16
 5926 002c 1E        		.uleb128 .LVL17-.LVL16
 5927 002d 02        		.uleb128 0x2
 5928 002e 30        		.byte	0x30
 5929 002f 9F        		.byte	0x9f
 5930 0030 04        		.byte	0x4
 5931 0031 1E        		.uleb128 .LVL17-.LVL16
 5932 0032 F803      		.uleb128 .LFE4-.LVL16
 5933 0034 01        		.uleb128 0x1
 5934 0035 56        		.byte	0x56
 5935 0036 00        		.byte	0
 5936               	.LVUS5:
 5937 0037 01        		.uleb128 .LVU28
 5938 0038 00        		.uleb128 .LVU32
 5939 0039 00        		.uleb128 .LVU32
 5940 003a 01        		.uleb128 .LVU69
 5941 003b 01        		.uleb128 .LVU69
 5942 003c 00        		.uleb128 .LVU73
 5943 003d 00        		.uleb128 .LVU73
 5944 003e 00        		.uleb128 0
 5945               	.LLST5:
 5946 003f 06        		.byte	0x6
 5947 0040 0000 0000 		.long	.LVL16
 5948 0044 04        		.byte	0x4
 5949 0045 00        		.uleb128 .LVL16-.LVL16
 5950 0046 1E        		.uleb128 .LVL17-.LVL16
 5951 0047 02        		.uleb128 0x2
68K GAS  /tmp/ccdyPHKc.s 			page 134


 5952 0048 30        		.byte	0x30
 5953 0049 9F        		.byte	0x9f
 5954 004a 04        		.byte	0x4
 5955 004b 1E        		.uleb128 .LVL17-.LVL16
 5956 004c EE02      		.uleb128 .LVL40-.LVL16
 5957 004e 01        		.uleb128 0x1
 5958 004f 55        		.byte	0x55
 5959 0050 04        		.byte	0x4
 5960 0051 EE02      		.uleb128 .LVL40-.LVL16
 5961 0053 F402      		.uleb128 .LVL42-.LVL16
 5962 0055 02        		.uleb128 0x2
 5963 0056 30        		.byte	0x30
 5964 0057 9F        		.byte	0x9f
 5965 0058 04        		.byte	0x4
 5966 0059 F402      		.uleb128 .LVL42-.LVL16
 5967 005b F803      		.uleb128 .LFE4-.LVL16
 5968 005d 01        		.uleb128 0x1
 5969 005e 52        		.byte	0x52
 5970 005f 00        		.byte	0
 5971               	.LVUS6:
 5972 0060 01        		.uleb128 .LVU28
 5973 0061 00        		.uleb128 .LVU32
 5974 0062 00        		.uleb128 .LVU32
 5975 0063 01        		.uleb128 .LVU56
 5976 0064 01        		.uleb128 .LVU56
 5977 0065 00        		.uleb128 .LVU61
 5978 0066 00        		.uleb128 .LVU61
 5979 0067 00        		.uleb128 .LVU68
 5980 0068 00        		.uleb128 .LVU68
 5981 0069 00        		.uleb128 .LVU73
 5982 006a 00        		.uleb128 .LVU73
 5983 006b 00        		.uleb128 0
 5984               	.LLST6:
 5985 006c 06        		.byte	0x6
 5986 006d 0000 0000 		.long	.LVL16
 5987 0071 04        		.byte	0x4
 5988 0072 00        		.uleb128 .LVL16-.LVL16
 5989 0073 1E        		.uleb128 .LVL17-.LVL16
 5990 0074 02        		.uleb128 0x2
 5991 0075 30        		.byte	0x30
 5992 0076 9F        		.byte	0x9f
 5993 0077 04        		.byte	0x4
 5994 0078 1E        		.uleb128 .LVL17-.LVL16
 5995 0079 E001      		.uleb128 .LVL31-.LVL16
 5996 007b 01        		.uleb128 0x1
 5997 007c 52        		.byte	0x52
 5998 007d 04        		.byte	0x4
 5999 007e E001      		.uleb128 .LVL31-.LVL16
 6000 0080 EA01      		.uleb128 .LVL33-.LVL16
 6001 0082 02        		.uleb128 0x2
 6002 0083 30        		.byte	0x30
 6003 0084 9F        		.byte	0x9f
 6004 0085 04        		.byte	0x4
 6005 0086 EA01      		.uleb128 .LVL33-.LVL16
 6006 0088 EE02      		.uleb128 .LVL40-.LVL16
 6007 008a 01        		.uleb128 0x1
 6008 008b 52        		.byte	0x52
68K GAS  /tmp/ccdyPHKc.s 			page 135


 6009 008c 04        		.byte	0x4
 6010 008d EE02      		.uleb128 .LVL40-.LVL16
 6011 008f F402      		.uleb128 .LVL42-.LVL16
 6012 0091 02        		.uleb128 0x2
 6013 0092 30        		.byte	0x30
 6014 0093 9F        		.byte	0x9f
 6015 0094 04        		.byte	0x4
 6016 0095 F402      		.uleb128 .LVL42-.LVL16
 6017 0097 F803      		.uleb128 .LFE4-.LVL16
 6018 0099 01        		.uleb128 0x1
 6019 009a 52        		.byte	0x52
 6020 009b 00        		.byte	0
 6021               	.LVUS7:
 6022 009c 01        		.uleb128 .LVU28
 6023 009d 00        		.uleb128 .LVU32
 6024 009e 00        		.uleb128 .LVU32
 6025 009f 01        		.uleb128 .LVU42
 6026 00a0 01        		.uleb128 .LVU42
 6027 00a1 00        		.uleb128 .LVU51
 6028 00a2 00        		.uleb128 .LVU51
 6029 00a3 00        		.uleb128 .LVU55
 6030 00a4 00        		.uleb128 .LVU55
 6031 00a5 00        		.uleb128 0
 6032               	.LLST7:
 6033 00a6 06        		.byte	0x6
 6034 00a7 0000 0000 		.long	.LVL16
 6035 00ab 04        		.byte	0x4
 6036 00ac 00        		.uleb128 .LVL16-.LVL16
 6037 00ad 1E        		.uleb128 .LVL17-.LVL16
 6038 00ae 02        		.uleb128 0x2
 6039 00af 30        		.byte	0x30
 6040 00b0 9F        		.byte	0x9f
 6041 00b1 04        		.byte	0x4
 6042 00b2 1E        		.uleb128 .LVL17-.LVL16
 6043 00b3 48        		.uleb128 .LVL21-.LVL16
 6044 00b4 01        		.uleb128 0x1
 6045 00b5 54        		.byte	0x54
 6046 00b6 04        		.byte	0x4
 6047 00b7 48        		.uleb128 .LVL21-.LVL16
 6048 00b8 D001      		.uleb128 .LVL28-.LVL16
 6049 00ba 01        		.uleb128 0x1
 6050 00bb 53        		.byte	0x53
 6051 00bc 04        		.byte	0x4
 6052 00bd D001      		.uleb128 .LVL28-.LVL16
 6053 00bf E001      		.uleb128 .LVL31-.LVL16
 6054 00c1 01        		.uleb128 0x1
 6055 00c2 54        		.byte	0x54
 6056 00c3 04        		.byte	0x4
 6057 00c4 E001      		.uleb128 .LVL31-.LVL16
 6058 00c6 F803      		.uleb128 .LFE4-.LVL16
 6059 00c8 01        		.uleb128 0x1
 6060 00c9 53        		.byte	0x53
 6061 00ca 00        		.byte	0
 6062               	.LVUS0:
 6063 00cb 00        		.uleb128 0
 6064 00cc 00        		.uleb128 .LVU2
 6065 00cd 00        		.uleb128 .LVU2
68K GAS  /tmp/ccdyPHKc.s 			page 136


 6066 00ce 00        		.uleb128 .LVU3
 6067 00cf 00        		.uleb128 .LVU3
 6068 00d0 00        		.uleb128 .LVU16
 6069 00d1 00        		.uleb128 .LVU16
 6070 00d2 00        		.uleb128 .LVU17
 6071 00d3 00        		.uleb128 .LVU17
 6072 00d4 00        		.uleb128 .LVU21
 6073 00d5 00        		.uleb128 .LVU21
 6074 00d6 00        		.uleb128 .LVU22
 6075 00d7 00        		.uleb128 .LVU22
 6076 00d8 00        		.uleb128 0
 6077               	.LLST0:
 6078 00d9 06        		.byte	0x6
 6079 00da 0000 0000 		.long	.LVL0
 6080 00de 04        		.byte	0x4
 6081 00df 00        		.uleb128 .LVL0-.LVL0
 6082 00e0 04        		.uleb128 .LVL1-.LVL0
 6083 00e1 02        		.uleb128 0x2
 6084 00e2 91        		.byte	0x91
 6085 00e3 03        		.sleb128 3
 6086 00e4 04        		.byte	0x4
 6087 00e5 04        		.uleb128 .LVL1-.LVL0
 6088 00e6 08        		.uleb128 .LVL2-.LVL0
 6089 00e7 02        		.uleb128 0x2
 6090 00e8 7F        		.byte	0x7f
 6091 00e9 0B        		.sleb128 11
 6092 00ea 04        		.byte	0x4
 6093 00eb 08        		.uleb128 .LVL2-.LVL0
 6094 00ec 46        		.uleb128 .LVL9-.LVL0
 6095 00ed 02        		.uleb128 0x2
 6096 00ee 7E        		.byte	0x7e
 6097 00ef 0B        		.sleb128 11
 6098 00f0 04        		.byte	0x4
 6099 00f1 46        		.uleb128 .LVL9-.LVL0
 6100 00f2 48        		.uleb128 .LVL10-.LVL0
 6101 00f3 02        		.uleb128 0x2
 6102 00f4 7F        		.byte	0x7f
 6103 00f5 07        		.sleb128 7
 6104 00f6 04        		.byte	0x4
 6105 00f7 48        		.uleb128 .LVL10-.LVL0
 6106 00f8 66        		.uleb128 .LVL13-.LVL0
 6107 00f9 02        		.uleb128 0x2
 6108 00fa 7E        		.byte	0x7e
 6109 00fb 0B        		.sleb128 11
 6110 00fc 04        		.byte	0x4
 6111 00fd 66        		.uleb128 .LVL13-.LVL0
 6112 00fe 68        		.uleb128 .LVL14-.LVL0
 6113 00ff 02        		.uleb128 0x2
 6114 0100 7F        		.byte	0x7f
 6115 0101 07        		.sleb128 7
 6116 0102 04        		.byte	0x4
 6117 0103 68        		.uleb128 .LVL14-.LVL0
 6118 0104 8401      		.uleb128 .LFE3-.LVL0
 6119 0106 02        		.uleb128 0x2
 6120 0107 7E        		.byte	0x7e
 6121 0108 0B        		.sleb128 11
 6122 0109 00        		.byte	0
68K GAS  /tmp/ccdyPHKc.s 			page 137


 6123               	.LVUS1:
 6124 010a 00        		.uleb128 0
 6125 010b 00        		.uleb128 .LVU2
 6126 010c 00        		.uleb128 .LVU2
 6127 010d 00        		.uleb128 .LVU3
 6128 010e 00        		.uleb128 .LVU3
 6129 010f 00        		.uleb128 .LVU16
 6130 0110 00        		.uleb128 .LVU16
 6131 0111 00        		.uleb128 .LVU17
 6132 0112 00        		.uleb128 .LVU17
 6133 0113 00        		.uleb128 .LVU21
 6134 0114 00        		.uleb128 .LVU21
 6135 0115 00        		.uleb128 .LVU22
 6136 0116 00        		.uleb128 .LVU22
 6137 0117 00        		.uleb128 0
 6138               	.LLST1:
 6139 0118 06        		.byte	0x6
 6140 0119 0000 0000 		.long	.LVL0
 6141 011d 04        		.byte	0x4
 6142 011e 00        		.uleb128 .LVL0-.LVL0
 6143 011f 04        		.uleb128 .LVL1-.LVL0
 6144 0120 02        		.uleb128 0x2
 6145 0121 91        		.byte	0x91
 6146 0122 07        		.sleb128 7
 6147 0123 04        		.byte	0x4
 6148 0124 04        		.uleb128 .LVL1-.LVL0
 6149 0125 08        		.uleb128 .LVL2-.LVL0
 6150 0126 02        		.uleb128 0x2
 6151 0127 7F        		.byte	0x7f
 6152 0128 0F        		.sleb128 15
 6153 0129 04        		.byte	0x4
 6154 012a 08        		.uleb128 .LVL2-.LVL0
 6155 012b 46        		.uleb128 .LVL9-.LVL0
 6156 012c 02        		.uleb128 0x2
 6157 012d 7E        		.byte	0x7e
 6158 012e 0F        		.sleb128 15
 6159 012f 04        		.byte	0x4
 6160 0130 46        		.uleb128 .LVL9-.LVL0
 6161 0131 48        		.uleb128 .LVL10-.LVL0
 6162 0132 02        		.uleb128 0x2
 6163 0133 7F        		.byte	0x7f
 6164 0134 0B        		.sleb128 11
 6165 0135 04        		.byte	0x4
 6166 0136 48        		.uleb128 .LVL10-.LVL0
 6167 0137 66        		.uleb128 .LVL13-.LVL0
 6168 0138 02        		.uleb128 0x2
 6169 0139 7E        		.byte	0x7e
 6170 013a 0F        		.sleb128 15
 6171 013b 04        		.byte	0x4
 6172 013c 66        		.uleb128 .LVL13-.LVL0
 6173 013d 68        		.uleb128 .LVL14-.LVL0
 6174 013e 02        		.uleb128 0x2
 6175 013f 7F        		.byte	0x7f
 6176 0140 0B        		.sleb128 11
 6177 0141 04        		.byte	0x4
 6178 0142 68        		.uleb128 .LVL14-.LVL0
 6179 0143 8401      		.uleb128 .LFE3-.LVL0
68K GAS  /tmp/ccdyPHKc.s 			page 138


 6180 0145 02        		.uleb128 0x2
 6181 0146 7E        		.byte	0x7e
 6182 0147 0F        		.sleb128 15
 6183 0148 00        		.byte	0
 6184               	.LVUS2:
 6185 0149 00        		.uleb128 0
 6186 014a 00        		.uleb128 .LVU2
 6187 014b 00        		.uleb128 .LVU2
 6188 014c 00        		.uleb128 .LVU3
 6189 014d 00        		.uleb128 .LVU3
 6190 014e 00        		.uleb128 .LVU16
 6191 014f 00        		.uleb128 .LVU16
 6192 0150 00        		.uleb128 .LVU17
 6193 0151 00        		.uleb128 .LVU17
 6194 0152 00        		.uleb128 .LVU21
 6195 0153 00        		.uleb128 .LVU21
 6196 0154 00        		.uleb128 .LVU22
 6197 0155 00        		.uleb128 .LVU22
 6198 0156 00        		.uleb128 0
 6199               	.LLST2:
 6200 0157 06        		.byte	0x6
 6201 0158 0000 0000 		.long	.LVL0
 6202 015c 04        		.byte	0x4
 6203 015d 00        		.uleb128 .LVL0-.LVL0
 6204 015e 04        		.uleb128 .LVL1-.LVL0
 6205 015f 02        		.uleb128 0x2
 6206 0160 91        		.byte	0x91
 6207 0161 08        		.sleb128 8
 6208 0162 04        		.byte	0x4
 6209 0163 04        		.uleb128 .LVL1-.LVL0
 6210 0164 08        		.uleb128 .LVL2-.LVL0
 6211 0165 02        		.uleb128 0x2
 6212 0166 7F        		.byte	0x7f
 6213 0167 10        		.sleb128 16
 6214 0168 04        		.byte	0x4
 6215 0169 08        		.uleb128 .LVL2-.LVL0
 6216 016a 46        		.uleb128 .LVL9-.LVL0
 6217 016b 02        		.uleb128 0x2
 6218 016c 7E        		.byte	0x7e
 6219 016d 10        		.sleb128 16
 6220 016e 04        		.byte	0x4
 6221 016f 46        		.uleb128 .LVL9-.LVL0
 6222 0170 48        		.uleb128 .LVL10-.LVL0
 6223 0171 02        		.uleb128 0x2
 6224 0172 7F        		.byte	0x7f
 6225 0173 0C        		.sleb128 12
 6226 0174 04        		.byte	0x4
 6227 0175 48        		.uleb128 .LVL10-.LVL0
 6228 0176 66        		.uleb128 .LVL13-.LVL0
 6229 0177 02        		.uleb128 0x2
 6230 0178 7E        		.byte	0x7e
 6231 0179 10        		.sleb128 16
 6232 017a 04        		.byte	0x4
 6233 017b 66        		.uleb128 .LVL13-.LVL0
 6234 017c 68        		.uleb128 .LVL14-.LVL0
 6235 017d 02        		.uleb128 0x2
 6236 017e 7F        		.byte	0x7f
68K GAS  /tmp/ccdyPHKc.s 			page 139


 6237 017f 0C        		.sleb128 12
 6238 0180 04        		.byte	0x4
 6239 0181 68        		.uleb128 .LVL14-.LVL0
 6240 0182 8401      		.uleb128 .LFE3-.LVL0
 6241 0184 02        		.uleb128 0x2
 6242 0185 7E        		.byte	0x7e
 6243 0186 10        		.sleb128 16
 6244 0187 00        		.byte	0
 6245               	.LVUS3:
 6246 0188 00        		.uleb128 .LVU10
 6247 0189 00        		.uleb128 .LVU14
 6248 018a 00        		.uleb128 .LVU14
 6249 018b 00        		.uleb128 .LVU15
 6250 018c 00        		.uleb128 .LVU17
 6251 018d 00        		.uleb128 .LVU20
 6252 018e 00        		.uleb128 .LVU22
 6253 018f 00        		.uleb128 .LVU23
 6254 0190 00        		.uleb128 .LVU23
 6255 0191 00        		.uleb128 0
 6256               	.LLST3:
 6257 0192 06        		.byte	0x6
 6258 0193 0000 0000 		.long	.LVL6
 6259 0197 04        		.byte	0x4
 6260 0198 00        		.uleb128 .LVL6-.LVL6
 6261 0199 0C        		.uleb128 .LVL7-.LVL6
 6262 019a 01        		.uleb128 0x1
 6263 019b 50        		.byte	0x50
 6264 019c 04        		.byte	0x4
 6265 019d 0C        		.uleb128 .LVL7-.LVL6
 6266 019e 12        		.uleb128 .LVL8-.LVL6
 6267 019f 01        		.uleb128 0x1
 6268 01a0 52        		.byte	0x52
 6269 01a1 04        		.byte	0x4
 6270 01a2 16        		.uleb128 .LVL10-.LVL6
 6271 01a3 32        		.uleb128 .LVL12-.LVL6
 6272 01a4 01        		.uleb128 0x1
 6273 01a5 52        		.byte	0x52
 6274 01a6 04        		.byte	0x4
 6275 01a7 36        		.uleb128 .LVL14-.LVL6
 6276 01a8 47        		.uleb128 .LVL15-1-.LVL6
 6277 01a9 01        		.uleb128 0x1
 6278 01aa 50        		.byte	0x50
 6279 01ab 04        		.byte	0x4
 6280 01ac 47        		.uleb128 .LVL15-1-.LVL6
 6281 01ad 52        		.uleb128 .LFE3-.LVL6
 6282 01ae 01        		.uleb128 0x1
 6283 01af 52        		.byte	0x52
 6284 01b0 00        		.byte	0
 6285               	.Ldebug_loc3:
 6286               		.section	.debug_aranges,"",@progbits
 6287 0000 0000 0024 		.long	0x24
 6288 0004 0002      		.word	0x2
 6289 0006 0000 0000 		.long	.Ldebug_info0
 6290 000a 04        		.byte	0x4
 6291 000b 00        		.byte	0
 6292 000c 0000      		.word	0
 6293 000e 0000      		.word	0
68K GAS  /tmp/ccdyPHKc.s 			page 140


 6294 0010 0000 0000 		.long	.Ltext0
 6295 0014 0000 1B42 		.long	.Letext0-.Ltext0
 6296 0018 0000 0000 		.long	.LFB8
 6297 001c 0000 003E 		.long	.LFE8-.LFB8
 6298 0020 0000 0000 		.long	0
 6299 0024 0000 0000 		.long	0
 6300               		.section	.debug_rnglists,"",@progbits
 6301               	.Ldebug_ranges0:
 6302 0000 0000 0038 		.long	.Ldebug_ranges3-.Ldebug_ranges2
 6303               	.Ldebug_ranges2:
 6304 0004 0005      		.word	0x5
 6305 0006 04        		.byte	0x4
 6306 0007 00        		.byte	0
 6307 0008 0000 0000 		.long	0
 6308               	.LLRL9:
 6309 000c 05        		.byte	0x5
 6310 000d 0000 0000 		.long	.LBB6
 6311 0011 04        		.byte	0x4
 6312 0012 00        		.uleb128 .LBB6-.LBB6
 6313 0013 10        		.uleb128 .LBE6-.LBB6
 6314 0014 04        		.byte	0x4
 6315 0015 F803      		.uleb128 .LBB8-.LBB6
 6316 0017 8804      		.uleb128 .LBE8-.LBB6
 6317 0019 00        		.byte	0
 6318               	.LLRL10:
 6319 001a 05        		.byte	0x5
 6320 001b 0000 0000 		.long	.LBB9
 6321 001f 04        		.byte	0x4
 6322 0020 00        		.uleb128 .LBB9-.LBB9
 6323 0021 E005      		.uleb128 .LBE9-.LBB9
 6324 0023 04        		.byte	0x4
 6325 0024 E006      		.uleb128 .LBB10-.LBB9
 6326 0026 9207      		.uleb128 .LBE10-.LBB9
 6327 0028 04        		.byte	0x4
 6328 0029 9A07      		.uleb128 .LBB11-.LBB9
 6329 002b C609      		.uleb128 .LBE11-.LBB9
 6330 002d 00        		.byte	0
 6331               	.LLRL11:
 6332 002e 07        		.byte	0x7
 6333 002f 0000 0000 		.long	.Ltext0
 6334 0033 C236      		.uleb128 .Letext0-.Ltext0
 6335 0035 07        		.byte	0x7
 6336 0036 0000 0000 		.long	.LFB8
 6337 003a 3E        		.uleb128 .LFE8-.LFB8
 6338 003b 00        		.byte	0
 6339               	.Ldebug_ranges3:
 6340               		.section	.debug_line,"",@progbits
 6341               	.Ldebug_line0:
 6342 0000 0000 09A5 		.section	.debug_str,"MS",@progbits,1
 6342      0003 0000 
 6342      00B9 0201 
 6342      FB0E 0D00 
 6342      0101 0101 
 6343               	.LASF32:
 6344 0000 7363 7265 		.string	"screen_width"
 6344      656E 5F77 
 6344      6964 7468 
68K GAS  /tmp/ccdyPHKc.s 			page 141


 6344      00
 6345               	.LASF44:
 6346 000d 7374 7263 		.string	"strcmp"
 6346      6D70 00
 6347               	.LASF10:
 6348 0014 7369 7A65 		.string	"size_t"
 6348      5F74 00
 6349               	.LASF47:
 6350 001b 7772 6974 		.string	"write"
 6350      6500 
 6351               	.LASF1:
 6352 0021 7661 5F6C 		.string	"va_list"
 6352      6973 7400 
 6353               	.LASF23:
 6354 0029 636C 6965 		.string	"client_nickname_set"
 6354      6E74 5F6E 
 6354      6963 6B6E 
 6354      616D 655F 
 6354      7365 7400 
 6355               	.LASF30:
 6356 003d 7469 705F 		.string	"tip_num"
 6356      6E75 6D00 
 6357               	.LASF59:
 6358 0045 6C61 7374 		.string	"last_runtime"
 6358      5F72 756E 
 6358      7469 6D65 
 6358      00
 6359               	.LASF46:
 6360 0052 7365 745F 		.string	"set_task"
 6360      7461 736B 
 6360      00
 6361               	.LASF70:
 6362 005b 5F5F 6275 		.string	"__builtin_memset"
 6362      696C 7469 
 6362      6E5F 6D65 
 6362      6D73 6574 
 6362      00
 6363               	.LASF9:
 6364 006c 6C6F 6E67 		.string	"long long unsigned int"
 6364      206C 6F6E 
 6364      6720 756E 
 6364      7369 676E 
 6364      6564 2069 
 6365               	.LASF42:
 6366 0083 696E 6974 		.string	"init_kernel"
 6366      5F6B 6572 
 6366      6E65 6C00 
 6367               	.LASF25:
 6368 008f 6D73 675F 		.string	"msg_buf"
 6368      6275 6600 
 6369               	.LASF34:
 6370 0097 7465 726D 		.string	"term_backspace"
 6370      5F62 6163 
 6370      6B73 7061 
 6370      6365 00
 6371               	.LASF26:
 6372 00a6 6D73 675F 		.string	"msg_buf_len"
68K GAS  /tmp/ccdyPHKc.s 			page 142


 6372      6275 665F 
 6372      6C65 6E00 
 6373               	.LASF39:
 6374 00b2 6865 6C70 		.string	"help_text"
 6374      5F74 6578 
 6374      7400 
 6375               	.LASF8:
 6376 00bc 6C6F 6E67 		.string	"long long int"
 6376      206C 6F6E 
 6376      6720 696E 
 6376      7400 
 6377               	.LASF2:
 6378 00ca 7369 676E 		.string	"signed char"
 6378      6564 2063 
 6378      6861 7200 
 6379               	.LASF21:
 6380 00d6 636C 6965 		.string	"client_nickname_color"
 6380      6E74 5F6E 
 6380      6963 6B6E 
 6380      616D 655F 
 6380      636F 6C6F 
 6381               	.LASF64:
 6382 00ec 7465 7374 		.string	"test3.c"
 6382      332E 6300 
 6383               	.LASF6:
 6384 00f4 6C6F 6E67 		.string	"long int"
 6384      2069 6E74 
 6384      00
 6385               	.LASF66:
 6386 00fd 5F5F 6275 		.string	"__builtin_va_list"
 6386      696C 7469 
 6386      6E5F 7661 
 6386      5F6C 6973 
 6386      7400 
 6387               	.LASF68:
 6388 010f 6661 7374 		.string	"fast_printf"
 6388      5F70 7269 
 6388      6E74 6600 
 6389               	.LASF51:
 6390 011b 696E 6974 		.string	"init_ui"
 6390      5F75 6900 
 6391               	.LASF12:
 6392 0123 756E 7369 		.string	"unsigned int"
 6392      676E 6564 
 6392      2069 6E74 
 6392      00
 6393               	.LASF48:
 6394 0130 7374 726C 		.string	"strlen"
 6394      656E 00
 6395               	.LASF7:
 6396 0137 6C6F 6E67 		.string	"long unsigned int"
 6396      2075 6E73 
 6396      6967 6E65 
 6396      6420 696E 
 6396      7400 
 6397               	.LASF67:
 6398 0149 7261 6E64 		.string	"rand"
68K GAS  /tmp/ccdyPHKc.s 			page 143


 6398      00
 6399               	.LASF29:
 6400 014e 7072 696E 		.string	"printf_buf"
 6400      7466 5F62 
 6400      7566 00
 6401               	.LASF5:
 6402 0159 7368 6F72 		.string	"short unsigned int"
 6402      7420 756E 
 6402      7369 676E 
 6402      6564 2069 
 6402      6E74 00
 6403               	.LASF27:
 6404 016c 636D 645F 		.string	"cmd_buf"
 6404      6275 6600 
 6405               	.LASF31:
 6406 0174 7363 7265 		.string	"screen_height"
 6406      656E 5F68 
 6406      6569 6768 
 6406      7400 
 6407               	.LASF20:
 6408 0182 6C61 7374 		.string	"last_keybuf_len"
 6408      5F6B 6579 
 6408      6275 665F 
 6408      6C65 6E00 
 6409               	.LASF61:
 6410 0192 736F 6D65 		.string	"some_num1"
 6410      5F6E 756D 
 6410      3100 
 6411               	.LASF57:
 6412 019c 736F 6D65 		.string	"some_num2"
 6412      5F6E 756D 
 6412      3200 
 6413               	.LASF45:
 6414 01a6 696E 6B65 		.string	"inkey"
 6414      7900 
 6415               	.LASF0:
 6416 01ac 5F5F 676E 		.string	"__gnuc_va_list"
 6416      7563 5F76 
 6416      615F 6C69 
 6416      7374 00
 6417               	.LASF17:
 6418 01bb 696E 6170 		.string	"inappcom"
 6418      7063 6F6D 
 6418      00
 6419               	.LASF28:
 6420 01c4 636D 645F 		.string	"cmd_buf_len"
 6420      6275 665F 
 6420      6C65 6E00 
 6421               	.LASF58:
 6422 01d0 7275 6E74 		.string	"runtime_clock"
 6422      696D 655F 
 6422      636C 6F63 
 6422      6B00 
 6423               	.LASF56:
 6424 01de 6C61 7374 		.string	"last_tip_changed"
 6424      5F74 6970 
 6424      5F63 6861 
68K GAS  /tmp/ccdyPHKc.s 			page 144


 6424      6E67 6564 
 6424      00
 6425               	.LASF18:
 6426 01ef 6B65 7970 		.string	"keypress"
 6426      7265 7373 
 6426      00
 6427               	.LASF63:
 6428 01f8 474E 5520 		.string	"GNU C17 11.4.0 -mcpu=68000 -msoft-float -g -O2 -fomit-frame-pointer"
 6428      4331 3720 
 6428      3131 2E34 
 6428      2E30 202D 
 6428      6D63 7075 
 6429               	.LASF40:
 6430 023c 6265 6769 		.string	"begin_sch"
 6430      6E5F 7363 
 6430      6800 
 6431               	.LASF15:
 6432 0246 5F42 6F6F 		.string	"_Bool"
 6432      6C00 
 6433               	.LASF52:
 6434 024c 6D61 696E 		.string	"main_app"
 6434      5F61 7070 
 6434      00
 6435               	.LASF3:
 6436 0255 756E 7369 		.string	"unsigned char"
 6436      676E 6564 
 6436      2063 6861 
 6436      7200 
 6437               	.LASF43:
 6438 0263 7374 726E 		.string	"strncmp"
 6438      636D 7000 
 6439               	.LASF4:
 6440 026b 7368 6F72 		.string	"short int"
 6440      7420 696E 
 6440      7400 
 6441               	.LASF33:
 6442 0275 6368 6174 		.string	"chat_row"
 6442      5F72 6F77 
 6442      00
 6443               	.LASF24:
 6444 027e 7465 726D 		.string	"term_input_col"
 6444      5F69 6E70 
 6444      7574 5F63 
 6444      6F6C 00
 6445               	.LASF16:
 6446 028d 696E 5F61 		.string	"in_alt_screen"
 6446      6C74 5F73 
 6446      6372 6565 
 6446      6E00 
 6447               	.LASF55:
 6448 029b 636F 6D6D 		.string	"command_bar"
 6448      616E 645F 
 6448      6261 7200 
 6449               	.LASF41:
 6450 02a7 696E 6974 		.string	"init_io"
 6450      5F69 6F00 
 6451               	.LASF11:
68K GAS  /tmp/ccdyPHKc.s 			page 145


 6452 02af 6C6F 6E67 		.string	"long double"
 6452      2064 6F75 
 6452      626C 6500 
 6453               	.LASF13:
 6454 02bb 6368 6172 		.string	"char"
 6454      00
 6455               	.LASF22:
 6456 02c0 636C 6965 		.string	"client_nickname"
 6456      6E74 5F6E 
 6456      6963 6B6E 
 6456      616D 6500 
 6457               	.LASF53:
 6458 02d0 7761 726E 		.string	"warn_length"
 6458      5F6C 656E 
 6458      6774 6800 
 6459               	.LASF38:
 6460 02dc 7469 705F 		.string	"tip_list"
 6460      6C69 7374 
 6460      00
 6461               	.LASF60:
 6462 02e5 7072 696E 		.string	"printf_buf_len"
 6462      7466 5F62 
 6462      7566 5F6C 
 6462      656E 00
 6463               	.LASF49:
 6464 02f4 7673 7072 		.string	"vsprintf"
 6464      696E 7466 
 6464      00
 6465               	.LASF36:
 6466 02fd 6D73 675F 		.string	"msg_input_prompt"
 6466      696E 7075 
 6466      745F 7072 
 6466      6F6D 7074 
 6466      00
 6467               	.LASF62:
 6468 030e 6172 6773 		.string	"args"
 6468      00
 6469               	.LASF69:
 6470 0313 6D65 6D73 		.string	"memset"
 6470      6574 00
 6471               	.LASF37:
 6472 031a 636F 6D6D 		.string	"command_prompt"
 6472      616E 645F 
 6472      7072 6F6D 
 6472      7074 00
 6473               	.LASF35:
 6474 0329 7465 726D 		.string	"term_line10"
 6474      5F6C 696E 
 6474      6531 3000 
 6475               	.LASF65:
 6476 0335 2F68 6F6D 		.string	"/home/students/5443962251"
 6476      652F 7374 
 6476      7564 656E 
 6476      7473 2F35 
 6476      3434 3339 
 6477               	.LASF54:
 6478 034f 7761 726E 		.string	"warn_empty"
68K GAS  /tmp/ccdyPHKc.s 			page 146


 6478      5F65 6D70 
 6478      7479 00
 6479               	.LASF50:
 6480 035a 6D61 696E 		.string	"main"
 6480      00
 6481               	.LASF19:
 6482 035f 6C61 7374 		.string	"last_keybuf"
 6482      5F6B 6579 
 6482      6275 6600 
 6483               	.LASF14:
 6484 036b 7275 6E74 		.string	"runtime"
 6484      696D 6500 
 6485               		.ident	"GCC: (GNU) 11.4.0"
68K GAS  /tmp/ccdyPHKc.s 			page 147


DEFINED SYMBOLS
                            *ABS*:0000000000000000 test3.c
     /tmp/ccdyPHKc.s:9      .text:0000000000000000 fast_printf
     /tmp/ccdyPHKc.s:3931   .bss:0000000000000008 printf_buf
     /tmp/ccdyPHKc.s:123    .text:0000000000000084 runtime_clock
     /tmp/ccdyPHKc.s:3913   .data:0000000000000004 screen_width
     /tmp/ccdyPHKc.s:3919   .data:0000000000000008 screen_height
     /tmp/ccdyPHKc.s:479    .text:0000000000000280 command_bar
     /tmp/ccdyPHKc.s:4001   .data:0000000000000024 inappcom
     /tmp/ccdyPHKc.s:3996   .data:0000000000000022 keypress
     /tmp/ccdyPHKc.s:3926   .bss:0000000000000000 tip_num
     /tmp/ccdyPHKc.s:4020   .bss:0000000000000238 i
     /tmp/ccdyPHKc.s:3873   .rodata:0000000000000093 tip_list
     /tmp/ccdyPHKc.s:4008   .bss:0000000000000232 in_alt_screen
     /tmp/ccdyPHKc.s:3985   .bss:0000000000000216 last_keybuf_len
     /tmp/ccdyPHKc.s:3990   .bss:000000000000021e last_keybuf
     /tmp/ccdyPHKc.s:3953   .bss:0000000000000144 msg_buf
     /tmp/ccdyPHKc.s:3890   .rodata:000000000000022d msg_input_prompt
     /tmp/ccdyPHKc.s:3937   .bss:000000000000006c cmd_buf_len
     /tmp/ccdyPHKc.s:3942   .bss:0000000000000074 cmd_buf
     /tmp/ccdyPHKc.s:3885   .rodata:0000000000000223 command_prompt
     /tmp/ccdyPHKc.s:3900   .rodata:0000000000000241 term_backspace
     /tmp/ccdyPHKc.s:3868   .rodata:0000000000000000 help_text
     /tmp/ccdyPHKc.s:1662   .text:0000000000000b4a main_app
     /tmp/ccdyPHKc.s:3948   .bss:000000000000013c msg_buf_len
     /tmp/ccdyPHKc.s:4014   .bss:0000000000000234 j
     /tmp/ccdyPHKc.s:3907   .data:0000000000000000 chat_row
     /tmp/ccdyPHKc.s:3970   .data:000000000000000c client_nickname
     /tmp/ccdyPHKc.s:3978   .data:0000000000000020 client_nickname_color
     /tmp/ccdyPHKc.s:3959   .bss:000000000000020c term_input_col
     /tmp/ccdyPHKc.s:3233   .text:00000000000016de init_ui
     /tmp/ccdyPHKc.s:3821   .text.startup:0000000000000000 main
     /tmp/ccdyPHKc.s:3895   .rodata:000000000000023a term_line10
     /tmp/ccdyPHKc.s:3964   .bss:0000000000000214 client_nickname_set

UNDEFINED SYMBOLS
vsprintf
strlen
write
__udivsi3
P
V
runtime
__modsi3
rand
inkey
strncmp
memset
init_kernel
init_io
set_task
begin_sch
