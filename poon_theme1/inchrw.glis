68K GAS  inchrw.s 			page 1


   1               	/*
   2               	.global inbyte                  | Export inbyte function to other files
   3               	
   4               	.text
   5               	.even
   6               	
   7               	inbyte:
   8               	    movem.l %d1-%d3, -(%sp)     | Save registers that will be used
   9               	inbyte_start:
  10               	    move.l	#1, %d0             | System call number for GETSTRING
  11               	    move.l	#0, %d1			    | Serial port number = 0
  12               	    move.l	#BUF_INBYTE, %d2    | Buffer address
  13               	    move.l	#1, %d3             | Buffer size = 1 byte
  14               	    trap	#0                  | Initiate system call to GETSTRING
  15               	
  16               	    cmpi.b	#1, %d0             | Check if GETSTRING was successful (1 byte read)
  17               	    bne     inbyte_start        | If not, try again
  18               	
  19               	    clr.l	%d0
  20               	    move.b  BUF_INBYTE, %d0     | Move byte from buffer to %d0
  21               	
  22               	    movem.l (%sp)+, %d1-%d3     | Restore registers
  23               	    rts                         | Return from function
  24               	
  25               	.section .bss
  26               	BUF_INBYTE: .ds.b 1             | 1 byte buffer for inbyte function
  27               	    .even
  28               	*/
  29               	
  30               	.global inbyte                  | Export inbyte function to other files
  31               	
  32               	.text
  33               	.even
  34               	
  35               	inbyte:
  36 0000 48E7 7000 	    movem.l %d1-%d3, -(%sp)     | Save registers %d1, %d2, %d3
  37               	inbyte_loop:
  38 0004 7001      	    move.l	#1, %d0             | System call number for GETSTRING
  39 0006 7200      	    move.l	#0, %d1             | Serial port number = 0
  40 0008 41F9 0000 	    lea	    	inbyte_buffer, %a0  | Load buffer address into %a0
  40      0000 
  41 000e 2408      	    move.l	%a0, %d2            | Pass buffer address to %d2
  42 0010 7601      	    move.l	#1, %d3             | Buffer size = 1 byte
  43 0012 4E40      	    trap	#0                  | Initiate system call to GETSTRING
  44               	
  45 0014 4A00      	    tst.b   %d0                 | Check if 1 byte was successfully read
  46 0016 6700 FFEC 	    beq     inbyte_loop         | Retry if no byte was read (result is zero)
  47               	
  48 001a 1039 0000 	    move.b  inbyte_buffer, %d0     | Load byte from buffer into %d0
  48      0000 
  49 0020 4CDF 000E 	    movem.l (%sp)+, %d1-%d3     | Restore saved registers
  50 0024 4E75      	    rts                         | Return from function
  51               	
  52               	.section .bss
  53 0000 00        	inbyte_buffer: .ds.b 1             | 1 byte buffer for inbyte function
  54 0001 00        	.even
  55               	
68K GAS  inchrw.s 			page 2


68K GAS  inchrw.s 			page 3


DEFINED SYMBOLS
            inchrw.s:35     .text:0000000000000000 inbyte
            inchrw.s:37     .text:0000000000000004 inbyte_loop
            inchrw.s:53     .bss:0000000000000000 inbyte_buffer

NO UNDEFINED SYMBOLS
